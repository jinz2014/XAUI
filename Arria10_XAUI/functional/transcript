# //  ModelSim SE-64 10.1 Dec  5 2011 Linux 2.6.18-308.4.1.el5.cny5.6509
# //
# //  Copyright 1991-2011 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //
# vsim -L ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141 -L ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141 -L ../xaui_phy/sim/mentor/libraries/twentynm_ver -L ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver -L ../xaui_phy/sim/mentor/libraries/twentynm_hip_ver -L ../xaui_phy/sim/mentor/libraries/altera_ver -L ../xaui_phy/sim/mentor/libraries/lpm_ver -L ../xaui_phy/sim/mentor/libraries/sgate_ver -L ../xaui_phy/sim/mentor/libraries/altera_mf_ver -L ../xaui_phy/sim/mentor/libraries/altera_lnsim_ver -L ../atxpll/sim/mentor/libraries/atxpll_altera_xcvr_atx_pll_a10_141 -voptargs=+acc -t ps work.xaui_phy_atxpll_tb 
# Loading work.xaui_phy_atxpll_tb(fast)
# Loading work.atxpll(fast)
# Loading sv_std.std
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_native_avmm_nf(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_cgb_master(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_lc_refclk_select_mux(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_atx_pll(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_avmm(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_avmm_if(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_resync(fast)
# Loading work.xaui_phy(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.altera_xcvr_functions(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.altera_xcvr_xaui_sv_unit(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.altera_xcvr_xaui(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.a10_xcvr_xaui(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.sxaui(fast)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.altsyncram(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.altsyncram_body(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.ALTERA_DEVICE_FAMILIES(fast)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION(fast)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.altsyncram(fast)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.altsyncram_body(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.a10_xcvr_custom_native(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.altera_xcvr_native_a10(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_native_avmm_nf(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native_rev_20nm5(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pma_rev_20nm5(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_adaptation(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_cdr_refclk_select_mux(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_channel_pll(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_rx_buf(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_rx_deser(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_rx_dfe(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_rx_odi(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_rx_sd(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_tx_buf(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_tx_cgb(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_tx_ser(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pcs_rev_20nm5(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_10g_rx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_10g_tx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_8g_rx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_8g_tx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_common_pcs_pma_interface(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_common_pld_pcs_interface(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_fifo_rx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_fifo_tx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_gen3_rx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_gen3_tx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_krfec_rx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_krfec_tx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pipe_gen1_2(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pipe_gen3(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_rx_pcs_pma_interface(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_rx_pld_pcs_interface(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_tx_pcs_pma_interface(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_tx_pld_pcs_interface(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_avmm(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_avmm_if(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native_rev_20nm5(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pma_rev_20nm5(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_tx_buf(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pcs_rev_20nm5(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_10g_tx_pcs(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native_rev_20nm5(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pma_rev_20nm5(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_tx_buf(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pcs_rev_20nm5(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_10g_tx_pcs(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_8g_rx_pcs(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_8g_tx_pcs(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_tx_pld_pcs_interface(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native_rev_20nm5(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pma_rev_20nm5(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_tx_buf(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pcs_rev_20nm5(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_10g_tx_pcs(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_8g_rx_pcs(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_8g_tx_pcs(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_tx_pld_pcs_interface(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_mgmt2dec_xaui(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.altera_xcvr_reset_control(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_reset_counter(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_resync(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_reset_counter(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_reset_counter(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_resync(fast__4)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_reset_counter(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_reset_counter(fast__4)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_pma_controller_tgx(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.altera_wait_generate(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_resync(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_reset_ctrl_lego(fast)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.altera_std_synchronizer(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_csr_common_h(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_csr_common(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.hxaui_csr_h(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.hxaui_csr(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_resync(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_mgmt2dec_phyreconfig(fast)
# Loading work.xaui_monitor(fast)
#  
do wave.do
# ** Error: (vish-4014) No objects found matching '/xaui_phy_atxpll_tb/reconfig_to_xcvr'.
# Executing ONERROR command at macro ./wave.do line 8
# ** Error: (vish-4014) No objects found matching '/xaui_phy_atxpll_tb/reconfig_from_xcvr'.
# Executing ONERROR command at macro ./wave.do line 9
# ** Error: (vish-4014) No objects found matching '/xaui_phy_atxpll_tb/reconfig_busy'.
# Executing ONERROR command at macro ./wave.do line 10
add wave -position 5  sim:/xaui_phy_atxpll_tb/tx_bonding_clocks
add wave -position 6  sim:/xaui_phy_atxpll_tb/pll_cal_busy
add wave -position 7  sim:/xaui_phy_atxpll_tb/pll_locked
add wave -position 8  sim:/xaui_phy_atxpll_tb/pll_powerdown
add wave -position 9  sim:/xaui_phy_atxpll_tb/mcgb_rst
write format wave -window .main_pane.wave.interior.cs.body.pw.wf /share/jinz/Altera/Arria10/XAUI/functional/wave.do
run -a
# ================ INPUT =================
# prot_mode        = basic_tx
# input_select     = lcpll_top
# ================ OUTPUT ================
# x1_clock_source_sel = lcpll_top
# ================ END ===================
# 
# 
# 
# ================================================
# Module twentynm_hssi_pma_cgb_master
# ================================================
# bonding_reset_enable = allow_bonding_reset
# cgb_enable_iqtxrxclk = disable_iqtxrxclk
# cgb_power_down = normal_cgb
# datarate = 6250000000 bps
# dft_iqtxrxclk_control = dft_iqtxrxclk_drv_low
# initial_settings = true
# input_select = lcpll_top
# input_select_gen3 = unused
# master_cgb_clock_control0 = master_cgb_no_dft_control0
# master_cgb_clock_control1 = master_cgb_no_dft_control1
# master_cgb_clock_control2 = master_cgb_no_dft_control2
# master_cgb_clock_control3 = master_cgb_no_dft_control3
# master_cgb_clock_control4 = master_cgb_no_dft_control4
# master_cgb_clock_control5 = master_cgb_no_dft_control5
# mcgb_high_perf_datarate_limit_bin = 0000000000000000
# mcgb_high_perf_voltage = 000
# mcgb_low_power_datarate_limit_bin = 0000000000000000
# mcgb_low_power_voltage = 000
# mcgb_mid_power_datarate_limit_bin = 0000000000000000
# mcgb_mid_power_voltage = 000
# observe_cgb_clocks = observe_nothing
# optimal = true
# pcie_gen3_bitwidth = pciegen3_wide
# powerdown_mode = powerup
# prot_mode = basic_tx
# scratch0_x1_clock_src = unused
# scratch1_x1_clock_src = unused
# scratch2_x1_clock_src = unused
# scratch3_x1_clock_src = unused
# ser_mode = twenty_bit
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_ucontrol_en = disable
# tx_ucontrol_pcie = gen1
# tx_ucontrol_reset = disable
# vccdreg_output = vccdreg_nominal
# local_x1_clock_source_sel = lcpll_top
# x1_div_m_sel = divbypass
# 
# 
# ================================================
# Module twentynm_hssi_pma_lc_refclk_select_mux
# ================================================
# inclk0_logical_to_physical_mapping = ref_iqclk0
# inclk1_logical_to_physical_mapping = power_down
# inclk2_logical_to_physical_mapping = power_down
# inclk3_logical_to_physical_mapping = power_down
# inclk4_logical_to_physical_mapping = power_down
# powerdown_mode = powerup
# refclk_select = ref_iqclk0
# silicon_rev = 20nm5
# local_xmux_lc_scratch0_src = scratch0_src_iqclk
# local_xmux_lc_scratch1_src = scratch1_src_iqclk
# local_xmux_lc_scratch2_src = scratch2_src_iqclk
# local_xmux_lc_scratch3_src = scratch3_src_iqclk
# local_xmux_lc_scratch4_src = scratch4_src_iqclk
# local_xmux_refclk_src = src_iqclk
# local_xpm_iqref_mux_iqclk_sel = ref_iqclk0
# local_xpm_iqref_mux_scratch0_src = scratch0_ref_iqclk0
# local_xpm_iqref_mux_scratch1_src = scratch1_power_down
# local_xpm_iqref_mux_scratch2_src = scratch2_power_down
# local_xpm_iqref_mux_scratch3_src = scratch3_power_down
# local_xpm_iqref_mux_scratch4_src = scratch4_power_down
# 
# ERROR: Module xaui_phy_atxpll_tb.atxpll.xcvr_atx_pll_a10_0.<protected>.<protected>.twentynm_atx_pll_encrypted_inst : Invalid parameter 'dsm_fractional_division' value of -2147483648
# Valid values are: from 0 to 
# 
# ================================================
# Module twentynm_atx_pll
# ================================================
# analog_mode = user_custom
# bandwidth_range_high = 0 hz
# bandwidth_range_low = 0 hz
# bonding = cpri_bonding
# bw_sel = medium
# cal_status = cal_done
# calibration_mode = cal_off
# cascadeclk_test = cascadetest_off
# cgb_div =           1
# clk_high_perf_voltage = 000
# clk_low_power_voltage = 000
# clk_mid_power_voltage = 000
# cp_compensation_enable = false
# cp_current_setting = cp_current_setting34
# cp_lf_3rd_pole_freq = lf_3rd_pole_setting1
# cp_lf_order = lf_3rd_order
# cp_testmode = cp_normal
# d2a_voltage = d2a_disable
# datarate = 6250000000 bps
# device_variant = device1
# dprio_clk_vreg_boost_expected_voltage = 000
# dprio_clk_vreg_boost_scratch = 0
# dprio_clk_vreg_boost_step_size = 00
# dprio_lc_vreg1_boost_expected_voltage = 000
# dprio_lc_vreg1_boost_scratch = 0
# dprio_lc_vreg_boost_expected_voltage = 000
# dprio_lc_vreg_boost_scratch = 0
# dprio_mcgb_vreg_boost_expected_voltage = 000
# dprio_mcgb_vreg_boost_scratch = 0
# dprio_mcgb_vreg_boost_step_size = 00
# dprio_vreg1_boost_step_size = 00
# dprio_vreg_boost_step_size = 00
# dsm_ecn_bypass = false
# dsm_ecn_test_en = false
# dsm_fractional_division = -2147483648
# dsm_fractional_value_ready = pll_k_ready
# dsm_mode = dsm_mode_phase
# dsm_out_sel = pll_dsm_3rd_order
# enable_hclk = hclk_disabled
# enable_lc_calibration = false
# enable_lc_vreg_calibration = false
# expected_lc_boost_voltage = 000
# f_max_pfd = 0 hz
# f_max_pfd_fractional = 0 hz
# f_max_ref = 0 hz
# f_max_tank_0 = 0 hz
# f_max_tank_1 = 0 hz
# f_max_tank_2 = 0 hz
# f_max_vco = 0 hz
# f_max_vco_fractional = 0 hz
# f_max_x1 = 0 hz
# f_min_pfd = 0 hz
# f_min_ref = 0 hz
# f_min_tank_0 = 0 hz
# f_min_tank_1 = 0 hz
# f_min_tank_2 = 0 hz
# f_min_vco = 0 hz
# fb_select = direct_fb
# hclk_divide =           1
# initial_settings = true
# iqclk_mux_sel = iqtxrxclk0
# is_cascaded_pll = false
# l_counter_scratch =  1
# l_counter_enable = true
# l_counter_scratch = 01
# lc_atb = atb_selectdisable
# lc_mode = lccmu_normal
# lf_cbig_size = lf_cbig_setting4
# lf_resistance = lf_setting1
# lf_ripplecap = lf_ripple_cap_0
# m_counter =          62
# max_fractional_percentage = 00
# min_fractional_percentage = 00
# n_counter_scratch = 1
# output_clock_frequency = 3125000000 Hz
# output_regulator_supply = vreg1v_setting1
# overrange_voltage = over_setting3
# pm_speed_grade = e2
# pma_width =          20
# power_mode = low_power
# power_rail_et =           0
# powerdown_mode = powerup
# prot_mode = basic_tx
# ref_clk_div =           1
# reference_clock_frequency = 100000000 Hz
# regulator_bypass = reg_enable
# side = side_unknown
# silicon_rev = 20nm5
# sup_mode = user_mode
# tank_band = lc_band0
# tank_sel = lctank0
# tank_voltage_coarse = vreg_setting_coarse1
# tank_voltage_fine = vreg_setting3
# top_or_bottom = tb_unknown
# underrange_voltage = under_setting3
# vccdreg_clk = vreg_clk0
# vccdreg_fb = vreg_fb0
# vccdreg_fw = vreg_fw0
# vco_bypass_enable = false
# vco_freq = 12500000000 Hz
# 
# 
# ================================================
# Module twentynm_hssi_pma_adaptation
# ================================================
# adapt_dfe_control_sel = r_adapt_dfe_control_sel_0
# adapt_dfe_sel = r_adapt_dfe_sel_0
# adapt_mode = manual
# adapt_vga_sel = r_adapt_vga_sel_0
# adapt_vref_sel = r_adapt_vref_sel_0
# adp_1s_ctle_bypass = radp_1s_ctle_bypass_0
# adp_4s_ctle_bypass = radp_4s_ctle_bypass_0
# adp_adapt_control_sel = radp_adapt_control_sel_0
# adp_adapt_rstn = radp_adapt_rstn_1
# adp_adapt_start = radp_adapt_start_0
# adp_bist_auxpath_en = radp_bist_auxpath_disable
# adp_bist_count_rstn = radp_bist_count_rstn_0
# adp_bist_datapath_en = radp_bist_datapath_disable
# adp_bist_mode = radp_bist_mode_0
# adp_bist_odi_dfe_sel = radp_bist_odi_dfe_sel_0
# adp_bist_spec_en = radp_bist_spec_en_0
# adp_control_mux_bypass = radp_control_mux_bypass_0
# adp_ctle_acgain_4s = radp_ctle_acgain_4s_0
# adp_ctle_adapt_bw = radp_ctle_adapt_bw_3
# adp_ctle_adapt_cycle_window = radp_ctle_adapt_cycle_window_6
# adp_ctle_adapt_oneshot = radp_ctle_adapt_oneshot_1
# adp_ctle_en = radp_ctle_disable
# adp_ctle_eqz_1s_sel = radp_ctle_eqz_1s_sel_0
# adp_ctle_force_spec_sign = radp_ctle_force_spec_sign_0
# adp_ctle_hold_en = radp_ctle_not_held
# adp_ctle_load = radp_ctle_load_0
# adp_ctle_load_value = radp_ctle_load_value_0
# adp_ctle_scale = radp_ctle_scale_0
# adp_ctle_scale_en = radp_ctle_scale_en_0
# adp_ctle_spec_sign = radp_ctle_spec_sign_0
# adp_ctle_sweep_direction = radp_ctle_sweep_direction_1
# adp_ctle_threshold = radp_ctle_threshold_0
# adp_ctle_threshold_en = radp_ctle_threshold_en_0
# adp_ctle_vref_polarity = radp_ctle_vref_polarity_0
# adp_ctle_window = radp_ctle_window_0
# adp_dfe_bw = radp_dfe_bw_3
# adp_dfe_clkout_div_sel = radp_dfe_clkout_div_sel_0
# adp_dfe_cycle = radp_dfe_cycle_6
# adp_dfe_fltap1 = radp_dfe_fltap1_0
# adp_dfe_fltap1_sgn = radp_dfe_fltap1_sgn_0
# adp_dfe_fltap2 = radp_dfe_fltap2_0
# adp_dfe_fltap2_sgn = radp_dfe_fltap2_sgn_0
# adp_dfe_fltap3 = radp_dfe_fltap3_0
# adp_dfe_fltap3_sgn = radp_dfe_fltap3_sgn_0
# adp_dfe_fltap4 = radp_dfe_fltap4_0
# adp_dfe_fltap4_sgn = radp_dfe_fltap4_sgn_0
# adp_dfe_fltap_bypass = radp_dfe_fltap_bypass_0
# adp_dfe_fltap_en = radp_dfe_fltap_disable
# adp_dfe_fltap_hold_en = radp_dfe_fltap_not_held
# adp_dfe_fltap_load = radp_dfe_fltap_load_0
# adp_dfe_fltap_position = radp_dfe_fltap_position_0
# adp_dfe_force_spec_sign = radp_dfe_force_spec_sign_0
# adp_dfe_fxtap1 = radp_dfe_fxtap1_0
# adp_dfe_fxtap2 = radp_dfe_fxtap2_0
# adp_dfe_fxtap2_sgn = radp_dfe_fxtap2_sgn_0
# adp_dfe_fxtap3 = radp_dfe_fxtap3_0
# adp_dfe_fxtap3_sgn = radp_dfe_fxtap3_sgn_0
# adp_dfe_fxtap4 = radp_dfe_fxtap4_0
# adp_dfe_fxtap4_sgn = radp_dfe_fxtap4_sgn_0
# adp_dfe_fxtap5 = radp_dfe_fxtap5_0
# adp_dfe_fxtap5_sgn = radp_dfe_fxtap5_sgn_0
# adp_dfe_fxtap6 = radp_dfe_fxtap6_0
# adp_dfe_fxtap6_sgn = radp_dfe_fxtap6_sgn_0
# adp_dfe_fxtap7 = radp_dfe_fxtap7_0
# adp_dfe_fxtap7_sgn = radp_dfe_fxtap7_sgn_0
# adp_dfe_fxtap_bypass = radp_dfe_fxtap_bypass_0
# adp_dfe_fxtap_en = radp_dfe_fxtap_disable
# adp_dfe_fxtap_hold_en = radp_dfe_fxtap_not_held
# adp_dfe_fxtap_load = radp_dfe_fxtap_load_0
# adp_dfe_mode = radp_dfe_mode_0
# adp_dfe_spec_sign = radp_dfe_spec_sign_0
# adp_dfe_vref_polarity = radp_dfe_vref_polarity_0
# adp_force_freqlock = radp_force_freqlock_off
# adp_frame_capture = radp_frame_capture_0
# adp_frame_en = radp_frame_en_0
# adp_frame_odi_sel = radp_frame_odi_sel_0
# adp_frame_out_sel = radp_frame_out_sel_0
# adp_lfeq_fb_sel = radp_lfeq_fb_sel_0
# adp_mode = radp_mode_0
# adp_odi_control_sel = radp_odi_control_sel_0
# adp_onetime_dfe = radp_onetime_dfe_1
# adp_spec_avg_window = radp_spec_avg_window_4
# adp_spec_trans_filter = radp_spec_trans_filter_2
# adp_status_sel = radp_status_sel_0
# adp_vga_bypass = radp_vga_bypass_0
# adp_vga_en = radp_vga_disable
# adp_vga_load = radp_vga_load_0
# adp_vga_polarity = radp_vga_polarity_0
# adp_vga_sel = radp_vga_sel_0
# adp_vga_sweep_direction = radp_vga_sweep_direction_1
# adp_vga_threshold = radp_vga_threshold_4
# adp_vref_bw = radp_vref_bw_1
# adp_vref_bypass = radp_vref_bypass_0
# adp_vref_cycle = radp_vref_cycle_6
# adp_vref_dfe_spec_en = radp_vref_dfe_spec_en_0
# adp_vref_en = radp_vref_disable
# adp_vref_hold_en = radp_vref_not_held
# adp_vref_load = radp_vref_load_0
# adp_vref_polarity = radp_vref_polarity_0
# adp_vref_sel = radp_vref_sel_21
# adp_vref_vga_level = radp_vref_vga_level_13
# datarate = 3125000000 bps
# initial_settings = true
# odi_count_threshold = rodi_count_threshold_0
# odi_dfe_spec_en = rodi_dfe_spec_en_0
# odi_en = rodi_en_0
# odi_mode = rodi_mode_0
# odi_rstn = rodi_rstn_0
# odi_spec_sel = rodi_spec_sel_0
# odi_start = rodi_start_0
# odi_vref_sel = rodi_vref_sel_0
# optimal = false
# prot_mode = basic_rx
# rrx_pcie_eqz = rrx_pcie_eqz_0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_cdr_refclk_select_mux
# ================================================
# local_cdr_clkin_scratch0_src = cdr_clkin_scratch0_src_refclk_iqclk
# local_cdr_clkin_scratch1_src = cdr_clkin_scratch1_src_refclk_iqclk
# local_cdr_clkin_scratch2_src = cdr_clkin_scratch2_src_refclk_iqclk
# local_cdr_clkin_scratch3_src = cdr_clkin_scratch3_src_refclk_iqclk
# local_cdr_clkin_scratch4_src = cdr_clkin_scratch4_src_refclk_iqclk
# inclk0_logical_to_physical_mapping = ref_iqclk0
# inclk1_logical_to_physical_mapping = ref_iqclk1
# inclk2_logical_to_physical_mapping = ref_iqclk2
# inclk3_logical_to_physical_mapping = ref_iqclk3
# inclk4_logical_to_physical_mapping = ref_iqclk4
# powerdown_mode = powerup
# receiver_detect_src = iqclk_src
# refclk_select = ref_iqclk0
# silicon_rev = 20nm5
# local_xmux_refclk_src = refclk_iqclk
# local_xpm_iqref_mux_iqclk_sel = ref_iqclk0
# local_xpm_iqref_mux_scratch0_src = scratch0_ref_iqclk0
# local_xpm_iqref_mux_scratch1_src = scratch1_ref_iqclk1
# local_xpm_iqref_mux_scratch2_src = scratch2_ref_iqclk2
# local_xpm_iqref_mux_scratch3_src = scratch3_ref_iqclk3
# local_xpm_iqref_mux_scratch4_src = scratch4_ref_iqclk4
# 
# 
# ================================================
# Module twentynm_hssi_pma_channel_pll
# ================================================
# analog_mode = user_custom
# atb_select_control = atb_off
# auto_reset_on = auto_reset_off
# bandwidth_range_high = 0 hz
# bandwidth_range_low = 0 hz
# bbpd_data_pattern_filter_select = bbpd_data_pat_off
# bw_sel = medium
# cdr_odi_select = sel_cdr
# cdr_phaselock_mode = no_ignore_lock
# cdr_powerdown_mode = power_up
# cgb_div =           1
# chgpmp_current_pd = cp_current_pd_setting2
# chgpmp_current_pfd = cp_current_pfd_setting3
# chgpmp_replicate = false
# chgpmp_testmode = cp_test_disable
# clklow_mux_select = clklow_mux_cdr_fbclk
# datarate = 3125000000 bps
# diag_loopback_enable = false
# disable_up_dn = true
# f_max_pfd = 0 hz
# f_max_ref = 0 hz
# f_max_vco = 0 hz
# f_min_gt_channel = 0 hz
# f_min_pfd = 0 hz
# f_min_ref = 0 hz
# f_min_vco = 0 hz
# fb_select = direct_fb
# fref_clklow_div =           1
# fref_mux_select = fref_mux_cdr_refclk
# gpon_lck2ref_control = gpon_lck2ref_off
# initial_settings = true
# iqclk_mux_sel = power_down
# is_cascaded_pll = false
# lck2ref_delay_control = lck2ref_delay_2
# lf_resistor_pd = lf_pd_setting0
# lf_resistor_pfd = lf_pfd_setting2
# lf_ripple_cap = lf_no_ripple
# loop_filter_bias_select = lpflt_bias_off
# loopback_mode = loopback_disabled
# lpd_counter = 04
# lpfd_counter = 08
# ltd_ltr_micro_controller_select = ltd_ltr_pcs
# m_counter =          10
# n_counter_scratch =  2
# n_counter_scratch = 02
# optimal = false
# output_clock_frequency = 1562500000 Hz
# pcie_gen = non_pcie
# pd_fastlock_mode = false
# pd_l_counter =           4
# pfd_l_counter =           8
# pm_speed_grade = e2
# pma_width =          20
# position = position_unknown
# power_mode = low_power
# primary_use = cdr
# prot_mode = basic_rx
# reference_clock_frequency = 156250000 hz
# requires_gt_capable_channel = false
# reverse_serial_loopback = no_loopback
# set_cdr_v2i_enable = true
# set_cdr_vco_reset = false
# set_cdr_vco_speed = 07
# set_cdr_vco_speed_fix = 06
# set_cdr_vco_speed_pciegen3 = cdr_vco_max_speedbin_pciegen3
# side = side_unknown
# silicon_rev = 20nm5
# sup_mode = user_mode
# top_or_bottom = tb_unknown
# tx_pll_prot_mode = txpll_unused
# txpll_hclk_driver_enable = false
# uc_cru_rstb = cdr_lf_reset_off
# uc_ro_cal = uc_ro_cal_on
# uc_ro_cal_status = uc_ro_cal_notdone
# vco_freq = 6250000000 Hz
# vco_overrange_voltage = vco_overrange_off
# vco_underrange_voltage = vco_underange_off
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_buf
# ================================================
# act_isource_disable = isrc_en
# bodybias_enable = bodybias_en
# bodybias_select = bodybias_sel1
# bypass_eqz_stages_234 = bypass_off
# cdrclk_to_cgb = cdrclk_2cgb_dis
# cgm_bias_disable = cgmbias_en
# datarate = 3125000000 bps
# diag_lp_en = dlp_off
# eq_bw_sel = eq_bw_1
# eq_dc_gain_trim = no_dc_gain
# xrx_path_initial_settings = true
# input_vcm_sel = high_vcm
# iostandard = hssi_diffio
# lfeq_enable = non_lfeq_mode
# lfeq_zero_control = lfeq_setting_2
# link_rx = sr
# link_rx = sr
# loopback_modes = lpbk_disable
# offset_cal_pd = eqz1_en
# offset_cancellation_coarse = coarse_setting_00
# offset_cancellation_ctrl = volt_0mv
# offset_cancellation_fine = fine_setting_00
# offset_pd = oc_en
# one_stage_enable = non_s1_mode
# xrx_path_optimal = false
# pdb_rx = normal_rx_on
# pm_speed_grade = e2
# pm_tx_rx_cvp_mode = cvp_off
# pm_tx_rx_pcie_gen = non_pcie
# pm_tx_rx_pcie_gen_bitwidth = pcie_gen3_32b
# pm_tx_rx_testmux_select = setting0
# power_mode_rx = low_power
# power_mode_rx = low_power
# power_rail_eht =           0
# power_rail_er =           0
# xrx_path_prot_mode = basic_rx
# qpi_enable = non_qpi_mode
# refclk_en = disable
# rx_atb_select = atb_disable
# rx_refclk_divider = bypass_divider
# rx_sel_bias_source = bias_vcmdrv
# silicon_rev = 20nm5
# xrx_path_sup_mode = user_mode
# term_sel = r_r1
# term_tri_enable = disable_tri
# vccela_supply_voltage = vccela_1p1v
# vcm_current_add = vcm_current_default
# vcm_sel = vcm_setting_10
# vga_bandwidth_select = vga_bw_1
# xrx_path_analog_mode = user_custom
# xrx_path_datarate = 3125000000 bps
# xrx_path_datawidth = 14
# xrx_path_gt_enabled = disable
# xrx_path_initial_settings = true
# xrx_path_jtag_hys = hys_increase_disable
# xrx_path_jtag_lp = lp_off
# xrx_path_optimal = false
# xrx_path_pma_rx_divclk_hz_bin = 0000000009502f90
# xrx_path_prot_mode = basic_rx
# xrx_path_sup_mode = user_mode
# xrx_path_uc_cal_enable = rx_cal_off
# xrx_path_uc_cru_rstb = cdr_lf_reset_off
# xrx_path_uc_pcie_sw = uc_pcie_gen1
# xrx_path_uc_rx_rstb = rx_reset_on
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_deser
# ================================================
# bitslip_bypass = bs_bypass_yes
# clkdiv_source = vco_bypass_normal
# clkdivrx_user_mode = clkdivrx_user_disabled
# datarate = 3125000000 bps
# deser_factor =          20
# deser_powerdown = deser_power_up
# force_adaptation_outputs = normal_outputs
# force_clkdiv_for_testing = normal_clkdiv
# optimal = false
# pcie_gen = non_pcie
# pcie_gen_bitwidth = pcie_gen3_32b
# prot_mode = basic_rx
# rst_n_adapt_odi = no_rst_adapt_odi
# sdclk_enable = false
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_dfe
# ================================================
# atb_select = atb_disable
# datarate = 3125000000 bps
# dft_en = dft_disable
# initial_settings = true
# oc_sa_adp1 = 00
# oc_sa_adp2 = 00
# oc_sa_c270 = 00
# oc_sa_c90 = 00
# oc_sa_d0c0 = 00
# oc_sa_d0c180 = 00
# oc_sa_d1c0 = 00
# oc_sa_d1c180 = 00
# optimal = false
# pdb = 6466655f656e61626c65
# pdb_fixedtap = fixtap_dfe_powerdown
# pdb_floattap = floattap_dfe_powerdown
# pdb_fxtap4t7 = fxtap4t7_powerdown
# power_mode = low_power
# prot_mode = basic_rx
# sel_fltapstep_dec = fltap_step_no_dec
# sel_fltapstep_inc = fltap_step_no_inc
# sel_fxtapstep_dec = fxtap_step_no_dec
# sel_fxtapstep_inc = fxtap_step_no_inc
# sel_oc_en = off_canc_disable
# sel_probe_tstmx = probe_tstmx_none
# silicon_rev = 20nm5
# sup_mode = user_mode
# uc_rx_dfe_cal = uc_rx_dfe_cal_off
# uc_rx_dfe_cal_status = uc_rx_dfe_cal_notdone
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_odi
# ================================================
# clk_dcd_bypass = no_bypass
# datarate = 3125000000 bps
# enable_odi = power_down_eye
# initial_settings = true
# invert_dfe_vref = no_inversion
# monitor_bw_sel = bw_1
# oc_sa_c0 = 00
# oc_sa_c180 = 00
# optimal = false
# phase_steps_64_vs_128 = phase_steps_64
# phase_steps_sel = step40
# power_mode = low_power
# prot_mode = basic_rx
# sel_oc_en = off_canc_disable
# silicon_rev = 20nm5
# step_ctrl_sel = feedback_mode
# sup_mode = user_mode
# v_vert_sel = plus
# v_vert_threshold_scaling = scale_3
# vert_threshold = vert_0
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_sd
# ================================================
# link = sr
# optimal = false
# power_mode = low_power
# prot_mode = basic_rx
# sd_output_off =           1
# sd_output_on =          15
# sd_pdb = sd_off
# sd_threshold =           3
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_buf
# ================================================
# xtx_path_calibration_en = false
# compensation_driver_en = disable
# compensation_en = enable
# cpen_ctrl = cp_l0
# datarate = 3125000000 bps
# dcd_detection_en = enable
# dft_sel = dft_disabled
# duty_cycle_correction_bandwidth = dcc_bw_12
# duty_cycle_correction_mode_ctrl = dcc_disable
# duty_cycle_correction_reference1 = dcc_ref1_3
# duty_cycle_correction_reference2 = dcc_ref2_3
# duty_cycle_correction_reset_n = reset_n
# duty_cycle_input_polarity = dcc_input_pos
# duty_cycle_setting = dcc_t32
# duty_cycle_setting_aux = dcc2_t32
# xtx_path_initial_settings = true
# jtag_drv_sel = drv1
# jtag_lp = lp_off
# link_tx = sr
# link_tx = sr
# low_power_en = disable
# lst = 6174625f64697361626c6564
# mcgb_location_for_pcie = a
# xtx_path_optimal = false
# pm_speed_grade = e2
# power_mode = low_power
# power_rail_eht =           0
# power_rail_et =           0
# pre_emp_sign_1st_post_tap = fir_post_1t_neg
# pre_emp_sign_2nd_post_tap = fir_post_2t_neg
# pre_emp_sign_pre_tap_1t = fir_pre_1t_neg
# pre_emp_sign_pre_tap_2t = fir_pre_2t_neg
# pre_emp_switching_ctrl_1st_post_tap = 00
# pre_emp_switching_ctrl_2nd_post_tap = 0
# pre_emp_switching_ctrl_pre_tap_1t = 00
# pre_emp_switching_ctrl_pre_tap_2t = 0
# xtx_path_prot_mode = basic_tx
# res_cal_local = non_local
# rx_det = mode_0
# rx_det_output_sel = rx_det_pcie_out
# rx_det_pdb = rx_det_off
# ser_powerdown = normal_ser_on
# silicon_rev = 20nm5
# slew_rate_ctrl = slew_r7
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# term_code = rterm_code7
# term_n_tune = rterm_n0
# term_p_tune = rterm_p0
# term_sel = r_r1
# tx_powerdown = normal_tx_on
# uc_dcd_cal = uc_dcd_cal_off
# uc_dcd_cal_status = uc_dcd_cal_notdone
# uc_gen3 = gen3_off
# uc_gen4 = gen4_off
# uc_skew_cal = uc_skew_cal_off
# uc_skew_cal_status = uc_skew_cal_notdone
# uc_txvod_cal = uc_tx_vod_cal_off
# uc_txvod_cal_cont = uc_tx_vod_cal_cont_off
# uc_txvod_cal_status = uc_tx_vod_cal_notdone
# uc_vcc_setting = vcc_setting0
# user_fir_coeff_ctrl_sel = ram_ctl
# vod_output_swing_ctrl = 00
# vreg_output = vccdreg_nominal
# xtx_path_analog_mode = user_custom
# xtx_path_bonding_mode = x1_non_bonded
# xtx_path_calibration_en = false
# xtx_path_clock_divider_ratio = 1
# xtx_path_datarate = 3125000000 bps
# xtx_path_datawidth = 14
# xtx_path_gt_enabled = disable
# xtx_path_initial_settings = true
# xtx_path_optimal = false
# xtx_path_pma_tx_divclk_hz_bin = 0000000009502f90
# xtx_path_prot_mode = basic_tx
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# xtx_path_tx_pll_clk_hz = 1562500000
# 
# ================ INPUT =================
# prot_mode           = basic_tx
# input_select_x1     = unused
# input_select_xn     = sel_x6_dn
# input_select_gen3   = unused
# ================ OUTPUT ================
# x1_clock_source_sel = same_ch_txpll
# xn_clock_source_sel = sel_x6_bot
# ================ END ===================
# 
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_cgb
# ================================================
# bitslip_enable = disable_bitslip
# bonding_mode = x1_non_bonded
# bonding_reset_enable = disallow_bonding_reset
# cgb_power_down = normal_cgb
# datarate = 3125000000 bps
# dprio_cgb_vreg_boost = no_voltage_boost
# initial_settings = true
# input_select_gen3 = unused
# input_select_x1 = unused
# input_select_xn = sel_x6_dn
# observe_cgb_clocks = observe_nothing
# pcie_gen3_bitwidth = pciegen3_wide
# prot_mode = basic_tx
# scratch0_x1_clock_src = unused
# scratch1_x1_clock_src = unused
# scratch2_x1_clock_src = unused
# scratch3_x1_clock_src = unused
# select_done_master_or_slave = choose_master_pcie_sw_done
# ser_mode = twenty_bit
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_ucontrol_en = disable
# tx_ucontrol_pcie = gen1
# tx_ucontrol_reset = disable
# vccdreg_output = vccdreg_nominal
# local_x1_clock_source_sel = same_ch_txpll
# x1_div_m_sel = divbypass
# local_xn_clock_source_sel = sel_x6_bot
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_ser
# ================================================
# bonding_mode = x1_non_bonded
# clk_divtx_deskew = deskew_delay8
# control_clk_divtx = no_dft_control_clkdivtx
# duty_cycle_correction_mode_ctrl = dcc_disable
# initial_settings = true
# prot_mode = basic_tx
# ser_clk_divtx_user_sel = divtx_user_off
# ser_clk_mon = disable_clk_mon
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_10g_rx_pcs
# ================================================
# advanced_user_mode = disable
# align_del = align_del_dis
# ber_bit_err_total_cnt = bit_err_total_cnt_10g
# ber_clken = ber_clk_dis
# ber_xus_timer_window = 004c4a
# bitslip_mode = bitslip_dis
# blksync_bitslip_type = bitslip_comb
# blksync_bitslip_wait_cnt = 1
# blksync_bitslip_wait_type = bitslip_cnt
# blksync_bypass = blksync_bypass_en
# blksync_clken = blksync_clk_dis
# blksync_enum_invalid_sh_cnt = enum_invalid_sh_cnt_10g
# blksync_knum_sh_cnt_postlock = knum_sh_cnt_postlock_10g
# blksync_knum_sh_cnt_prelock = knum_sh_cnt_prelock_10g
# blksync_pipeln = blksync_pipeln_dis
# clr_errblk_cnt_en = disable
# control_del = control_del_none
# crcchk_bypass = crcchk_bypass_en
# crcchk_clken = crcchk_clk_dis
# crcchk_inv = crcchk_inv_en
# crcchk_pipeln = crcchk_pipeln_en
# crcflag_pipeln = crcflag_pipeln_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# data_bit_reverse = data_bit_reverse_dis
# dec64b66b_clken = dec64b66b_clk_dis
# dec_64b66b_rxsm_bypass = dec_64b66b_rxsm_bypass_en
# descrm_bypass = descrm_bypass_en
# descrm_clken = descrm_clk_dis
# descrm_mode = async
# descrm_pipeln = enable
# dft_clk_out_sel = rx_master_clk
# dis_signal_ok = dis_signal_ok_en
# dispchk_bypass = dispchk_bypass_en
# empty_flag_type = empty_rd_side
# fast_path = fast_path_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_read = fifo_double_read_dis
# fifo_stop_rd = n_rd_empty
# fifo_stop_wr = n_wr_full
# force_align = force_align_dis
# frmsync_bypass = frmsync_bypass_en
# frmsync_clken = frmsync_clk_dis
# frmsync_enum_scrm = enum_scrm_default
# frmsync_enum_sync = enum_sync_default
# frmsync_flag_type = location_only
# frmsync_knum_sync = knum_sync_default
# frmsync_mfrm_length = 0800
# frmsync_pipeln = frmsync_pipeln_en
# full_flag_type = full_wr_side
# gb_rx_idwidth = width_64
# gb_rx_odwidth = width_64
# gbexp_clken = gbexp_clk_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# master_clk_sel = master_rx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# rand_clken = rand_clk_dis
# rd_clk_sel = rd_rx_pld_clk
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# rx_fifo_write_ctrl = blklock_stops
# rx_scrm_width = bit64
# rx_sh_location = msb
# rx_signal_ok_sel = synchronized_ver
# rx_sm_bypass = rx_sm_bypass_en
# rx_sm_hiber = rx_sm_hiber_en
# rx_sm_pipeln = rx_sm_pipeln_en
# rx_testbus_sel = rx_fifo_testbus1
# rx_true_b2b = b2b
# rxfifo_empty = empty_default
# rxfifo_full = full_default
# rxfifo_mode = phase_comp
# rxfifo_pempty = 02
# rxfifo_pfull = 17
# silicon_rev = 20nm5
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_10g_tx_pcs
# ================================================
# advanced_user_mode = disable
# bitslip_en = bitslip_dis
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# comp_cnt = 00
# compin_sel = compin_slave_bot
# crcgen_bypass = crcgen_bypass_en
# crcgen_clken = crcgen_clk_dis
# crcgen_err = crcgen_err_dis
# crcgen_inv = crcgen_inv_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# ctrl_plane_bonding = ctrl_slave_blw
# data_bit_reverse = data_bit_reverse_dis
# dft_clk_out_sel = tx_master_clk
# dispgen_bypass = dispgen_bypass_en
# dispgen_clken = dispgen_clk_dis
# dispgen_err = dispgen_err_dis
# dispgen_pipeln = dispgen_pipeln_dis
# distdwn_bypass_pipeln = distdwn_bypass_pipeln_dis
# distdwn_master = distdwn_master_dis
# distup_bypass_pipeln = distup_bypass_pipeln_dis
# distup_master = distup_master_dis
# dv_bond = dv_bond_en
# empty_flag_type = empty_rd_side
# enc64b66b_txsm_clken = enc64b66b_txsm_clk_dis
# enc_64b66b_txsm_bypass = enc_64b66b_txsm_bypass_en
# fastpath = fastpath_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_write = fifo_double_write_dis
# fifo_reg_fast = fifo_reg_fast_dis
# fifo_stop_rd = rd_empty
# fifo_stop_wr = n_wr_full
# frmgen_burst = frmgen_burst_dis
# frmgen_bypass = frmgen_bypass_en
# frmgen_clken = frmgen_clk_dis
# frmgen_mfrm_length = 0800
# frmgen_pipeln = frmgen_pipeln_en
# frmgen_pyld_ins = frmgen_pyld_ins_dis
# frmgen_wordslip = frmgen_wordslip_dis
# full_flag_type = full_wr_side
# gb_pipeln_bypass = disable
# gb_tx_idwidth = width_64
# gb_tx_odwidth = width_64
# gbred_clken = gbred_clk_dis
# indv = indv_dis
# low_latency_en = disable
# master_clk_sel = master_tx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# pseudo_random = all_0
# pseudo_seed_a_bin = 03ffffffffffffff
# pseudo_seed_b_bin = 03ffffffffffffff
# random_disp = disable
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# scrm_bypass = scrm_bypass_en
# scrm_clken = scrm_clk_dis
# scrm_mode = async
# scrm_pipeln = enable
# sh_err = sh_err_dis
# silicon_rev = 20nm5
# sop_mark = sop_mark_dis
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# tx_scrm_err = scrm_err_dis
# tx_scrm_width = bit64
# tx_sh_location = msb
# tx_sm_bypass = tx_sm_bypass_en
# tx_sm_pipeln = tx_sm_pipeln_en
# tx_testbus_sel = tx_fifo_testbus1
# txfifo_empty = empty_default
# txfifo_full = full_default
# txfifo_mode = phase_comp
# txfifo_pempty = 2
# txfifo_pfull = b
# wr_clk_sel = wr_tx_pld_clk
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_8g_rx_pcs
# ================================================
# auto_error_replacement = dis_err_replace
# auto_speed_nego = dis_asn
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_deserializer = dis_bds
# cdr_ctrl_rxvalid_mask = dis_rxvalid_mask
# clkcmp_pattern_n = 00000
# clkcmp_pattern_p = 00000
# clock_gate_bds_dec_asn = dis_bds_dec_asn_clk_gating
# clock_gate_cdr_eidle = en_cdr_eidle_clk_gating
# clock_gate_dw_pc_wrclk = dis_dw_pc_wrclk_gating
# clock_gate_dw_rm_rd = en_dw_rm_rdclk_gating
# clock_gate_dw_rm_wr = en_dw_rm_wrclk_gating
# clock_gate_dw_wa = dis_dw_wa_clk_gating
# clock_gate_pc_rdclk = dis_pc_rdclk_gating
# clock_gate_sw_pc_wrclk = dis_sw_pc_wrclk_gating
# clock_gate_sw_rm_rd = en_sw_rm_rdclk_gating
# clock_gate_sw_rm_wr = en_sw_rm_wrclk_gating
# clock_gate_sw_wa = dis_sw_wa_clk_gating
# clock_observation_in_pld_core = internal_sw_wa_clk
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_slave_below
# ctrl_plane_bonding_distribution = not_master_chnl_distr
# eidle_entry_eios = dis_eidle_eios
# eidle_entry_iei = dis_eidle_iei
# eidle_entry_sd = dis_eidle_sd
# eightb_tenb_decoder = dis_8b10b
# err_flags_sel = err_flags_wa
# fixed_pat_det = dis_fixed_patdet
# fixed_pat_num = 0
# force_signal_detect = en_force_signal_detect
# gen3_clk_en = disable_clk
# gen3_rx_clk_sel = rcvd_clk
# gen3_tx_clk_sel = tx_pma_clk
# hip_mode = dis_hip
# ibm_invalid_code = dis_ibm_invalid_code
# invalid_code_flag_only = dis_invalid_code_only
# pad_or_edb_error_replace = replace_edb
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# pipe_if_enable = dis_pipe_rx
# pma_dw = twenty_bit
# polinv_8b10b_dec = dis_polinv_8b10b_dec
# prot_mode = basic_rm_disable
# rate_match = dis_rm
# rate_match_del_thres = dis_rm_del_thres
# rate_match_empty_thres = dis_rm_empty_thres
# rate_match_full_thres = dis_rm_full_thres
# rate_match_ins_thres = dis_rm_ins_thres
# rate_match_start_thres = dis_rm_start_thres
# reconfig_settings = {}
# rx_clk2 = rcvd_clk_clk2
# rx_clk_free_running = en_rx_clk_free_run
# rx_pcs_urst = en_rx_pcs_urst
# rx_rcvd_clk = rcvd_clk_rcvd_clk
# rx_rd_clk = pld_rx_clk
# rx_refclk = dis_refclk_sel
# rx_wr_clk = rx_clk2_div_1_2_4
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# sync_sm_idle_eios = dis_syncsm_idle
# test_bus_sel = tx_testbus
# tx_rx_parallel_loopback = dis_plpbk
# wa_boundary_lock_ctrl = sync_sm
# wa_clk_slip_spacing = 010
# wa_det_latency_sync_status_beh = dont_care_assert_sync
# wa_disp_err_flag = en_disp_err_flag
# wa_kchar = dis_kchar
# wa_pd = wa_pd_20
# wa_pd_data_bin = 00000000000a0d7c
# wa_pd_polarity = en_pd_both_pol
# wa_pld_controlled = dis_pld_ctrl
# wa_renumber_data = 01
# wa_rgnumber_data = 01
# wa_rknumber_data = 01
# wa_rosnumber_data = 0
# wa_rvnumber_data = 0000
# wa_sync_sm_ctrl = dw_basic_sync_sm
# wait_cnt = 000
# 
# 
# ================================================
# Module twentynm_hssi_8g_tx_pcs
# ================================================
# auto_speed_nego_gen2 = dis_asn_g2
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_serializer = dis_bs
# clock_gate_bs_enc = dis_bs_enc_clk_gating
# clock_gate_dw_fifowr = dis_dw_fifowr_clk_gating
# clock_gate_fiford = dis_fiford_clk_gating
# clock_gate_sw_fifowr = dis_sw_fifowr_clk_gating
# clock_observation_in_pld_core = internal_refclk_b
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_slave_below
# ctrl_plane_bonding_distribution = not_master_chnl_distr
# data_selection_8b10b_encoder_input = normal_data_path
# dynamic_clk_switch = dis_dyn_clk_switch
# eightb_tenb_disp_ctrl = dis_disp_ctrl
# eightb_tenb_encoder = dis_8b10b
# force_echar = dis_force_echar
# force_kchar = dis_force_kchar
# gen3_tx_clk_sel = dis_tx_clk
# gen3_tx_pipe_clk_sel = dis_tx_pipe_clk
# hip_mode = dis_hip
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# phfifo_write_clk_sel = pld_tx_clk
# pma_dw = twenty_bit
# prot_mode = basic
# reconfig_settings = {}
# refclk_b_clk_sel = tx_pma_clock
# revloop_back_rm = dis_rev_loopback_rx_rm
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# tx_bitslip = dis_tx_bitslip
# tx_compliance_controlled_disparity = dis_txcompliance
# tx_fast_pld_reg = dis_tx_fast_pld_reg
# txclk_freerun = en_freerun_tx
# txpcs_urst = en_txpcs_urst
# 
# 
# ================================================
# Module twentynm_hssi_common_pcs_pma_interface
# ================================================
# asn_clk_enable = false
# asn_enable = dis_asn
# block_sel = eight_g_pcs
# bypass_early_eios = true
# bypass_pcie_switch = true
# bypass_pma_ltr = true
# bypass_pma_sw_done = false
# bypass_ppm_lock = false
# bypass_send_syncp_fbkp = true
# bypass_txdetectrx = true
# cdr_control = dis_cdr_ctrl
# cid_enable = dis_cid_mode
# cp_cons_sel = cp_cons_master
# cp_dwn_mstr = true
# cp_up_mstr = true
# ctrl_plane_bonding = individual
# data_mask_count = 0000
# data_mask_count_multi = 0
# dft_observation_clock_selection = dft_clk_obsrv_tx0
# early_eios_counter = 00
# force_freqdet = force_freqdet_dis
# free_run_clk_enable = false
# ignore_sigdet_g23 = false
# pc_en_counter = 00
# pc_rst_counter = 00
# pcie_hip_mode = hip_disable
# ph_fifo_reg_mode = phfifo_reg_mode_dis
# phfifo_flush_wait = 00
# pipe_if_g3pcs = pipe_if_8gpcs
# pma_done_counter = 00000
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# ppm_cnt_rst = ppm_cnt_rst_dis
# ppm_deassert_early = deassert_early_dis
# ppm_det_buckets = ppm_300_100_bucket
# ppm_gen1_2_cnt = cnt_32k
# ppm_post_eidle_delay = cnt_200_cycles
# ppmsel = ppmsel_300
# prot_mode = other_protocols
# reconfig_settings = {}
# rxvalid_mask = rxvalid_mask_dis
# sigdet_wait_counter = 000
# sigdet_wait_counter_multi = 0
# silicon_rev = 20nm5
# sim_mode = disable
# spd_chg_rst_wait_cnt_en = false
# sup_mode = user_mode
# testout_sel = ppm_det_test
# wait_clk_on_off_timer = 0
# wait_pipe_synchronizing = 00
# wait_send_syncp_fbkp = 000
# 
# 
# ================================================
# Module twentynm_hssi_common_pld_pcs_interface
# ================================================
# dft_clk_out_en = dft_clk_out_disable
# dft_clk_out_sel = teng_rx_dft_clk
# hrdrstctrl_en = hrst_dis
# pcs_testbus_block_sel = pma_if
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_rx_pcs
# ================================================
# double_read_mode = double_read_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_tx_pcs
# ================================================
# double_write_mode = double_write_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_gen3_rx_pcs
# ================================================
# block_sync = bypass_block_sync
# block_sync_sm = disable_blk_sync_sm
# cdr_ctrl_force_unalgn = disable
# lpbk_force = lpbk_frce_dis
# mode = disable_pcs
# rate_match_fifo = bypass_rm_fifo
# rate_match_fifo_latency = low_latency
# reconfig_settings = {}
# reverse_lpbk = rev_lpbk_dis
# rx_b4gb_par_lpbk = b4gb_par_lpbk_dis
# rx_force_balign = dis_force_balign
# rx_ins_del_one_skip = ins_del_one_skip_dis
# rx_num_fixed_pat = 0
# rx_test_out_sel = rx_test_out0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_gen3_tx_pcs
# ================================================
# mode = disable_pcs
# reverse_lpbk = rev_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_bitslip = 00
# tx_gbox_byp = bypass_gbox
# 
# 
# ================================================
# Module twentynm_hssi_krfec_rx_pcs
# ================================================
# blksync_cor_en = detect
# bypass_gb = bypass_dis
# clr_ctrl = both_enabled
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# dv_start = with_blklock
# err_mark_type = err_mark_10g
# error_marking_en = err_mark_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# parity_invalid_enum = 08
# parity_valid_num = 4
# pipeln_blksync = enable
# pipeln_descrm = disable
# pipeln_errcorrect = disable
# pipeln_errtrap_ind = enable
# pipeln_errtrap_lfsr = disable
# pipeln_errtrap_loc = disable
# pipeln_errtrap_pat = disable
# pipeln_gearbox = enable
# pipeln_syndrm = enable
# pipeln_trans_dec = disable
# prot_mode = disable_mode
# receive_order = receive_lsb
# reconfig_settings = {}
# rx_testbus_sel = overall
# signal_ok_en = sig_ok_en
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_krfec_tx_pcs
# ================================================
# burst_err = burst_err_dis
# burst_err_len = burst_err_len1
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# enc_frame_query = enc_query_dis
# low_latency_en = disable
# pipeln_encoder = enable
# pipeln_scrambler = enable
# prot_mode = disable_mode
# silicon_rev = 20nm5
# sup_mode = user_mode
# transcode_err = trans_err_dis
# transmit_order = transmit_lsb
# tx_testbus_sel = overall
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen1_2
# ================================================
# elec_idle_delay_val = 0
# error_replace_pad = replace_edb
# hip_mode = dis_hip
# ind_error_reporting = dis_ind_error_reporting
# phystatus_delay_val = 0
# phystatus_rst_toggle = dis_phystatus_rst_toggle
# pipe_byte_de_serializer_en = dont_care_bds
# prot_mode = basic
# reconfig_settings = {}
# rpre_emph_a_val = 00
# rpre_emph_b_val = 00
# rpre_emph_c_val = 00
# rpre_emph_d_val = 00
# rpre_emph_e_val = 00
# rvod_sel_a_val = 00
# rvod_sel_b_val = 00
# rvod_sel_c_val = 00
# rvod_sel_d_val = 00
# rvod_sel_e_val = 00
# rx_pipe_enable = dis_pipe_rx
# rxdetect_bypass = dis_rxdetect_bypass
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_pipe_enable = dis_pipe_tx
# txswing = dis_txswing
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen3
# ================================================
# bypass_rx_detection_enable = false
# bypass_rx_preset = 0
# bypass_rx_preset_enable = false
# bypass_tx_coefficent = 00000
# bypass_tx_coefficent_enable = false
# elecidle_delay_g3 = 0
# ind_error_reporting = dis_ind_error_reporting
# mode = disable_pcs
# phy_status_delay_g12 = 0
# phy_status_delay_g3 = 0
# phystatus_rst_toggle_g12 = dis_phystatus_rst_toggle
# phystatus_rst_toggle_g3 = dis_phystatus_rst_toggle_g3
# rate_match_pad_insertion = dis_rm_fifo_pad_ins
# silicon_rev = 20nm5
# sup_mode = user_mode
# test_out_sel = disable_test_out
# 
# 
# ================================================
# Module twentynm_hssi_rx_pcs_pma_interface
# ================================================
# block_sel = eight_g_pcs
# channel_operation_mode = tx_rx_pair_enabled
# clkslip_sel = pld
# lpbk_en = disable
# master_clk_sel = master_rx_pma_clk
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_rx = pma_20b_rx
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_ver = prbs_off
# prot_mode_rx = eightg_basic_mode_rx
# reconfig_settings = {}
# rx_dyn_polarity_inversion = rx_dyn_polinv_dis
# rx_lpbk_en = lpbk_dis
# rx_prbs_force_signal_ok = force_sig_ok
# rx_prbs_mask = prbsmask128
# rx_prbs_mode = teng_mode
# rx_signalok_signaldet_sel = sel_sig_det
# rx_static_polarity_inversion = rx_stat_polinv_dis
# rx_uhsif_lpbk_en = uhsif_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_rx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_rx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_rx = individual_rx
# hd_10g_fifo_mode_rx = fifo_rx
# hd_10g_low_latency_en_rx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_rx = pma_64b_rx
# hd_10g_prot_mode_rx = disabled_prot_mode_rx
# hd_10g_shared_fifo_width_rx = single_rx
# hd_10g_sup_mode = user_mode
# hd_10g_test_bus_mode = rx
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_rx = individual_rx
# hd_8g_fifo_mode_rx = fifo_rx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_rx = pma_20b_rx
# hd_8g_prot_mode_rx = basic_rm_disable_rx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_clklow_clk_hz = 09502f90
# hd_chnl_ctrl_plane_bonding_rx = individual_rx
# hd_chnl_fref_clk_hz = 09502f90
# hd_chnl_frequency_rules_en = disable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_rx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_operating_voltage = standard
# hd_chnl_pcs_ac_pwr_rules_en = disable
# hd_chnl_pcs_pair_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_pwr_scaling_clk = pma_rx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_rx = fifo_rx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_rx_clk_hz = 09502f90
# hd_chnl_pma_dw_rx = pma_20b_rx
# hd_chnl_pma_rx_clk_hz = 09502f90
# hd_chnl_prot_mode_rx = basic_8gpcs_rm_disable_rx
# hd_chnl_shared_fifo_width_rx = single_rx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_chnl_transparent_pcs_rx = disable
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_rx = non_teng_mode_rx
# hd_fifo_shared_fifo_width_rx = single_rx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_rx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_rx = disabled_prot_mode_rx
# hd_krfec_sup_mode = user_mode
# hd_krfec_test_bus_mode = tx
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_rx = eightg_and_g3_pld_fifo_mode_rx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_rx = pma_20b_rx
# hd_pmaif_prot_mode_rx = eightg_basic_mode_rx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_rx_block_sel = eightg
# pcs_rx_clk_out_sel = eightg_clk_out
# pcs_rx_clk_sel = pld_rx_clk
# pcs_rx_hip_clk_en = hip_rx_disable
# pcs_rx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_tx_pcs_pma_interface
# ================================================
# bypass_pma_txelecidle = true
# channel_operation_mode = tx_rx_pair_enabled
# lpbk_en = disable
# master_clk_sel = master_tx_pma_clk
# pcie_sub_prot_mode_tx = other_prot_mode
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_tx = pma_20b_tx
# pma_if_dft_en = dft_dis
# pmagate_en = pmagate_dis
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_gen_pat = prbs_gen_dis
# prot_mode_tx = eightg_basic_mode_tx
# reconfig_settings = {}
# silicon_rev = 20nm5
# sq_wave_num = sq_wave_default
# sqwgen_clken = sqwgen_clk_dis
# sup_mode = user_mode
# tx_dyn_polarity_inversion = tx_dyn_polinv_dis
# tx_pma_data_sel = eight_g_pcs
# tx_static_polarity_inversion = tx_stat_polinv_dis
# uhsif_cnt_step_filt_before_lock = uhsif_filt_stepsz_b4lock_2
# uhsif_cnt_thresh_filt_after_lock_value = 0
# uhsif_cnt_thresh_filt_before_lock = uhsif_filt_cntthr_b4lock_8
# uhsif_dcn_test_update_period = uhsif_dcn_test_period_4
# uhsif_dcn_testmode_enable = uhsif_dcn_test_mode_disable
# uhsif_dead_zone_count_thresh = uhsif_dzt_cnt_thr_2
# uhsif_dead_zone_detection_enable = uhsif_dzt_disable
# uhsif_dead_zone_obser_window = uhsif_dzt_obr_win_16
# uhsif_dead_zone_skip_size = uhsif_dzt_skipsz_4
# uhsif_delay_cell_index_sel = uhsif_index_cram
# uhsif_delay_cell_margin = uhsif_dcn_margin_2
# uhsif_delay_cell_static_index_value = 00
# uhsif_dft_dead_zone_control = uhsif_dft_dz_det_val_0
# uhsif_dft_up_filt_control = uhsif_dft_up_val_0
# uhsif_enable = uhsif_disable
# uhsif_lock_det_segsz_after_lock = uhsif_lkd_segsz_aflock_512
# uhsif_lock_det_segsz_before_lock = uhsif_lkd_segsz_b4lock_16
# uhsif_lock_det_thresh_cnt_after_lock_value = 0
# uhsif_lock_det_thresh_cnt_before_lock_value = 0
# uhsif_lock_det_thresh_diff_after_lock_value = 0
# uhsif_lock_det_thresh_diff_before_lock_value = 0
# 
# 
# ================================================
# Module twentynm_hssi_tx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_tx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_tx = ctrl_slave_blw_tx
# hd_10g_fifo_mode_tx = fifo_tx
# hd_10g_low_latency_en_tx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_tx = pma_64b_tx
# hd_10g_prot_mode_tx = disabled_prot_mode_tx
# hd_10g_shared_fifo_width_tx = single_tx
# hd_10g_sup_mode = user_mode
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_tx = ctrl_slave_blw_tx
# hd_8g_fifo_mode_tx = fifo_tx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_tx = pma_20b_tx
# hd_8g_prot_mode_tx = basic_tx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_ctrl_plane_bonding_tx = ctrl_slave_blw_tx
# hd_chnl_frequency_rules_en = enable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_tx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_pcs_tx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_tx_pwr_scaling_clk = pma_tx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_tx = fifo_tx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_tx_clk_hz = 09502f90
# hd_chnl_pld_uhsif_tx_clk_hz = 00000000
# hd_chnl_pma_dw_tx = pma_20b_tx
# hd_chnl_pma_tx_clk_hz = 09502f90
# hd_chnl_prot_mode_tx = basic_8gpcs_tx
# hd_chnl_shared_fifo_width_tx = single_tx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_tx = non_teng_mode_tx
# hd_fifo_shared_fifo_width_tx = single_tx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_tx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_tx = disabled_prot_mode_tx
# hd_krfec_sup_mode = user_mode
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_tx = eightg_and_g3_pld_fifo_mode_tx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_ctrl_plane_bonding = individual
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_tx = pma_20b_tx
# hd_pmaif_prot_mode_tx = eightg_basic_mode_tx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_tx_clk_out_sel = eightg_clk_out
# pcs_tx_clk_source = eightg
# pcs_tx_data_source = hip_disable
# pcs_tx_delay1_clk_en = delay1_clk_disable
# pcs_tx_delay1_clk_sel = pcs_tx_clk
# pcs_tx_delay1_ctrl = delay1_path0
# pcs_tx_delay1_data_sel = one_ff_delay
# pcs_tx_delay2_clk_en = delay2_clk_disable
# pcs_tx_delay2_ctrl = delay2_path0
# pcs_tx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_pma_adaptation
# ================================================
# adapt_dfe_control_sel = r_adapt_dfe_control_sel_0
# adapt_dfe_sel = r_adapt_dfe_sel_0
# adapt_mode = manual
# adapt_vga_sel = r_adapt_vga_sel_0
# adapt_vref_sel = r_adapt_vref_sel_0
# adp_1s_ctle_bypass = radp_1s_ctle_bypass_0
# adp_4s_ctle_bypass = radp_4s_ctle_bypass_0
# adp_adapt_control_sel = radp_adapt_control_sel_0
# adp_adapt_rstn = radp_adapt_rstn_1
# adp_adapt_start = radp_adapt_start_0
# adp_bist_auxpath_en = radp_bist_auxpath_disable
# adp_bist_count_rstn = radp_bist_count_rstn_0
# adp_bist_datapath_en = radp_bist_datapath_disable
# adp_bist_mode = radp_bist_mode_0
# adp_bist_odi_dfe_sel = radp_bist_odi_dfe_sel_0
# adp_bist_spec_en = radp_bist_spec_en_0
# adp_control_mux_bypass = radp_control_mux_bypass_0
# adp_ctle_acgain_4s = radp_ctle_acgain_4s_0
# adp_ctle_adapt_bw = radp_ctle_adapt_bw_3
# adp_ctle_adapt_cycle_window = radp_ctle_adapt_cycle_window_6
# adp_ctle_adapt_oneshot = radp_ctle_adapt_oneshot_1
# adp_ctle_en = radp_ctle_disable
# adp_ctle_eqz_1s_sel = radp_ctle_eqz_1s_sel_0
# adp_ctle_force_spec_sign = radp_ctle_force_spec_sign_0
# adp_ctle_hold_en = radp_ctle_not_held
# adp_ctle_load = radp_ctle_load_0
# adp_ctle_load_value = radp_ctle_load_value_0
# adp_ctle_scale = radp_ctle_scale_0
# adp_ctle_scale_en = radp_ctle_scale_en_0
# adp_ctle_spec_sign = radp_ctle_spec_sign_0
# adp_ctle_sweep_direction = radp_ctle_sweep_direction_1
# adp_ctle_threshold = radp_ctle_threshold_0
# adp_ctle_threshold_en = radp_ctle_threshold_en_0
# adp_ctle_vref_polarity = radp_ctle_vref_polarity_0
# adp_ctle_window = radp_ctle_window_0
# adp_dfe_bw = radp_dfe_bw_3
# adp_dfe_clkout_div_sel = radp_dfe_clkout_div_sel_0
# adp_dfe_cycle = radp_dfe_cycle_6
# adp_dfe_fltap1 = radp_dfe_fltap1_0
# adp_dfe_fltap1_sgn = radp_dfe_fltap1_sgn_0
# adp_dfe_fltap2 = radp_dfe_fltap2_0
# adp_dfe_fltap2_sgn = radp_dfe_fltap2_sgn_0
# adp_dfe_fltap3 = radp_dfe_fltap3_0
# adp_dfe_fltap3_sgn = radp_dfe_fltap3_sgn_0
# adp_dfe_fltap4 = radp_dfe_fltap4_0
# adp_dfe_fltap4_sgn = radp_dfe_fltap4_sgn_0
# adp_dfe_fltap_bypass = radp_dfe_fltap_bypass_0
# adp_dfe_fltap_en = radp_dfe_fltap_disable
# adp_dfe_fltap_hold_en = radp_dfe_fltap_not_held
# adp_dfe_fltap_load = radp_dfe_fltap_load_0
# adp_dfe_fltap_position = radp_dfe_fltap_position_0
# adp_dfe_force_spec_sign = radp_dfe_force_spec_sign_0
# adp_dfe_fxtap1 = radp_dfe_fxtap1_0
# adp_dfe_fxtap2 = radp_dfe_fxtap2_0
# adp_dfe_fxtap2_sgn = radp_dfe_fxtap2_sgn_0
# adp_dfe_fxtap3 = radp_dfe_fxtap3_0
# adp_dfe_fxtap3_sgn = radp_dfe_fxtap3_sgn_0
# adp_dfe_fxtap4 = radp_dfe_fxtap4_0
# adp_dfe_fxtap4_sgn = radp_dfe_fxtap4_sgn_0
# adp_dfe_fxtap5 = radp_dfe_fxtap5_0
# adp_dfe_fxtap5_sgn = radp_dfe_fxtap5_sgn_0
# adp_dfe_fxtap6 = radp_dfe_fxtap6_0
# adp_dfe_fxtap6_sgn = radp_dfe_fxtap6_sgn_0
# adp_dfe_fxtap7 = radp_dfe_fxtap7_0
# adp_dfe_fxtap7_sgn = radp_dfe_fxtap7_sgn_0
# adp_dfe_fxtap_bypass = radp_dfe_fxtap_bypass_0
# adp_dfe_fxtap_en = radp_dfe_fxtap_disable
# adp_dfe_fxtap_hold_en = radp_dfe_fxtap_not_held
# adp_dfe_fxtap_load = radp_dfe_fxtap_load_0
# adp_dfe_mode = radp_dfe_mode_0
# adp_dfe_spec_sign = radp_dfe_spec_sign_0
# adp_dfe_vref_polarity = radp_dfe_vref_polarity_0
# adp_force_freqlock = radp_force_freqlock_off
# adp_frame_capture = radp_frame_capture_0
# adp_frame_en = radp_frame_en_0
# adp_frame_odi_sel = radp_frame_odi_sel_0
# adp_frame_out_sel = radp_frame_out_sel_0
# adp_lfeq_fb_sel = radp_lfeq_fb_sel_0
# adp_mode = radp_mode_0
# adp_odi_control_sel = radp_odi_control_sel_0
# adp_onetime_dfe = radp_onetime_dfe_1
# adp_spec_avg_window = radp_spec_avg_window_4
# adp_spec_trans_filter = radp_spec_trans_filter_2
# adp_status_sel = radp_status_sel_0
# adp_vga_bypass = radp_vga_bypass_0
# adp_vga_en = radp_vga_disable
# adp_vga_load = radp_vga_load_0
# adp_vga_polarity = radp_vga_polarity_0
# adp_vga_sel = radp_vga_sel_0
# adp_vga_sweep_direction = radp_vga_sweep_direction_1
# adp_vga_threshold = radp_vga_threshold_4
# adp_vref_bw = radp_vref_bw_1
# adp_vref_bypass = radp_vref_bypass_0
# adp_vref_cycle = radp_vref_cycle_6
# adp_vref_dfe_spec_en = radp_vref_dfe_spec_en_0
# adp_vref_en = radp_vref_disable
# adp_vref_hold_en = radp_vref_not_held
# adp_vref_load = radp_vref_load_0
# adp_vref_polarity = radp_vref_polarity_0
# adp_vref_sel = radp_vref_sel_21
# adp_vref_vga_level = radp_vref_vga_level_13
# datarate = 3125000000 bps
# initial_settings = true
# odi_count_threshold = rodi_count_threshold_0
# odi_dfe_spec_en = rodi_dfe_spec_en_0
# odi_en = rodi_en_0
# odi_mode = rodi_mode_0
# odi_rstn = rodi_rstn_0
# odi_spec_sel = rodi_spec_sel_0
# odi_start = rodi_start_0
# odi_vref_sel = rodi_vref_sel_0
# optimal = false
# prot_mode = basic_rx
# rrx_pcie_eqz = rrx_pcie_eqz_0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_cdr_refclk_select_mux
# ================================================
# local_cdr_clkin_scratch0_src = cdr_clkin_scratch0_src_refclk_iqclk
# local_cdr_clkin_scratch1_src = cdr_clkin_scratch1_src_refclk_iqclk
# local_cdr_clkin_scratch2_src = cdr_clkin_scratch2_src_refclk_iqclk
# local_cdr_clkin_scratch3_src = cdr_clkin_scratch3_src_refclk_iqclk
# local_cdr_clkin_scratch4_src = cdr_clkin_scratch4_src_refclk_iqclk
# inclk0_logical_to_physical_mapping = ref_iqclk0
# inclk1_logical_to_physical_mapping = ref_iqclk1
# inclk2_logical_to_physical_mapping = ref_iqclk2
# inclk3_logical_to_physical_mapping = ref_iqclk3
# inclk4_logical_to_physical_mapping = ref_iqclk4
# powerdown_mode = powerup
# receiver_detect_src = iqclk_src
# refclk_select = ref_iqclk0
# silicon_rev = 20nm5
# local_xmux_refclk_src = refclk_iqclk
# local_xpm_iqref_mux_iqclk_sel = ref_iqclk0
# local_xpm_iqref_mux_scratch0_src = scratch0_ref_iqclk0
# local_xpm_iqref_mux_scratch1_src = scratch1_ref_iqclk1
# local_xpm_iqref_mux_scratch2_src = scratch2_ref_iqclk2
# local_xpm_iqref_mux_scratch3_src = scratch3_ref_iqclk3
# local_xpm_iqref_mux_scratch4_src = scratch4_ref_iqclk4
# 
# 
# ================================================
# Module twentynm_hssi_pma_channel_pll
# ================================================
# analog_mode = user_custom
# atb_select_control = atb_off
# auto_reset_on = auto_reset_off
# bandwidth_range_high = 0 hz
# bandwidth_range_low = 0 hz
# bbpd_data_pattern_filter_select = bbpd_data_pat_off
# bw_sel = medium
# cdr_odi_select = sel_cdr
# cdr_phaselock_mode = no_ignore_lock
# cdr_powerdown_mode = power_up
# cgb_div =           1
# chgpmp_current_pd = cp_current_pd_setting2
# chgpmp_current_pfd = cp_current_pfd_setting3
# chgpmp_replicate = false
# chgpmp_testmode = cp_test_disable
# clklow_mux_select = clklow_mux_cdr_fbclk
# datarate = 3125000000 bps
# diag_loopback_enable = false
# disable_up_dn = true
# f_max_pfd = 0 hz
# f_max_ref = 0 hz
# f_max_vco = 0 hz
# f_min_gt_channel = 0 hz
# f_min_pfd = 0 hz
# f_min_ref = 0 hz
# f_min_vco = 0 hz
# fb_select = direct_fb
# fref_clklow_div =           1
# fref_mux_select = fref_mux_cdr_refclk
# gpon_lck2ref_control = gpon_lck2ref_off
# initial_settings = true
# iqclk_mux_sel = power_down
# is_cascaded_pll = false
# lck2ref_delay_control = lck2ref_delay_2
# lf_resistor_pd = lf_pd_setting0
# lf_resistor_pfd = lf_pfd_setting2
# lf_ripple_cap = lf_no_ripple
# loop_filter_bias_select = lpflt_bias_off
# loopback_mode = loopback_disabled
# lpd_counter = 04
# lpfd_counter = 08
# ltd_ltr_micro_controller_select = ltd_ltr_pcs
# m_counter =          10
# n_counter_scratch =  2
# n_counter_scratch = 02
# optimal = false
# output_clock_frequency = 1562500000 Hz
# pcie_gen = non_pcie
# pd_fastlock_mode = false
# pd_l_counter =           4
# pfd_l_counter =           8
# pm_speed_grade = e2
# pma_width =          20
# position = position_unknown
# power_mode = low_power
# primary_use = cdr
# prot_mode = basic_rx
# reference_clock_frequency = 156250000 hz
# requires_gt_capable_channel = false
# reverse_serial_loopback = no_loopback
# set_cdr_v2i_enable = true
# set_cdr_vco_reset = false
# set_cdr_vco_speed = 07
# set_cdr_vco_speed_fix = 06
# set_cdr_vco_speed_pciegen3 = cdr_vco_max_speedbin_pciegen3
# side = side_unknown
# silicon_rev = 20nm5
# sup_mode = user_mode
# top_or_bottom = tb_unknown
# tx_pll_prot_mode = txpll_unused
# txpll_hclk_driver_enable = false
# uc_cru_rstb = cdr_lf_reset_off
# uc_ro_cal = uc_ro_cal_on
# uc_ro_cal_status = uc_ro_cal_notdone
# vco_freq = 6250000000 Hz
# vco_overrange_voltage = vco_overrange_off
# vco_underrange_voltage = vco_underange_off
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_buf
# ================================================
# act_isource_disable = isrc_en
# bodybias_enable = bodybias_en
# bodybias_select = bodybias_sel1
# bypass_eqz_stages_234 = bypass_off
# cdrclk_to_cgb = cdrclk_2cgb_dis
# cgm_bias_disable = cgmbias_en
# datarate = 3125000000 bps
# diag_lp_en = dlp_off
# eq_bw_sel = eq_bw_1
# eq_dc_gain_trim = no_dc_gain
# xrx_path_initial_settings = true
# input_vcm_sel = high_vcm
# iostandard = hssi_diffio
# lfeq_enable = non_lfeq_mode
# lfeq_zero_control = lfeq_setting_2
# link_rx = sr
# link_rx = sr
# loopback_modes = lpbk_disable
# offset_cal_pd = eqz1_en
# offset_cancellation_coarse = coarse_setting_00
# offset_cancellation_ctrl = volt_0mv
# offset_cancellation_fine = fine_setting_00
# offset_pd = oc_en
# one_stage_enable = non_s1_mode
# xrx_path_optimal = false
# pdb_rx = normal_rx_on
# pm_speed_grade = e2
# pm_tx_rx_cvp_mode = cvp_off
# pm_tx_rx_pcie_gen = non_pcie
# pm_tx_rx_pcie_gen_bitwidth = pcie_gen3_32b
# pm_tx_rx_testmux_select = setting0
# power_mode_rx = low_power
# power_mode_rx = low_power
# power_rail_eht =           0
# power_rail_er =           0
# xrx_path_prot_mode = basic_rx
# qpi_enable = non_qpi_mode
# refclk_en = disable
# rx_atb_select = atb_disable
# rx_refclk_divider = bypass_divider
# rx_sel_bias_source = bias_vcmdrv
# silicon_rev = 20nm5
# xrx_path_sup_mode = user_mode
# term_sel = r_r1
# term_tri_enable = disable_tri
# vccela_supply_voltage = vccela_1p1v
# vcm_current_add = vcm_current_default
# vcm_sel = vcm_setting_10
# vga_bandwidth_select = vga_bw_1
# xrx_path_analog_mode = user_custom
# xrx_path_datarate = 3125000000 bps
# xrx_path_datawidth = 14
# xrx_path_gt_enabled = disable
# xrx_path_initial_settings = true
# xrx_path_jtag_hys = hys_increase_disable
# xrx_path_jtag_lp = lp_off
# xrx_path_optimal = false
# xrx_path_pma_rx_divclk_hz_bin = 0000000009502f90
# xrx_path_prot_mode = basic_rx
# xrx_path_sup_mode = user_mode
# xrx_path_uc_cal_enable = rx_cal_off
# xrx_path_uc_cru_rstb = cdr_lf_reset_off
# xrx_path_uc_pcie_sw = uc_pcie_gen1
# xrx_path_uc_rx_rstb = rx_reset_on
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_deser
# ================================================
# bitslip_bypass = bs_bypass_yes
# clkdiv_source = vco_bypass_normal
# clkdivrx_user_mode = clkdivrx_user_disabled
# datarate = 3125000000 bps
# deser_factor =          20
# deser_powerdown = deser_power_up
# force_adaptation_outputs = normal_outputs
# force_clkdiv_for_testing = normal_clkdiv
# optimal = false
# pcie_gen = non_pcie
# pcie_gen_bitwidth = pcie_gen3_32b
# prot_mode = basic_rx
# rst_n_adapt_odi = no_rst_adapt_odi
# sdclk_enable = false
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_dfe
# ================================================
# atb_select = atb_disable
# datarate = 3125000000 bps
# dft_en = dft_disable
# initial_settings = true
# oc_sa_adp1 = 00
# oc_sa_adp2 = 00
# oc_sa_c270 = 00
# oc_sa_c90 = 00
# oc_sa_d0c0 = 00
# oc_sa_d0c180 = 00
# oc_sa_d1c0 = 00
# oc_sa_d1c180 = 00
# optimal = false
# pdb = 6466655f656e61626c65
# pdb_fixedtap = fixtap_dfe_powerdown
# pdb_floattap = floattap_dfe_powerdown
# pdb_fxtap4t7 = fxtap4t7_powerdown
# power_mode = low_power
# prot_mode = basic_rx
# sel_fltapstep_dec = fltap_step_no_dec
# sel_fltapstep_inc = fltap_step_no_inc
# sel_fxtapstep_dec = fxtap_step_no_dec
# sel_fxtapstep_inc = fxtap_step_no_inc
# sel_oc_en = off_canc_disable
# sel_probe_tstmx = probe_tstmx_none
# silicon_rev = 20nm5
# sup_mode = user_mode
# uc_rx_dfe_cal = uc_rx_dfe_cal_off
# uc_rx_dfe_cal_status = uc_rx_dfe_cal_notdone
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_odi
# ================================================
# clk_dcd_bypass = no_bypass
# datarate = 3125000000 bps
# enable_odi = power_down_eye
# initial_settings = true
# invert_dfe_vref = no_inversion
# monitor_bw_sel = bw_1
# oc_sa_c0 = 00
# oc_sa_c180 = 00
# optimal = false
# phase_steps_64_vs_128 = phase_steps_64
# phase_steps_sel = step40
# power_mode = low_power
# prot_mode = basic_rx
# sel_oc_en = off_canc_disable
# silicon_rev = 20nm5
# step_ctrl_sel = feedback_mode
# sup_mode = user_mode
# v_vert_sel = plus
# v_vert_threshold_scaling = scale_3
# vert_threshold = vert_0
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_sd
# ================================================
# link = sr
# optimal = false
# power_mode = low_power
# prot_mode = basic_rx
# sd_output_off =           1
# sd_output_on =          15
# sd_pdb = sd_off
# sd_threshold =           3
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_buf
# ================================================
# xtx_path_calibration_en = false
# compensation_driver_en = disable
# compensation_en = enable
# cpen_ctrl = cp_l0
# datarate = 3125000000 bps
# dcd_detection_en = enable
# dft_sel = dft_disabled
# duty_cycle_correction_bandwidth = dcc_bw_12
# duty_cycle_correction_mode_ctrl = dcc_disable
# duty_cycle_correction_reference1 = dcc_ref1_3
# duty_cycle_correction_reference2 = dcc_ref2_3
# duty_cycle_correction_reset_n = reset_n
# duty_cycle_input_polarity = dcc_input_pos
# duty_cycle_setting = dcc_t32
# duty_cycle_setting_aux = dcc2_t32
# xtx_path_initial_settings = true
# jtag_drv_sel = drv1
# jtag_lp = lp_off
# link_tx = sr
# link_tx = sr
# low_power_en = disable
# lst = 6174625f64697361626c6564
# mcgb_location_for_pcie = 9
# xtx_path_optimal = false
# pm_speed_grade = e2
# power_mode = low_power
# power_rail_eht =           0
# power_rail_et =           0
# pre_emp_sign_1st_post_tap = fir_post_1t_neg
# pre_emp_sign_2nd_post_tap = fir_post_2t_neg
# pre_emp_sign_pre_tap_1t = fir_pre_1t_neg
# pre_emp_sign_pre_tap_2t = fir_pre_2t_neg
# pre_emp_switching_ctrl_1st_post_tap = 00
# pre_emp_switching_ctrl_2nd_post_tap = 0
# pre_emp_switching_ctrl_pre_tap_1t = 00
# pre_emp_switching_ctrl_pre_tap_2t = 0
# xtx_path_prot_mode = basic_tx
# res_cal_local = non_local
# rx_det = mode_0
# rx_det_output_sel = rx_det_pcie_out
# rx_det_pdb = rx_det_off
# ser_powerdown = normal_ser_on
# silicon_rev = 20nm5
# slew_rate_ctrl = slew_r7
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# term_code = rterm_code7
# term_n_tune = rterm_n0
# term_p_tune = rterm_p0
# term_sel = r_r1
# tx_powerdown = normal_tx_on
# uc_dcd_cal = uc_dcd_cal_off
# uc_dcd_cal_status = uc_dcd_cal_notdone
# uc_gen3 = gen3_off
# uc_gen4 = gen4_off
# uc_skew_cal = uc_skew_cal_off
# uc_skew_cal_status = uc_skew_cal_notdone
# uc_txvod_cal = uc_tx_vod_cal_off
# uc_txvod_cal_cont = uc_tx_vod_cal_cont_off
# uc_txvod_cal_status = uc_tx_vod_cal_notdone
# uc_vcc_setting = vcc_setting0
# user_fir_coeff_ctrl_sel = ram_ctl
# vod_output_swing_ctrl = 00
# vreg_output = vccdreg_nominal
# xtx_path_analog_mode = user_custom
# xtx_path_bonding_mode = x1_non_bonded
# xtx_path_calibration_en = false
# xtx_path_clock_divider_ratio = 1
# xtx_path_datarate = 3125000000 bps
# xtx_path_datawidth = 14
# xtx_path_gt_enabled = disable
# xtx_path_initial_settings = true
# xtx_path_optimal = false
# xtx_path_pma_tx_divclk_hz_bin = 0000000009502f90
# xtx_path_prot_mode = basic_tx
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# xtx_path_tx_pll_clk_hz = 1562500000
# 
# ================ INPUT =================
# prot_mode           = basic_tx
# input_select_x1     = unused
# input_select_xn     = sel_x6_dn
# input_select_gen3   = unused
# ================ OUTPUT ================
# x1_clock_source_sel = same_ch_txpll
# xn_clock_source_sel = sel_x6_bot
# ================ END ===================
# 
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_cgb
# ================================================
# bitslip_enable = disable_bitslip
# bonding_mode = x1_non_bonded
# bonding_reset_enable = disallow_bonding_reset
# cgb_power_down = normal_cgb
# datarate = 3125000000 bps
# dprio_cgb_vreg_boost = no_voltage_boost
# initial_settings = true
# input_select_gen3 = unused
# input_select_x1 = unused
# input_select_xn = sel_x6_dn
# observe_cgb_clocks = observe_nothing
# pcie_gen3_bitwidth = pciegen3_wide
# prot_mode = basic_tx
# scratch0_x1_clock_src = unused
# scratch1_x1_clock_src = unused
# scratch2_x1_clock_src = unused
# scratch3_x1_clock_src = unused
# select_done_master_or_slave = choose_master_pcie_sw_done
# ser_mode = twenty_bit
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_ucontrol_en = disable
# tx_ucontrol_pcie = gen1
# tx_ucontrol_reset = disable
# vccdreg_output = vccdreg_nominal
# local_x1_clock_source_sel = same_ch_txpll
# x1_div_m_sel = divbypass
# local_xn_clock_source_sel = sel_x6_bot
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_ser
# ================================================
# bonding_mode = x1_non_bonded
# clk_divtx_deskew = deskew_delay8
# control_clk_divtx = no_dft_control_clkdivtx
# duty_cycle_correction_mode_ctrl = dcc_disable
# initial_settings = true
# prot_mode = basic_tx
# ser_clk_divtx_user_sel = divtx_user_off
# ser_clk_mon = disable_clk_mon
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_10g_rx_pcs
# ================================================
# advanced_user_mode = disable
# align_del = align_del_dis
# ber_bit_err_total_cnt = bit_err_total_cnt_10g
# ber_clken = ber_clk_dis
# ber_xus_timer_window = 004c4a
# bitslip_mode = bitslip_dis
# blksync_bitslip_type = bitslip_comb
# blksync_bitslip_wait_cnt = 1
# blksync_bitslip_wait_type = bitslip_cnt
# blksync_bypass = blksync_bypass_en
# blksync_clken = blksync_clk_dis
# blksync_enum_invalid_sh_cnt = enum_invalid_sh_cnt_10g
# blksync_knum_sh_cnt_postlock = knum_sh_cnt_postlock_10g
# blksync_knum_sh_cnt_prelock = knum_sh_cnt_prelock_10g
# blksync_pipeln = blksync_pipeln_dis
# clr_errblk_cnt_en = disable
# control_del = control_del_none
# crcchk_bypass = crcchk_bypass_en
# crcchk_clken = crcchk_clk_dis
# crcchk_inv = crcchk_inv_en
# crcchk_pipeln = crcchk_pipeln_en
# crcflag_pipeln = crcflag_pipeln_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# data_bit_reverse = data_bit_reverse_dis
# dec64b66b_clken = dec64b66b_clk_dis
# dec_64b66b_rxsm_bypass = dec_64b66b_rxsm_bypass_en
# descrm_bypass = descrm_bypass_en
# descrm_clken = descrm_clk_dis
# descrm_mode = async
# descrm_pipeln = enable
# dft_clk_out_sel = rx_master_clk
# dis_signal_ok = dis_signal_ok_en
# dispchk_bypass = dispchk_bypass_en
# empty_flag_type = empty_rd_side
# fast_path = fast_path_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_read = fifo_double_read_dis
# fifo_stop_rd = n_rd_empty
# fifo_stop_wr = n_wr_full
# force_align = force_align_dis
# frmsync_bypass = frmsync_bypass_en
# frmsync_clken = frmsync_clk_dis
# frmsync_enum_scrm = enum_scrm_default
# frmsync_enum_sync = enum_sync_default
# frmsync_flag_type = location_only
# frmsync_knum_sync = knum_sync_default
# frmsync_mfrm_length = 0800
# frmsync_pipeln = frmsync_pipeln_en
# full_flag_type = full_wr_side
# gb_rx_idwidth = width_64
# gb_rx_odwidth = width_64
# gbexp_clken = gbexp_clk_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# master_clk_sel = master_rx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# rand_clken = rand_clk_dis
# rd_clk_sel = rd_rx_pld_clk
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# rx_fifo_write_ctrl = blklock_stops
# rx_scrm_width = bit64
# rx_sh_location = msb
# rx_signal_ok_sel = synchronized_ver
# rx_sm_bypass = rx_sm_bypass_en
# rx_sm_hiber = rx_sm_hiber_en
# rx_sm_pipeln = rx_sm_pipeln_en
# rx_testbus_sel = rx_fifo_testbus1
# rx_true_b2b = b2b
# rxfifo_empty = empty_default
# rxfifo_full = full_default
# rxfifo_mode = phase_comp
# rxfifo_pempty = 02
# rxfifo_pfull = 17
# silicon_rev = 20nm5
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_10g_tx_pcs
# ================================================
# advanced_user_mode = disable
# bitslip_en = bitslip_dis
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# comp_cnt = 02
# compin_sel = compin_slave_bot
# crcgen_bypass = crcgen_bypass_en
# crcgen_clken = crcgen_clk_dis
# crcgen_err = crcgen_err_dis
# crcgen_inv = crcgen_inv_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# ctrl_plane_bonding = ctrl_slave_blw
# data_bit_reverse = data_bit_reverse_dis
# dft_clk_out_sel = tx_master_clk
# dispgen_bypass = dispgen_bypass_en
# dispgen_clken = dispgen_clk_dis
# dispgen_err = dispgen_err_dis
# dispgen_pipeln = dispgen_pipeln_dis
# distdwn_bypass_pipeln = distdwn_bypass_pipeln_dis
# distdwn_master = distdwn_master_dis
# distup_bypass_pipeln = distup_bypass_pipeln_dis
# distup_master = distup_master_dis
# dv_bond = dv_bond_en
# empty_flag_type = empty_rd_side
# enc64b66b_txsm_clken = enc64b66b_txsm_clk_dis
# enc_64b66b_txsm_bypass = enc_64b66b_txsm_bypass_en
# fastpath = fastpath_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_write = fifo_double_write_dis
# fifo_reg_fast = fifo_reg_fast_dis
# fifo_stop_rd = rd_empty
# fifo_stop_wr = n_wr_full
# frmgen_burst = frmgen_burst_dis
# frmgen_bypass = frmgen_bypass_en
# frmgen_clken = frmgen_clk_dis
# frmgen_mfrm_length = 0800
# frmgen_pipeln = frmgen_pipeln_en
# frmgen_pyld_ins = frmgen_pyld_ins_dis
# frmgen_wordslip = frmgen_wordslip_dis
# full_flag_type = full_wr_side
# gb_pipeln_bypass = disable
# gb_tx_idwidth = width_64
# gb_tx_odwidth = width_64
# gbred_clken = gbred_clk_dis
# indv = indv_dis
# low_latency_en = disable
# master_clk_sel = master_tx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# pseudo_random = all_0
# pseudo_seed_a_bin = 03ffffffffffffff
# pseudo_seed_b_bin = 03ffffffffffffff
# random_disp = disable
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# scrm_bypass = scrm_bypass_en
# scrm_clken = scrm_clk_dis
# scrm_mode = async
# scrm_pipeln = enable
# sh_err = sh_err_dis
# silicon_rev = 20nm5
# sop_mark = sop_mark_dis
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# tx_scrm_err = scrm_err_dis
# tx_scrm_width = bit64
# tx_sh_location = msb
# tx_sm_bypass = tx_sm_bypass_en
# tx_sm_pipeln = tx_sm_pipeln_en
# tx_testbus_sel = tx_fifo_testbus1
# txfifo_empty = empty_default
# txfifo_full = full_default
# txfifo_mode = phase_comp
# txfifo_pempty = 2
# txfifo_pfull = b
# wr_clk_sel = wr_tx_pld_clk
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_8g_rx_pcs
# ================================================
# auto_error_replacement = dis_err_replace
# auto_speed_nego = dis_asn
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_deserializer = dis_bds
# cdr_ctrl_rxvalid_mask = dis_rxvalid_mask
# clkcmp_pattern_n = 00000
# clkcmp_pattern_p = 00000
# clock_gate_bds_dec_asn = dis_bds_dec_asn_clk_gating
# clock_gate_cdr_eidle = en_cdr_eidle_clk_gating
# clock_gate_dw_pc_wrclk = dis_dw_pc_wrclk_gating
# clock_gate_dw_rm_rd = en_dw_rm_rdclk_gating
# clock_gate_dw_rm_wr = en_dw_rm_wrclk_gating
# clock_gate_dw_wa = dis_dw_wa_clk_gating
# clock_gate_pc_rdclk = dis_pc_rdclk_gating
# clock_gate_sw_pc_wrclk = dis_sw_pc_wrclk_gating
# clock_gate_sw_rm_rd = en_sw_rm_rdclk_gating
# clock_gate_sw_rm_wr = en_sw_rm_wrclk_gating
# clock_gate_sw_wa = dis_sw_wa_clk_gating
# clock_observation_in_pld_core = internal_sw_wa_clk
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_slave_below
# ctrl_plane_bonding_distribution = not_master_chnl_distr
# eidle_entry_eios = dis_eidle_eios
# eidle_entry_iei = dis_eidle_iei
# eidle_entry_sd = dis_eidle_sd
# eightb_tenb_decoder = dis_8b10b
# err_flags_sel = err_flags_wa
# fixed_pat_det = dis_fixed_patdet
# fixed_pat_num = 0
# force_signal_detect = en_force_signal_detect
# gen3_clk_en = disable_clk
# gen3_rx_clk_sel = rcvd_clk
# gen3_tx_clk_sel = tx_pma_clk
# hip_mode = dis_hip
# ibm_invalid_code = dis_ibm_invalid_code
# invalid_code_flag_only = dis_invalid_code_only
# pad_or_edb_error_replace = replace_edb
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# pipe_if_enable = dis_pipe_rx
# pma_dw = twenty_bit
# polinv_8b10b_dec = dis_polinv_8b10b_dec
# prot_mode = basic_rm_disable
# rate_match = dis_rm
# rate_match_del_thres = dis_rm_del_thres
# rate_match_empty_thres = dis_rm_empty_thres
# rate_match_full_thres = dis_rm_full_thres
# rate_match_ins_thres = dis_rm_ins_thres
# rate_match_start_thres = dis_rm_start_thres
# reconfig_settings = {}
# rx_clk2 = rcvd_clk_clk2
# rx_clk_free_running = en_rx_clk_free_run
# rx_pcs_urst = en_rx_pcs_urst
# rx_rcvd_clk = rcvd_clk_rcvd_clk
# rx_rd_clk = pld_rx_clk
# rx_refclk = dis_refclk_sel
# rx_wr_clk = rx_clk2_div_1_2_4
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# sync_sm_idle_eios = dis_syncsm_idle
# test_bus_sel = tx_testbus
# tx_rx_parallel_loopback = dis_plpbk
# wa_boundary_lock_ctrl = sync_sm
# wa_clk_slip_spacing = 010
# wa_det_latency_sync_status_beh = dont_care_assert_sync
# wa_disp_err_flag = en_disp_err_flag
# wa_kchar = dis_kchar
# wa_pd = wa_pd_20
# wa_pd_data_bin = 00000000000a0d7c
# wa_pd_polarity = en_pd_both_pol
# wa_pld_controlled = dis_pld_ctrl
# wa_renumber_data = 01
# wa_rgnumber_data = 01
# wa_rknumber_data = 01
# wa_rosnumber_data = 0
# wa_rvnumber_data = 0000
# wa_sync_sm_ctrl = dw_basic_sync_sm
# wait_cnt = 000
# 
# 
# ================================================
# Module twentynm_hssi_8g_tx_pcs
# ================================================
# auto_speed_nego_gen2 = dis_asn_g2
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_serializer = dis_bs
# clock_gate_bs_enc = dis_bs_enc_clk_gating
# clock_gate_dw_fifowr = dis_dw_fifowr_clk_gating
# clock_gate_fiford = dis_fiford_clk_gating
# clock_gate_sw_fifowr = dis_sw_fifowr_clk_gating
# clock_observation_in_pld_core = internal_refclk_b
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_slave_below
# ctrl_plane_bonding_distribution = not_master_chnl_distr
# data_selection_8b10b_encoder_input = normal_data_path
# dynamic_clk_switch = dis_dyn_clk_switch
# eightb_tenb_disp_ctrl = dis_disp_ctrl
# eightb_tenb_encoder = dis_8b10b
# force_echar = dis_force_echar
# force_kchar = dis_force_kchar
# gen3_tx_clk_sel = dis_tx_clk
# gen3_tx_pipe_clk_sel = dis_tx_pipe_clk
# hip_mode = dis_hip
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# phfifo_write_clk_sel = pld_tx_clk
# pma_dw = twenty_bit
# prot_mode = basic
# reconfig_settings = {}
# refclk_b_clk_sel = tx_pma_clock
# revloop_back_rm = dis_rev_loopback_rx_rm
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# tx_bitslip = dis_tx_bitslip
# tx_compliance_controlled_disparity = dis_txcompliance
# tx_fast_pld_reg = dis_tx_fast_pld_reg
# txclk_freerun = en_freerun_tx
# txpcs_urst = en_txpcs_urst
# 
# 
# ================================================
# Module twentynm_hssi_common_pcs_pma_interface
# ================================================
# asn_clk_enable = false
# asn_enable = dis_asn
# block_sel = eight_g_pcs
# bypass_early_eios = true
# bypass_pcie_switch = true
# bypass_pma_ltr = true
# bypass_pma_sw_done = false
# bypass_ppm_lock = false
# bypass_send_syncp_fbkp = true
# bypass_txdetectrx = true
# cdr_control = dis_cdr_ctrl
# cid_enable = dis_cid_mode
# cp_cons_sel = cp_cons_master
# cp_dwn_mstr = true
# cp_up_mstr = true
# ctrl_plane_bonding = individual
# data_mask_count = 0000
# data_mask_count_multi = 0
# dft_observation_clock_selection = dft_clk_obsrv_tx0
# early_eios_counter = 00
# force_freqdet = force_freqdet_dis
# free_run_clk_enable = false
# ignore_sigdet_g23 = false
# pc_en_counter = 00
# pc_rst_counter = 00
# pcie_hip_mode = hip_disable
# ph_fifo_reg_mode = phfifo_reg_mode_dis
# phfifo_flush_wait = 00
# pipe_if_g3pcs = pipe_if_8gpcs
# pma_done_counter = 00000
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# ppm_cnt_rst = ppm_cnt_rst_dis
# ppm_deassert_early = deassert_early_dis
# ppm_det_buckets = ppm_300_100_bucket
# ppm_gen1_2_cnt = cnt_32k
# ppm_post_eidle_delay = cnt_200_cycles
# ppmsel = ppmsel_300
# prot_mode = other_protocols
# reconfig_settings = {}
# rxvalid_mask = rxvalid_mask_dis
# sigdet_wait_counter = 000
# sigdet_wait_counter_multi = 0
# silicon_rev = 20nm5
# sim_mode = disable
# spd_chg_rst_wait_cnt_en = false
# sup_mode = user_mode
# testout_sel = ppm_det_test
# wait_clk_on_off_timer = 0
# wait_pipe_synchronizing = 00
# wait_send_syncp_fbkp = 000
# 
# 
# ================================================
# Module twentynm_hssi_common_pld_pcs_interface
# ================================================
# dft_clk_out_en = dft_clk_out_disable
# dft_clk_out_sel = teng_rx_dft_clk
# hrdrstctrl_en = hrst_dis
# pcs_testbus_block_sel = pma_if
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_rx_pcs
# ================================================
# double_read_mode = double_read_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_tx_pcs
# ================================================
# double_write_mode = double_write_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_gen3_rx_pcs
# ================================================
# block_sync = bypass_block_sync
# block_sync_sm = disable_blk_sync_sm
# cdr_ctrl_force_unalgn = disable
# lpbk_force = lpbk_frce_dis
# mode = disable_pcs
# rate_match_fifo = bypass_rm_fifo
# rate_match_fifo_latency = low_latency
# reconfig_settings = {}
# reverse_lpbk = rev_lpbk_dis
# rx_b4gb_par_lpbk = b4gb_par_lpbk_dis
# rx_force_balign = dis_force_balign
# rx_ins_del_one_skip = ins_del_one_skip_dis
# rx_num_fixed_pat = 0
# rx_test_out_sel = rx_test_out0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_gen3_tx_pcs
# ================================================
# mode = disable_pcs
# reverse_lpbk = rev_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_bitslip = 00
# tx_gbox_byp = bypass_gbox
# 
# 
# ================================================
# Module twentynm_hssi_krfec_rx_pcs
# ================================================
# blksync_cor_en = detect
# bypass_gb = bypass_dis
# clr_ctrl = both_enabled
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# dv_start = with_blklock
# err_mark_type = err_mark_10g
# error_marking_en = err_mark_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# parity_invalid_enum = 08
# parity_valid_num = 4
# pipeln_blksync = enable
# pipeln_descrm = disable
# pipeln_errcorrect = disable
# pipeln_errtrap_ind = enable
# pipeln_errtrap_lfsr = disable
# pipeln_errtrap_loc = disable
# pipeln_errtrap_pat = disable
# pipeln_gearbox = enable
# pipeln_syndrm = enable
# pipeln_trans_dec = disable
# prot_mode = disable_mode
# receive_order = receive_lsb
# reconfig_settings = {}
# rx_testbus_sel = overall
# signal_ok_en = sig_ok_en
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_krfec_tx_pcs
# ================================================
# burst_err = burst_err_dis
# burst_err_len = burst_err_len1
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# enc_frame_query = enc_query_dis
# low_latency_en = disable
# pipeln_encoder = enable
# pipeln_scrambler = enable
# prot_mode = disable_mode
# silicon_rev = 20nm5
# sup_mode = user_mode
# transcode_err = trans_err_dis
# transmit_order = transmit_lsb
# tx_testbus_sel = overall
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen1_2
# ================================================
# elec_idle_delay_val = 0
# error_replace_pad = replace_edb
# hip_mode = dis_hip
# ind_error_reporting = dis_ind_error_reporting
# phystatus_delay_val = 0
# phystatus_rst_toggle = dis_phystatus_rst_toggle
# pipe_byte_de_serializer_en = dont_care_bds
# prot_mode = basic
# reconfig_settings = {}
# rpre_emph_a_val = 00
# rpre_emph_b_val = 00
# rpre_emph_c_val = 00
# rpre_emph_d_val = 00
# rpre_emph_e_val = 00
# rvod_sel_a_val = 00
# rvod_sel_b_val = 00
# rvod_sel_c_val = 00
# rvod_sel_d_val = 00
# rvod_sel_e_val = 00
# rx_pipe_enable = dis_pipe_rx
# rxdetect_bypass = dis_rxdetect_bypass
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_pipe_enable = dis_pipe_tx
# txswing = dis_txswing
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen3
# ================================================
# bypass_rx_detection_enable = false
# bypass_rx_preset = 0
# bypass_rx_preset_enable = false
# bypass_tx_coefficent = 00000
# bypass_tx_coefficent_enable = false
# elecidle_delay_g3 = 0
# ind_error_reporting = dis_ind_error_reporting
# mode = disable_pcs
# phy_status_delay_g12 = 0
# phy_status_delay_g3 = 0
# phystatus_rst_toggle_g12 = dis_phystatus_rst_toggle
# phystatus_rst_toggle_g3 = dis_phystatus_rst_toggle_g3
# rate_match_pad_insertion = dis_rm_fifo_pad_ins
# silicon_rev = 20nm5
# sup_mode = user_mode
# test_out_sel = disable_test_out
# 
# 
# ================================================
# Module twentynm_hssi_rx_pcs_pma_interface
# ================================================
# block_sel = eight_g_pcs
# channel_operation_mode = tx_rx_pair_enabled
# clkslip_sel = pld
# lpbk_en = disable
# master_clk_sel = master_rx_pma_clk
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_rx = pma_20b_rx
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_ver = prbs_off
# prot_mode_rx = eightg_basic_mode_rx
# reconfig_settings = {}
# rx_dyn_polarity_inversion = rx_dyn_polinv_dis
# rx_lpbk_en = lpbk_dis
# rx_prbs_force_signal_ok = force_sig_ok
# rx_prbs_mask = prbsmask128
# rx_prbs_mode = teng_mode
# rx_signalok_signaldet_sel = sel_sig_det
# rx_static_polarity_inversion = rx_stat_polinv_dis
# rx_uhsif_lpbk_en = uhsif_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_rx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_rx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_rx = individual_rx
# hd_10g_fifo_mode_rx = fifo_rx
# hd_10g_low_latency_en_rx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_rx = pma_64b_rx
# hd_10g_prot_mode_rx = disabled_prot_mode_rx
# hd_10g_shared_fifo_width_rx = single_rx
# hd_10g_sup_mode = user_mode
# hd_10g_test_bus_mode = rx
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_rx = individual_rx
# hd_8g_fifo_mode_rx = fifo_rx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_rx = pma_20b_rx
# hd_8g_prot_mode_rx = basic_rm_disable_rx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_clklow_clk_hz = 09502f90
# hd_chnl_ctrl_plane_bonding_rx = individual_rx
# hd_chnl_fref_clk_hz = 09502f90
# hd_chnl_frequency_rules_en = disable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_rx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_operating_voltage = standard
# hd_chnl_pcs_ac_pwr_rules_en = disable
# hd_chnl_pcs_pair_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_pwr_scaling_clk = pma_rx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_rx = fifo_rx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_rx_clk_hz = 09502f90
# hd_chnl_pma_dw_rx = pma_20b_rx
# hd_chnl_pma_rx_clk_hz = 09502f90
# hd_chnl_prot_mode_rx = basic_8gpcs_rm_disable_rx
# hd_chnl_shared_fifo_width_rx = single_rx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_chnl_transparent_pcs_rx = disable
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_rx = non_teng_mode_rx
# hd_fifo_shared_fifo_width_rx = single_rx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_rx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_rx = disabled_prot_mode_rx
# hd_krfec_sup_mode = user_mode
# hd_krfec_test_bus_mode = tx
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_rx = eightg_and_g3_pld_fifo_mode_rx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_rx = pma_20b_rx
# hd_pmaif_prot_mode_rx = eightg_basic_mode_rx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_rx_block_sel = eightg
# pcs_rx_clk_out_sel = eightg_clk_out
# pcs_rx_clk_sel = pld_rx_clk
# pcs_rx_hip_clk_en = hip_rx_disable
# pcs_rx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_tx_pcs_pma_interface
# ================================================
# bypass_pma_txelecidle = true
# channel_operation_mode = tx_rx_pair_enabled
# lpbk_en = disable
# master_clk_sel = master_tx_pma_clk
# pcie_sub_prot_mode_tx = other_prot_mode
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_tx = pma_20b_tx
# pma_if_dft_en = dft_dis
# pmagate_en = pmagate_dis
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_gen_pat = prbs_gen_dis
# prot_mode_tx = eightg_basic_mode_tx
# reconfig_settings = {}
# silicon_rev = 20nm5
# sq_wave_num = sq_wave_default
# sqwgen_clken = sqwgen_clk_dis
# sup_mode = user_mode
# tx_dyn_polarity_inversion = tx_dyn_polinv_dis
# tx_pma_data_sel = eight_g_pcs
# tx_static_polarity_inversion = tx_stat_polinv_dis
# uhsif_cnt_step_filt_before_lock = uhsif_filt_stepsz_b4lock_2
# uhsif_cnt_thresh_filt_after_lock_value = 0
# uhsif_cnt_thresh_filt_before_lock = uhsif_filt_cntthr_b4lock_8
# uhsif_dcn_test_update_period = uhsif_dcn_test_period_4
# uhsif_dcn_testmode_enable = uhsif_dcn_test_mode_disable
# uhsif_dead_zone_count_thresh = uhsif_dzt_cnt_thr_2
# uhsif_dead_zone_detection_enable = uhsif_dzt_disable
# uhsif_dead_zone_obser_window = uhsif_dzt_obr_win_16
# uhsif_dead_zone_skip_size = uhsif_dzt_skipsz_4
# uhsif_delay_cell_index_sel = uhsif_index_cram
# uhsif_delay_cell_margin = uhsif_dcn_margin_2
# uhsif_delay_cell_static_index_value = 00
# uhsif_dft_dead_zone_control = uhsif_dft_dz_det_val_0
# uhsif_dft_up_filt_control = uhsif_dft_up_val_0
# uhsif_enable = uhsif_disable
# uhsif_lock_det_segsz_after_lock = uhsif_lkd_segsz_aflock_512
# uhsif_lock_det_segsz_before_lock = uhsif_lkd_segsz_b4lock_16
# uhsif_lock_det_thresh_cnt_after_lock_value = 0
# uhsif_lock_det_thresh_cnt_before_lock_value = 0
# uhsif_lock_det_thresh_diff_after_lock_value = 0
# uhsif_lock_det_thresh_diff_before_lock_value = 0
# 
# 
# ================================================
# Module twentynm_hssi_tx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_tx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_tx = ctrl_slave_blw_tx
# hd_10g_fifo_mode_tx = fifo_tx
# hd_10g_low_latency_en_tx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_tx = pma_64b_tx
# hd_10g_prot_mode_tx = disabled_prot_mode_tx
# hd_10g_shared_fifo_width_tx = single_tx
# hd_10g_sup_mode = user_mode
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_tx = ctrl_slave_blw_tx
# hd_8g_fifo_mode_tx = fifo_tx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_tx = pma_20b_tx
# hd_8g_prot_mode_tx = basic_tx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_ctrl_plane_bonding_tx = ctrl_slave_blw_tx
# hd_chnl_frequency_rules_en = enable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_tx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_pcs_tx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_tx_pwr_scaling_clk = pma_tx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_tx = fifo_tx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_tx_clk_hz = 09502f90
# hd_chnl_pld_uhsif_tx_clk_hz = 00000000
# hd_chnl_pma_dw_tx = pma_20b_tx
# hd_chnl_pma_tx_clk_hz = 09502f90
# hd_chnl_prot_mode_tx = basic_8gpcs_tx
# hd_chnl_shared_fifo_width_tx = single_tx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_tx = non_teng_mode_tx
# hd_fifo_shared_fifo_width_tx = single_tx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_tx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_tx = disabled_prot_mode_tx
# hd_krfec_sup_mode = user_mode
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_tx = eightg_and_g3_pld_fifo_mode_tx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_ctrl_plane_bonding = individual
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_tx = pma_20b_tx
# hd_pmaif_prot_mode_tx = eightg_basic_mode_tx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_tx_clk_out_sel = eightg_clk_out
# pcs_tx_clk_source = eightg
# pcs_tx_data_source = hip_disable
# pcs_tx_delay1_clk_en = delay1_clk_disable
# pcs_tx_delay1_clk_sel = pcs_tx_clk
# pcs_tx_delay1_ctrl = delay1_path0
# pcs_tx_delay1_data_sel = one_ff_delay
# pcs_tx_delay2_clk_en = delay2_clk_disable
# pcs_tx_delay2_ctrl = delay2_path0
# pcs_tx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_pma_adaptation
# ================================================
# adapt_dfe_control_sel = r_adapt_dfe_control_sel_0
# adapt_dfe_sel = r_adapt_dfe_sel_0
# adapt_mode = manual
# adapt_vga_sel = r_adapt_vga_sel_0
# adapt_vref_sel = r_adapt_vref_sel_0
# adp_1s_ctle_bypass = radp_1s_ctle_bypass_0
# adp_4s_ctle_bypass = radp_4s_ctle_bypass_0
# adp_adapt_control_sel = radp_adapt_control_sel_0
# adp_adapt_rstn = radp_adapt_rstn_1
# adp_adapt_start = radp_adapt_start_0
# adp_bist_auxpath_en = radp_bist_auxpath_disable
# adp_bist_count_rstn = radp_bist_count_rstn_0
# adp_bist_datapath_en = radp_bist_datapath_disable
# adp_bist_mode = radp_bist_mode_0
# adp_bist_odi_dfe_sel = radp_bist_odi_dfe_sel_0
# adp_bist_spec_en = radp_bist_spec_en_0
# adp_control_mux_bypass = radp_control_mux_bypass_0
# adp_ctle_acgain_4s = radp_ctle_acgain_4s_0
# adp_ctle_adapt_bw = radp_ctle_adapt_bw_3
# adp_ctle_adapt_cycle_window = radp_ctle_adapt_cycle_window_6
# adp_ctle_adapt_oneshot = radp_ctle_adapt_oneshot_1
# adp_ctle_en = radp_ctle_disable
# adp_ctle_eqz_1s_sel = radp_ctle_eqz_1s_sel_0
# adp_ctle_force_spec_sign = radp_ctle_force_spec_sign_0
# adp_ctle_hold_en = radp_ctle_not_held
# adp_ctle_load = radp_ctle_load_0
# adp_ctle_load_value = radp_ctle_load_value_0
# adp_ctle_scale = radp_ctle_scale_0
# adp_ctle_scale_en = radp_ctle_scale_en_0
# adp_ctle_spec_sign = radp_ctle_spec_sign_0
# adp_ctle_sweep_direction = radp_ctle_sweep_direction_1
# adp_ctle_threshold = radp_ctle_threshold_0
# adp_ctle_threshold_en = radp_ctle_threshold_en_0
# adp_ctle_vref_polarity = radp_ctle_vref_polarity_0
# adp_ctle_window = radp_ctle_window_0
# adp_dfe_bw = radp_dfe_bw_3
# adp_dfe_clkout_div_sel = radp_dfe_clkout_div_sel_0
# adp_dfe_cycle = radp_dfe_cycle_6
# adp_dfe_fltap1 = radp_dfe_fltap1_0
# adp_dfe_fltap1_sgn = radp_dfe_fltap1_sgn_0
# adp_dfe_fltap2 = radp_dfe_fltap2_0
# adp_dfe_fltap2_sgn = radp_dfe_fltap2_sgn_0
# adp_dfe_fltap3 = radp_dfe_fltap3_0
# adp_dfe_fltap3_sgn = radp_dfe_fltap3_sgn_0
# adp_dfe_fltap4 = radp_dfe_fltap4_0
# adp_dfe_fltap4_sgn = radp_dfe_fltap4_sgn_0
# adp_dfe_fltap_bypass = radp_dfe_fltap_bypass_0
# adp_dfe_fltap_en = radp_dfe_fltap_disable
# adp_dfe_fltap_hold_en = radp_dfe_fltap_not_held
# adp_dfe_fltap_load = radp_dfe_fltap_load_0
# adp_dfe_fltap_position = radp_dfe_fltap_position_0
# adp_dfe_force_spec_sign = radp_dfe_force_spec_sign_0
# adp_dfe_fxtap1 = radp_dfe_fxtap1_0
# adp_dfe_fxtap2 = radp_dfe_fxtap2_0
# adp_dfe_fxtap2_sgn = radp_dfe_fxtap2_sgn_0
# adp_dfe_fxtap3 = radp_dfe_fxtap3_0
# adp_dfe_fxtap3_sgn = radp_dfe_fxtap3_sgn_0
# adp_dfe_fxtap4 = radp_dfe_fxtap4_0
# adp_dfe_fxtap4_sgn = radp_dfe_fxtap4_sgn_0
# adp_dfe_fxtap5 = radp_dfe_fxtap5_0
# adp_dfe_fxtap5_sgn = radp_dfe_fxtap5_sgn_0
# adp_dfe_fxtap6 = radp_dfe_fxtap6_0
# adp_dfe_fxtap6_sgn = radp_dfe_fxtap6_sgn_0
# adp_dfe_fxtap7 = radp_dfe_fxtap7_0
# adp_dfe_fxtap7_sgn = radp_dfe_fxtap7_sgn_0
# adp_dfe_fxtap_bypass = radp_dfe_fxtap_bypass_0
# adp_dfe_fxtap_en = radp_dfe_fxtap_disable
# adp_dfe_fxtap_hold_en = radp_dfe_fxtap_not_held
# adp_dfe_fxtap_load = radp_dfe_fxtap_load_0
# adp_dfe_mode = radp_dfe_mode_0
# adp_dfe_spec_sign = radp_dfe_spec_sign_0
# adp_dfe_vref_polarity = radp_dfe_vref_polarity_0
# adp_force_freqlock = radp_force_freqlock_off
# adp_frame_capture = radp_frame_capture_0
# adp_frame_en = radp_frame_en_0
# adp_frame_odi_sel = radp_frame_odi_sel_0
# adp_frame_out_sel = radp_frame_out_sel_0
# adp_lfeq_fb_sel = radp_lfeq_fb_sel_0
# adp_mode = radp_mode_0
# adp_odi_control_sel = radp_odi_control_sel_0
# adp_onetime_dfe = radp_onetime_dfe_1
# adp_spec_avg_window = radp_spec_avg_window_4
# adp_spec_trans_filter = radp_spec_trans_filter_2
# adp_status_sel = radp_status_sel_0
# adp_vga_bypass = radp_vga_bypass_0
# adp_vga_en = radp_vga_disable
# adp_vga_load = radp_vga_load_0
# adp_vga_polarity = radp_vga_polarity_0
# adp_vga_sel = radp_vga_sel_0
# adp_vga_sweep_direction = radp_vga_sweep_direction_1
# adp_vga_threshold = radp_vga_threshold_4
# adp_vref_bw = radp_vref_bw_1
# adp_vref_bypass = radp_vref_bypass_0
# adp_vref_cycle = radp_vref_cycle_6
# adp_vref_dfe_spec_en = radp_vref_dfe_spec_en_0
# adp_vref_en = radp_vref_disable
# adp_vref_hold_en = radp_vref_not_held
# adp_vref_load = radp_vref_load_0
# adp_vref_polarity = radp_vref_polarity_0
# adp_vref_sel = radp_vref_sel_21
# adp_vref_vga_level = radp_vref_vga_level_13
# datarate = 3125000000 bps
# initial_settings = true
# odi_count_threshold = rodi_count_threshold_0
# odi_dfe_spec_en = rodi_dfe_spec_en_0
# odi_en = rodi_en_0
# odi_mode = rodi_mode_0
# odi_rstn = rodi_rstn_0
# odi_spec_sel = rodi_spec_sel_0
# odi_start = rodi_start_0
# odi_vref_sel = rodi_vref_sel_0
# optimal = false
# prot_mode = basic_rx
# rrx_pcie_eqz = rrx_pcie_eqz_0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_cdr_refclk_select_mux
# ================================================
# local_cdr_clkin_scratch0_src = cdr_clkin_scratch0_src_refclk_iqclk
# local_cdr_clkin_scratch1_src = cdr_clkin_scratch1_src_refclk_iqclk
# local_cdr_clkin_scratch2_src = cdr_clkin_scratch2_src_refclk_iqclk
# local_cdr_clkin_scratch3_src = cdr_clkin_scratch3_src_refclk_iqclk
# local_cdr_clkin_scratch4_src = cdr_clkin_scratch4_src_refclk_iqclk
# inclk0_logical_to_physical_mapping = ref_iqclk0
# inclk1_logical_to_physical_mapping = ref_iqclk1
# inclk2_logical_to_physical_mapping = ref_iqclk2
# inclk3_logical_to_physical_mapping = ref_iqclk3
# inclk4_logical_to_physical_mapping = ref_iqclk4
# powerdown_mode = powerup
# receiver_detect_src = iqclk_src
# refclk_select = ref_iqclk0
# silicon_rev = 20nm5
# local_xmux_refclk_src = refclk_iqclk
# local_xpm_iqref_mux_iqclk_sel = ref_iqclk0
# local_xpm_iqref_mux_scratch0_src = scratch0_ref_iqclk0
# local_xpm_iqref_mux_scratch1_src = scratch1_ref_iqclk1
# local_xpm_iqref_mux_scratch2_src = scratch2_ref_iqclk2
# local_xpm_iqref_mux_scratch3_src = scratch3_ref_iqclk3
# local_xpm_iqref_mux_scratch4_src = scratch4_ref_iqclk4
# 
# 
# ================================================
# Module twentynm_hssi_pma_channel_pll
# ================================================
# analog_mode = user_custom
# atb_select_control = atb_off
# auto_reset_on = auto_reset_off
# bandwidth_range_high = 0 hz
# bandwidth_range_low = 0 hz
# bbpd_data_pattern_filter_select = bbpd_data_pat_off
# bw_sel = medium
# cdr_odi_select = sel_cdr
# cdr_phaselock_mode = no_ignore_lock
# cdr_powerdown_mode = power_up
# cgb_div =           1
# chgpmp_current_pd = cp_current_pd_setting2
# chgpmp_current_pfd = cp_current_pfd_setting3
# chgpmp_replicate = false
# chgpmp_testmode = cp_test_disable
# clklow_mux_select = clklow_mux_cdr_fbclk
# datarate = 3125000000 bps
# diag_loopback_enable = false
# disable_up_dn = true
# f_max_pfd = 0 hz
# f_max_ref = 0 hz
# f_max_vco = 0 hz
# f_min_gt_channel = 0 hz
# f_min_pfd = 0 hz
# f_min_ref = 0 hz
# f_min_vco = 0 hz
# fb_select = direct_fb
# fref_clklow_div =           1
# fref_mux_select = fref_mux_cdr_refclk
# gpon_lck2ref_control = gpon_lck2ref_off
# initial_settings = true
# iqclk_mux_sel = power_down
# is_cascaded_pll = false
# lck2ref_delay_control = lck2ref_delay_2
# lf_resistor_pd = lf_pd_setting0
# lf_resistor_pfd = lf_pfd_setting2
# lf_ripple_cap = lf_no_ripple
# loop_filter_bias_select = lpflt_bias_off
# loopback_mode = loopback_disabled
# lpd_counter = 04
# lpfd_counter = 08
# ltd_ltr_micro_controller_select = ltd_ltr_pcs
# m_counter =          10
# n_counter_scratch =  2
# n_counter_scratch = 02
# optimal = false
# output_clock_frequency = 1562500000 Hz
# pcie_gen = non_pcie
# pd_fastlock_mode = false
# pd_l_counter =           4
# pfd_l_counter =           8
# pm_speed_grade = e2
# pma_width =          20
# position = position_unknown
# power_mode = low_power
# primary_use = cdr
# prot_mode = basic_rx
# reference_clock_frequency = 156250000 hz
# requires_gt_capable_channel = false
# reverse_serial_loopback = no_loopback
# set_cdr_v2i_enable = true
# set_cdr_vco_reset = false
# set_cdr_vco_speed = 07
# set_cdr_vco_speed_fix = 06
# set_cdr_vco_speed_pciegen3 = cdr_vco_max_speedbin_pciegen3
# side = side_unknown
# silicon_rev = 20nm5
# sup_mode = user_mode
# top_or_bottom = tb_unknown
# tx_pll_prot_mode = txpll_unused
# txpll_hclk_driver_enable = false
# uc_cru_rstb = cdr_lf_reset_off
# uc_ro_cal = uc_ro_cal_on
# uc_ro_cal_status = uc_ro_cal_notdone
# vco_freq = 6250000000 Hz
# vco_overrange_voltage = vco_overrange_off
# vco_underrange_voltage = vco_underange_off
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_buf
# ================================================
# act_isource_disable = isrc_en
# bodybias_enable = bodybias_en
# bodybias_select = bodybias_sel1
# bypass_eqz_stages_234 = bypass_off
# cdrclk_to_cgb = cdrclk_2cgb_dis
# cgm_bias_disable = cgmbias_en
# datarate = 3125000000 bps
# diag_lp_en = dlp_off
# eq_bw_sel = eq_bw_1
# eq_dc_gain_trim = no_dc_gain
# xrx_path_initial_settings = true
# input_vcm_sel = high_vcm
# iostandard = hssi_diffio
# lfeq_enable = non_lfeq_mode
# lfeq_zero_control = lfeq_setting_2
# link_rx = sr
# link_rx = sr
# loopback_modes = lpbk_disable
# offset_cal_pd = eqz1_en
# offset_cancellation_coarse = coarse_setting_00
# offset_cancellation_ctrl = volt_0mv
# offset_cancellation_fine = fine_setting_00
# offset_pd = oc_en
# one_stage_enable = non_s1_mode
# xrx_path_optimal = false
# pdb_rx = normal_rx_on
# pm_speed_grade = e2
# pm_tx_rx_cvp_mode = cvp_off
# pm_tx_rx_pcie_gen = non_pcie
# pm_tx_rx_pcie_gen_bitwidth = pcie_gen3_32b
# pm_tx_rx_testmux_select = setting0
# power_mode_rx = low_power
# power_mode_rx = low_power
# power_rail_eht =           0
# power_rail_er =           0
# xrx_path_prot_mode = basic_rx
# qpi_enable = non_qpi_mode
# refclk_en = disable
# rx_atb_select = atb_disable
# rx_refclk_divider = bypass_divider
# rx_sel_bias_source = bias_vcmdrv
# silicon_rev = 20nm5
# xrx_path_sup_mode = user_mode
# term_sel = r_r1
# term_tri_enable = disable_tri
# vccela_supply_voltage = vccela_1p1v
# vcm_current_add = vcm_current_default
# vcm_sel = vcm_setting_10
# vga_bandwidth_select = vga_bw_1
# xrx_path_analog_mode = user_custom
# xrx_path_datarate = 3125000000 bps
# xrx_path_datawidth = 14
# xrx_path_gt_enabled = disable
# xrx_path_initial_settings = true
# xrx_path_jtag_hys = hys_increase_disable
# xrx_path_jtag_lp = lp_off
# xrx_path_optimal = false
# xrx_path_pma_rx_divclk_hz_bin = 0000000009502f90
# xrx_path_prot_mode = basic_rx
# xrx_path_sup_mode = user_mode
# xrx_path_uc_cal_enable = rx_cal_off
# xrx_path_uc_cru_rstb = cdr_lf_reset_off
# xrx_path_uc_pcie_sw = uc_pcie_gen1
# xrx_path_uc_rx_rstb = rx_reset_on
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_deser
# ================================================
# bitslip_bypass = bs_bypass_yes
# clkdiv_source = vco_bypass_normal
# clkdivrx_user_mode = clkdivrx_user_disabled
# datarate = 3125000000 bps
# deser_factor =          20
# deser_powerdown = deser_power_up
# force_adaptation_outputs = normal_outputs
# force_clkdiv_for_testing = normal_clkdiv
# optimal = false
# pcie_gen = non_pcie
# pcie_gen_bitwidth = pcie_gen3_32b
# prot_mode = basic_rx
# rst_n_adapt_odi = no_rst_adapt_odi
# sdclk_enable = false
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_dfe
# ================================================
# atb_select = atb_disable
# datarate = 3125000000 bps
# dft_en = dft_disable
# initial_settings = true
# oc_sa_adp1 = 00
# oc_sa_adp2 = 00
# oc_sa_c270 = 00
# oc_sa_c90 = 00
# oc_sa_d0c0 = 00
# oc_sa_d0c180 = 00
# oc_sa_d1c0 = 00
# oc_sa_d1c180 = 00
# optimal = false
# pdb = 6466655f656e61626c65
# pdb_fixedtap = fixtap_dfe_powerdown
# pdb_floattap = floattap_dfe_powerdown
# pdb_fxtap4t7 = fxtap4t7_powerdown
# power_mode = low_power
# prot_mode = basic_rx
# sel_fltapstep_dec = fltap_step_no_dec
# sel_fltapstep_inc = fltap_step_no_inc
# sel_fxtapstep_dec = fxtap_step_no_dec
# sel_fxtapstep_inc = fxtap_step_no_inc
# sel_oc_en = off_canc_disable
# sel_probe_tstmx = probe_tstmx_none
# silicon_rev = 20nm5
# sup_mode = user_mode
# uc_rx_dfe_cal = uc_rx_dfe_cal_off
# uc_rx_dfe_cal_status = uc_rx_dfe_cal_notdone
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_odi
# ================================================
# clk_dcd_bypass = no_bypass
# datarate = 3125000000 bps
# enable_odi = power_down_eye
# initial_settings = true
# invert_dfe_vref = no_inversion
# monitor_bw_sel = bw_1
# oc_sa_c0 = 00
# oc_sa_c180 = 00
# optimal = false
# phase_steps_64_vs_128 = phase_steps_64
# phase_steps_sel = step40
# power_mode = low_power
# prot_mode = basic_rx
# sel_oc_en = off_canc_disable
# silicon_rev = 20nm5
# step_ctrl_sel = feedback_mode
# sup_mode = user_mode
# v_vert_sel = plus
# v_vert_threshold_scaling = scale_3
# vert_threshold = vert_0
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_sd
# ================================================
# link = sr
# optimal = false
# power_mode = low_power
# prot_mode = basic_rx
# sd_output_off =           1
# sd_output_on =          15
# sd_pdb = sd_off
# sd_threshold =           3
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_buf
# ================================================
# xtx_path_calibration_en = false
# compensation_driver_en = disable
# compensation_en = enable
# cpen_ctrl = cp_l0
# datarate = 3125000000 bps
# dcd_detection_en = enable
# dft_sel = dft_disabled
# duty_cycle_correction_bandwidth = dcc_bw_12
# duty_cycle_correction_mode_ctrl = dcc_disable
# duty_cycle_correction_reference1 = dcc_ref1_3
# duty_cycle_correction_reference2 = dcc_ref2_3
# duty_cycle_correction_reset_n = reset_n
# duty_cycle_input_polarity = dcc_input_pos
# duty_cycle_setting = dcc_t32
# duty_cycle_setting_aux = dcc2_t32
# xtx_path_initial_settings = true
# jtag_drv_sel = drv1
# jtag_lp = lp_off
# link_tx = sr
# link_tx = sr
# low_power_en = disable
# lst = 6174625f64697361626c6564
# mcgb_location_for_pcie = 0
# xtx_path_optimal = false
# pm_speed_grade = e2
# power_mode = low_power
# power_rail_eht =           0
# power_rail_et =           0
# pre_emp_sign_1st_post_tap = fir_post_1t_neg
# pre_emp_sign_2nd_post_tap = fir_post_2t_neg
# pre_emp_sign_pre_tap_1t = fir_pre_1t_neg
# pre_emp_sign_pre_tap_2t = fir_pre_2t_neg
# pre_emp_switching_ctrl_1st_post_tap = 00
# pre_emp_switching_ctrl_2nd_post_tap = 0
# pre_emp_switching_ctrl_pre_tap_1t = 00
# pre_emp_switching_ctrl_pre_tap_2t = 0
# xtx_path_prot_mode = basic_tx
# res_cal_local = non_local
# rx_det = mode_0
# rx_det_output_sel = rx_det_pcie_out
# rx_det_pdb = rx_det_off
# ser_powerdown = normal_ser_on
# silicon_rev = 20nm5
# slew_rate_ctrl = slew_r7
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# term_code = rterm_code7
# term_n_tune = rterm_n0
# term_p_tune = rterm_p0
# term_sel = r_r1
# tx_powerdown = normal_tx_on
# uc_dcd_cal = uc_dcd_cal_off
# uc_dcd_cal_status = uc_dcd_cal_notdone
# uc_gen3 = gen3_off
# uc_gen4 = gen4_off
# uc_skew_cal = uc_skew_cal_off
# uc_skew_cal_status = uc_skew_cal_notdone
# uc_txvod_cal = uc_tx_vod_cal_off
# uc_txvod_cal_cont = uc_tx_vod_cal_cont_off
# uc_txvod_cal_status = uc_tx_vod_cal_notdone
# uc_vcc_setting = vcc_setting0
# user_fir_coeff_ctrl_sel = ram_ctl
# vod_output_swing_ctrl = 00
# vreg_output = vccdreg_nominal
# xtx_path_analog_mode = user_custom
# xtx_path_bonding_mode = x1_non_bonded
# xtx_path_calibration_en = false
# xtx_path_clock_divider_ratio = 1
# xtx_path_datarate = 3125000000 bps
# xtx_path_datawidth = 14
# xtx_path_gt_enabled = disable
# xtx_path_initial_settings = true
# xtx_path_optimal = false
# xtx_path_pma_tx_divclk_hz_bin = 0000000009502f90
# xtx_path_prot_mode = basic_tx
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# xtx_path_tx_pll_clk_hz = 1562500000
# 
# ================ INPUT =================
# prot_mode           = basic_tx
# input_select_x1     = unused
# input_select_xn     = sel_x6_dn
# input_select_gen3   = unused
# ================ OUTPUT ================
# x1_clock_source_sel = same_ch_txpll
# xn_clock_source_sel = sel_x6_bot
# ================ END ===================
# 
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_cgb
# ================================================
# bitslip_enable = disable_bitslip
# bonding_mode = x1_non_bonded
# bonding_reset_enable = disallow_bonding_reset
# cgb_power_down = normal_cgb
# datarate = 3125000000 bps
# dprio_cgb_vreg_boost = no_voltage_boost
# initial_settings = true
# input_select_gen3 = unused
# input_select_x1 = unused
# input_select_xn = sel_x6_dn
# observe_cgb_clocks = observe_nothing
# pcie_gen3_bitwidth = pciegen3_wide
# prot_mode = basic_tx
# scratch0_x1_clock_src = unused
# scratch1_x1_clock_src = unused
# scratch2_x1_clock_src = unused
# scratch3_x1_clock_src = unused
# select_done_master_or_slave = choose_master_pcie_sw_done
# ser_mode = twenty_bit
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_ucontrol_en = disable
# tx_ucontrol_pcie = gen1
# tx_ucontrol_reset = disable
# vccdreg_output = vccdreg_nominal
# local_x1_clock_source_sel = same_ch_txpll
# x1_div_m_sel = divbypass
# local_xn_clock_source_sel = sel_x6_bot
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_ser
# ================================================
# bonding_mode = x1_non_bonded
# clk_divtx_deskew = deskew_delay8
# control_clk_divtx = no_dft_control_clkdivtx
# duty_cycle_correction_mode_ctrl = dcc_disable
# initial_settings = true
# prot_mode = basic_tx
# ser_clk_divtx_user_sel = divtx_user_off
# ser_clk_mon = disable_clk_mon
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_10g_rx_pcs
# ================================================
# advanced_user_mode = disable
# align_del = align_del_dis
# ber_bit_err_total_cnt = bit_err_total_cnt_10g
# ber_clken = ber_clk_dis
# ber_xus_timer_window = 004c4a
# bitslip_mode = bitslip_dis
# blksync_bitslip_type = bitslip_comb
# blksync_bitslip_wait_cnt = 1
# blksync_bitslip_wait_type = bitslip_cnt
# blksync_bypass = blksync_bypass_en
# blksync_clken = blksync_clk_dis
# blksync_enum_invalid_sh_cnt = enum_invalid_sh_cnt_10g
# blksync_knum_sh_cnt_postlock = knum_sh_cnt_postlock_10g
# blksync_knum_sh_cnt_prelock = knum_sh_cnt_prelock_10g
# blksync_pipeln = blksync_pipeln_dis
# clr_errblk_cnt_en = disable
# control_del = control_del_none
# crcchk_bypass = crcchk_bypass_en
# crcchk_clken = crcchk_clk_dis
# crcchk_inv = crcchk_inv_en
# crcchk_pipeln = crcchk_pipeln_en
# crcflag_pipeln = crcflag_pipeln_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# data_bit_reverse = data_bit_reverse_dis
# dec64b66b_clken = dec64b66b_clk_dis
# dec_64b66b_rxsm_bypass = dec_64b66b_rxsm_bypass_en
# descrm_bypass = descrm_bypass_en
# descrm_clken = descrm_clk_dis
# descrm_mode = async
# descrm_pipeln = enable
# dft_clk_out_sel = rx_master_clk
# dis_signal_ok = dis_signal_ok_en
# dispchk_bypass = dispchk_bypass_en
# empty_flag_type = empty_rd_side
# fast_path = fast_path_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_read = fifo_double_read_dis
# fifo_stop_rd = n_rd_empty
# fifo_stop_wr = n_wr_full
# force_align = force_align_dis
# frmsync_bypass = frmsync_bypass_en
# frmsync_clken = frmsync_clk_dis
# frmsync_enum_scrm = enum_scrm_default
# frmsync_enum_sync = enum_sync_default
# frmsync_flag_type = location_only
# frmsync_knum_sync = knum_sync_default
# frmsync_mfrm_length = 0800
# frmsync_pipeln = frmsync_pipeln_en
# full_flag_type = full_wr_side
# gb_rx_idwidth = width_64
# gb_rx_odwidth = width_64
# gbexp_clken = gbexp_clk_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# master_clk_sel = master_rx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# rand_clken = rand_clk_dis
# rd_clk_sel = rd_rx_pld_clk
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# rx_fifo_write_ctrl = blklock_stops
# rx_scrm_width = bit64
# rx_sh_location = msb
# rx_signal_ok_sel = synchronized_ver
# rx_sm_bypass = rx_sm_bypass_en
# rx_sm_hiber = rx_sm_hiber_en
# rx_sm_pipeln = rx_sm_pipeln_en
# rx_testbus_sel = rx_fifo_testbus1
# rx_true_b2b = b2b
# rxfifo_empty = empty_default
# rxfifo_full = full_default
# rxfifo_mode = phase_comp
# rxfifo_pempty = 02
# rxfifo_pfull = 17
# silicon_rev = 20nm5
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_10g_tx_pcs
# ================================================
# advanced_user_mode = disable
# bitslip_en = bitslip_dis
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# comp_cnt = 04
# compin_sel = compin_master
# crcgen_bypass = crcgen_bypass_en
# crcgen_clken = crcgen_clk_dis
# crcgen_err = crcgen_err_dis
# crcgen_inv = crcgen_inv_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# ctrl_plane_bonding = ctrl_master
# data_bit_reverse = data_bit_reverse_dis
# dft_clk_out_sel = tx_master_clk
# dispgen_bypass = dispgen_bypass_en
# dispgen_clken = dispgen_clk_dis
# dispgen_err = dispgen_err_dis
# dispgen_pipeln = dispgen_pipeln_dis
# distdwn_bypass_pipeln = distdwn_bypass_pipeln_dis
# distdwn_master = distdwn_master_en
# distup_bypass_pipeln = distup_bypass_pipeln_dis
# distup_master = distup_master_en
# dv_bond = dv_bond_en
# empty_flag_type = empty_rd_side
# enc64b66b_txsm_clken = enc64b66b_txsm_clk_dis
# enc_64b66b_txsm_bypass = enc_64b66b_txsm_bypass_en
# fastpath = fastpath_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_write = fifo_double_write_dis
# fifo_reg_fast = fifo_reg_fast_dis
# fifo_stop_rd = rd_empty
# fifo_stop_wr = n_wr_full
# frmgen_burst = frmgen_burst_dis
# frmgen_bypass = frmgen_bypass_en
# frmgen_clken = frmgen_clk_dis
# frmgen_mfrm_length = 0800
# frmgen_pipeln = frmgen_pipeln_en
# frmgen_pyld_ins = frmgen_pyld_ins_dis
# frmgen_wordslip = frmgen_wordslip_dis
# full_flag_type = full_wr_side
# gb_pipeln_bypass = disable
# gb_tx_idwidth = width_64
# gb_tx_odwidth = width_64
# gbred_clken = gbred_clk_dis
# indv = indv_dis
# low_latency_en = disable
# master_clk_sel = master_tx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# pseudo_random = all_0
# pseudo_seed_a_bin = 03ffffffffffffff
# pseudo_seed_b_bin = 03ffffffffffffff
# random_disp = disable
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# scrm_bypass = scrm_bypass_en
# scrm_clken = scrm_clk_dis
# scrm_mode = async
# scrm_pipeln = enable
# sh_err = sh_err_dis
# silicon_rev = 20nm5
# sop_mark = sop_mark_dis
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# tx_scrm_err = scrm_err_dis
# tx_scrm_width = bit64
# tx_sh_location = msb
# tx_sm_bypass = tx_sm_bypass_en
# tx_sm_pipeln = tx_sm_pipeln_en
# tx_testbus_sel = tx_fifo_testbus1
# txfifo_empty = empty_default
# txfifo_full = full_default
# txfifo_mode = phase_comp
# txfifo_pempty = 2
# txfifo_pfull = b
# wr_clk_sel = wr_tx_pld_clk
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_8g_rx_pcs
# ================================================
# auto_error_replacement = dis_err_replace
# auto_speed_nego = dis_asn
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_deserializer = dis_bds
# cdr_ctrl_rxvalid_mask = dis_rxvalid_mask
# clkcmp_pattern_n = 00000
# clkcmp_pattern_p = 00000
# clock_gate_bds_dec_asn = dis_bds_dec_asn_clk_gating
# clock_gate_cdr_eidle = en_cdr_eidle_clk_gating
# clock_gate_dw_pc_wrclk = dis_dw_pc_wrclk_gating
# clock_gate_dw_rm_rd = en_dw_rm_rdclk_gating
# clock_gate_dw_rm_wr = en_dw_rm_wrclk_gating
# clock_gate_dw_wa = dis_dw_wa_clk_gating
# clock_gate_pc_rdclk = dis_pc_rdclk_gating
# clock_gate_sw_pc_wrclk = dis_sw_pc_wrclk_gating
# clock_gate_sw_rm_rd = en_sw_rm_rdclk_gating
# clock_gate_sw_rm_wr = en_sw_rm_wrclk_gating
# clock_gate_sw_wa = dis_sw_wa_clk_gating
# clock_observation_in_pld_core = internal_sw_wa_clk
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_master
# ctrl_plane_bonding_distribution = master_chnl_distr
# eidle_entry_eios = dis_eidle_eios
# eidle_entry_iei = dis_eidle_iei
# eidle_entry_sd = dis_eidle_sd
# eightb_tenb_decoder = dis_8b10b
# err_flags_sel = err_flags_wa
# fixed_pat_det = dis_fixed_patdet
# fixed_pat_num = 0
# force_signal_detect = en_force_signal_detect
# gen3_clk_en = disable_clk
# gen3_rx_clk_sel = rcvd_clk
# gen3_tx_clk_sel = tx_pma_clk
# hip_mode = dis_hip
# ibm_invalid_code = dis_ibm_invalid_code
# invalid_code_flag_only = dis_invalid_code_only
# pad_or_edb_error_replace = replace_edb
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# pipe_if_enable = dis_pipe_rx
# pma_dw = twenty_bit
# polinv_8b10b_dec = dis_polinv_8b10b_dec
# prot_mode = basic_rm_disable
# rate_match = dis_rm
# rate_match_del_thres = dis_rm_del_thres
# rate_match_empty_thres = dis_rm_empty_thres
# rate_match_full_thres = dis_rm_full_thres
# rate_match_ins_thres = dis_rm_ins_thres
# rate_match_start_thres = dis_rm_start_thres
# reconfig_settings = {}
# rx_clk2 = rcvd_clk_clk2
# rx_clk_free_running = en_rx_clk_free_run
# rx_pcs_urst = en_rx_pcs_urst
# rx_rcvd_clk = rcvd_clk_rcvd_clk
# rx_rd_clk = pld_rx_clk
# rx_refclk = dis_refclk_sel
# rx_wr_clk = rx_clk2_div_1_2_4
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# sync_sm_idle_eios = dis_syncsm_idle
# test_bus_sel = tx_testbus
# tx_rx_parallel_loopback = dis_plpbk
# wa_boundary_lock_ctrl = sync_sm
# wa_clk_slip_spacing = 010
# wa_det_latency_sync_status_beh = dont_care_assert_sync
# wa_disp_err_flag = en_disp_err_flag
# wa_kchar = dis_kchar
# wa_pd = wa_pd_20
# wa_pd_data_bin = 00000000000a0d7c
# wa_pd_polarity = en_pd_both_pol
# wa_pld_controlled = dis_pld_ctrl
# wa_renumber_data = 01
# wa_rgnumber_data = 01
# wa_rknumber_data = 01
# wa_rosnumber_data = 0
# wa_rvnumber_data = 0000
# wa_sync_sm_ctrl = dw_basic_sync_sm
# wait_cnt = 000
# 
# 
# ================================================
# Module twentynm_hssi_8g_tx_pcs
# ================================================
# auto_speed_nego_gen2 = dis_asn_g2
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_serializer = dis_bs
# clock_gate_bs_enc = dis_bs_enc_clk_gating
# clock_gate_dw_fifowr = dis_dw_fifowr_clk_gating
# clock_gate_fiford = dis_fiford_clk_gating
# clock_gate_sw_fifowr = dis_sw_fifowr_clk_gating
# clock_observation_in_pld_core = internal_refclk_b
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_master
# ctrl_plane_bonding_distribution = master_chnl_distr
# data_selection_8b10b_encoder_input = normal_data_path
# dynamic_clk_switch = dis_dyn_clk_switch
# eightb_tenb_disp_ctrl = dis_disp_ctrl
# eightb_tenb_encoder = dis_8b10b
# force_echar = dis_force_echar
# force_kchar = dis_force_kchar
# gen3_tx_clk_sel = dis_tx_clk
# gen3_tx_pipe_clk_sel = dis_tx_pipe_clk
# hip_mode = dis_hip
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# phfifo_write_clk_sel = pld_tx_clk
# pma_dw = twenty_bit
# prot_mode = basic
# reconfig_settings = {}
# refclk_b_clk_sel = tx_pma_clock
# revloop_back_rm = dis_rev_loopback_rx_rm
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# tx_bitslip = dis_tx_bitslip
# tx_compliance_controlled_disparity = dis_txcompliance
# tx_fast_pld_reg = dis_tx_fast_pld_reg
# txclk_freerun = en_freerun_tx
# txpcs_urst = en_txpcs_urst
# 
# 
# ================================================
# Module twentynm_hssi_common_pcs_pma_interface
# ================================================
# asn_clk_enable = false
# asn_enable = dis_asn
# block_sel = eight_g_pcs
# bypass_early_eios = true
# bypass_pcie_switch = true
# bypass_pma_ltr = true
# bypass_pma_sw_done = false
# bypass_ppm_lock = false
# bypass_send_syncp_fbkp = true
# bypass_txdetectrx = true
# cdr_control = dis_cdr_ctrl
# cid_enable = dis_cid_mode
# cp_cons_sel = cp_cons_master
# cp_dwn_mstr = true
# cp_up_mstr = true
# ctrl_plane_bonding = individual
# data_mask_count = 0000
# data_mask_count_multi = 0
# dft_observation_clock_selection = dft_clk_obsrv_tx0
# early_eios_counter = 00
# force_freqdet = force_freqdet_dis
# free_run_clk_enable = false
# ignore_sigdet_g23 = false
# pc_en_counter = 00
# pc_rst_counter = 00
# pcie_hip_mode = hip_disable
# ph_fifo_reg_mode = phfifo_reg_mode_dis
# phfifo_flush_wait = 00
# pipe_if_g3pcs = pipe_if_8gpcs
# pma_done_counter = 00000
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# ppm_cnt_rst = ppm_cnt_rst_dis
# ppm_deassert_early = deassert_early_dis
# ppm_det_buckets = ppm_300_100_bucket
# ppm_gen1_2_cnt = cnt_32k
# ppm_post_eidle_delay = cnt_200_cycles
# ppmsel = ppmsel_300
# prot_mode = other_protocols
# reconfig_settings = {}
# rxvalid_mask = rxvalid_mask_dis
# sigdet_wait_counter = 000
# sigdet_wait_counter_multi = 0
# silicon_rev = 20nm5
# sim_mode = disable
# spd_chg_rst_wait_cnt_en = false
# sup_mode = user_mode
# testout_sel = ppm_det_test
# wait_clk_on_off_timer = 0
# wait_pipe_synchronizing = 00
# wait_send_syncp_fbkp = 000
# 
# 
# ================================================
# Module twentynm_hssi_common_pld_pcs_interface
# ================================================
# dft_clk_out_en = dft_clk_out_disable
# dft_clk_out_sel = teng_rx_dft_clk
# hrdrstctrl_en = hrst_dis
# pcs_testbus_block_sel = pma_if
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_rx_pcs
# ================================================
# double_read_mode = double_read_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_tx_pcs
# ================================================
# double_write_mode = double_write_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_gen3_rx_pcs
# ================================================
# block_sync = bypass_block_sync
# block_sync_sm = disable_blk_sync_sm
# cdr_ctrl_force_unalgn = disable
# lpbk_force = lpbk_frce_dis
# mode = disable_pcs
# rate_match_fifo = bypass_rm_fifo
# rate_match_fifo_latency = low_latency
# reconfig_settings = {}
# reverse_lpbk = rev_lpbk_dis
# rx_b4gb_par_lpbk = b4gb_par_lpbk_dis
# rx_force_balign = dis_force_balign
# rx_ins_del_one_skip = ins_del_one_skip_dis
# rx_num_fixed_pat = 0
# rx_test_out_sel = rx_test_out0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_gen3_tx_pcs
# ================================================
# mode = disable_pcs
# reverse_lpbk = rev_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_bitslip = 00
# tx_gbox_byp = bypass_gbox
# 
# 
# ================================================
# Module twentynm_hssi_krfec_rx_pcs
# ================================================
# blksync_cor_en = detect
# bypass_gb = bypass_dis
# clr_ctrl = both_enabled
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# dv_start = with_blklock
# err_mark_type = err_mark_10g
# error_marking_en = err_mark_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# parity_invalid_enum = 08
# parity_valid_num = 4
# pipeln_blksync = enable
# pipeln_descrm = disable
# pipeln_errcorrect = disable
# pipeln_errtrap_ind = enable
# pipeln_errtrap_lfsr = disable
# pipeln_errtrap_loc = disable
# pipeln_errtrap_pat = disable
# pipeln_gearbox = enable
# pipeln_syndrm = enable
# pipeln_trans_dec = disable
# prot_mode = disable_mode
# receive_order = receive_lsb
# reconfig_settings = {}
# rx_testbus_sel = overall
# signal_ok_en = sig_ok_en
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_krfec_tx_pcs
# ================================================
# burst_err = burst_err_dis
# burst_err_len = burst_err_len1
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# enc_frame_query = enc_query_dis
# low_latency_en = disable
# pipeln_encoder = enable
# pipeln_scrambler = enable
# prot_mode = disable_mode
# silicon_rev = 20nm5
# sup_mode = user_mode
# transcode_err = trans_err_dis
# transmit_order = transmit_lsb
# tx_testbus_sel = overall
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen1_2
# ================================================
# elec_idle_delay_val = 0
# error_replace_pad = replace_edb
# hip_mode = dis_hip
# ind_error_reporting = dis_ind_error_reporting
# phystatus_delay_val = 0
# phystatus_rst_toggle = dis_phystatus_rst_toggle
# pipe_byte_de_serializer_en = dont_care_bds
# prot_mode = basic
# reconfig_settings = {}
# rpre_emph_a_val = 00
# rpre_emph_b_val = 00
# rpre_emph_c_val = 00
# rpre_emph_d_val = 00
# rpre_emph_e_val = 00
# rvod_sel_a_val = 00
# rvod_sel_b_val = 00
# rvod_sel_c_val = 00
# rvod_sel_d_val = 00
# rvod_sel_e_val = 00
# rx_pipe_enable = dis_pipe_rx
# rxdetect_bypass = dis_rxdetect_bypass
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_pipe_enable = dis_pipe_tx
# txswing = dis_txswing
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen3
# ================================================
# bypass_rx_detection_enable = false
# bypass_rx_preset = 0
# bypass_rx_preset_enable = false
# bypass_tx_coefficent = 00000
# bypass_tx_coefficent_enable = false
# elecidle_delay_g3 = 0
# ind_error_reporting = dis_ind_error_reporting
# mode = disable_pcs
# phy_status_delay_g12 = 0
# phy_status_delay_g3 = 0
# phystatus_rst_toggle_g12 = dis_phystatus_rst_toggle
# phystatus_rst_toggle_g3 = dis_phystatus_rst_toggle_g3
# rate_match_pad_insertion = dis_rm_fifo_pad_ins
# silicon_rev = 20nm5
# sup_mode = user_mode
# test_out_sel = disable_test_out
# 
# 
# ================================================
# Module twentynm_hssi_rx_pcs_pma_interface
# ================================================
# block_sel = eight_g_pcs
# channel_operation_mode = tx_rx_pair_enabled
# clkslip_sel = pld
# lpbk_en = disable
# master_clk_sel = master_rx_pma_clk
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_rx = pma_20b_rx
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_ver = prbs_off
# prot_mode_rx = eightg_basic_mode_rx
# reconfig_settings = {}
# rx_dyn_polarity_inversion = rx_dyn_polinv_dis
# rx_lpbk_en = lpbk_dis
# rx_prbs_force_signal_ok = force_sig_ok
# rx_prbs_mask = prbsmask128
# rx_prbs_mode = teng_mode
# rx_signalok_signaldet_sel = sel_sig_det
# rx_static_polarity_inversion = rx_stat_polinv_dis
# rx_uhsif_lpbk_en = uhsif_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_rx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_rx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_rx = individual_rx
# hd_10g_fifo_mode_rx = fifo_rx
# hd_10g_low_latency_en_rx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_rx = pma_64b_rx
# hd_10g_prot_mode_rx = disabled_prot_mode_rx
# hd_10g_shared_fifo_width_rx = single_rx
# hd_10g_sup_mode = user_mode
# hd_10g_test_bus_mode = rx
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_rx = individual_rx
# hd_8g_fifo_mode_rx = fifo_rx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_rx = pma_20b_rx
# hd_8g_prot_mode_rx = basic_rm_disable_rx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_clklow_clk_hz = 09502f90
# hd_chnl_ctrl_plane_bonding_rx = individual_rx
# hd_chnl_fref_clk_hz = 09502f90
# hd_chnl_frequency_rules_en = disable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_rx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_operating_voltage = standard
# hd_chnl_pcs_ac_pwr_rules_en = disable
# hd_chnl_pcs_pair_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_pwr_scaling_clk = pma_rx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_rx = fifo_rx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_rx_clk_hz = 09502f90
# hd_chnl_pma_dw_rx = pma_20b_rx
# hd_chnl_pma_rx_clk_hz = 09502f90
# hd_chnl_prot_mode_rx = basic_8gpcs_rm_disable_rx
# hd_chnl_shared_fifo_width_rx = single_rx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_chnl_transparent_pcs_rx = disable
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_rx = non_teng_mode_rx
# hd_fifo_shared_fifo_width_rx = single_rx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_rx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_rx = disabled_prot_mode_rx
# hd_krfec_sup_mode = user_mode
# hd_krfec_test_bus_mode = tx
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_rx = eightg_and_g3_pld_fifo_mode_rx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_rx = pma_20b_rx
# hd_pmaif_prot_mode_rx = eightg_basic_mode_rx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_rx_block_sel = eightg
# pcs_rx_clk_out_sel = eightg_clk_out
# pcs_rx_clk_sel = pld_rx_clk
# pcs_rx_hip_clk_en = hip_rx_disable
# pcs_rx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_tx_pcs_pma_interface
# ================================================
# bypass_pma_txelecidle = true
# channel_operation_mode = tx_rx_pair_enabled
# lpbk_en = disable
# master_clk_sel = master_tx_pma_clk
# pcie_sub_prot_mode_tx = other_prot_mode
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_tx = pma_20b_tx
# pma_if_dft_en = dft_dis
# pmagate_en = pmagate_dis
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_gen_pat = prbs_gen_dis
# prot_mode_tx = eightg_basic_mode_tx
# reconfig_settings = {}
# silicon_rev = 20nm5
# sq_wave_num = sq_wave_default
# sqwgen_clken = sqwgen_clk_dis
# sup_mode = user_mode
# tx_dyn_polarity_inversion = tx_dyn_polinv_dis
# tx_pma_data_sel = eight_g_pcs
# tx_static_polarity_inversion = tx_stat_polinv_dis
# uhsif_cnt_step_filt_before_lock = uhsif_filt_stepsz_b4lock_2
# uhsif_cnt_thresh_filt_after_lock_value = 0
# uhsif_cnt_thresh_filt_before_lock = uhsif_filt_cntthr_b4lock_8
# uhsif_dcn_test_update_period = uhsif_dcn_test_period_4
# uhsif_dcn_testmode_enable = uhsif_dcn_test_mode_disable
# uhsif_dead_zone_count_thresh = uhsif_dzt_cnt_thr_2
# uhsif_dead_zone_detection_enable = uhsif_dzt_disable
# uhsif_dead_zone_obser_window = uhsif_dzt_obr_win_16
# uhsif_dead_zone_skip_size = uhsif_dzt_skipsz_4
# uhsif_delay_cell_index_sel = uhsif_index_cram
# uhsif_delay_cell_margin = uhsif_dcn_margin_2
# uhsif_delay_cell_static_index_value = 00
# uhsif_dft_dead_zone_control = uhsif_dft_dz_det_val_0
# uhsif_dft_up_filt_control = uhsif_dft_up_val_0
# uhsif_enable = uhsif_disable
# uhsif_lock_det_segsz_after_lock = uhsif_lkd_segsz_aflock_512
# uhsif_lock_det_segsz_before_lock = uhsif_lkd_segsz_b4lock_16
# uhsif_lock_det_thresh_cnt_after_lock_value = 0
# uhsif_lock_det_thresh_cnt_before_lock_value = 0
# uhsif_lock_det_thresh_diff_after_lock_value = 0
# uhsif_lock_det_thresh_diff_before_lock_value = 0
# 
# 
# ================================================
# Module twentynm_hssi_tx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_tx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_tx = ctrl_master_tx
# hd_10g_fifo_mode_tx = fifo_tx
# hd_10g_low_latency_en_tx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_tx = pma_64b_tx
# hd_10g_prot_mode_tx = disabled_prot_mode_tx
# hd_10g_shared_fifo_width_tx = single_tx
# hd_10g_sup_mode = user_mode
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_tx = ctrl_master_tx
# hd_8g_fifo_mode_tx = fifo_tx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_tx = pma_20b_tx
# hd_8g_prot_mode_tx = basic_tx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_ctrl_plane_bonding_tx = ctrl_master_tx
# hd_chnl_frequency_rules_en = enable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_tx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_pcs_tx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_tx_pwr_scaling_clk = pma_tx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_tx = fifo_tx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_tx_clk_hz = 09502f90
# hd_chnl_pld_uhsif_tx_clk_hz = 00000000
# hd_chnl_pma_dw_tx = pma_20b_tx
# hd_chnl_pma_tx_clk_hz = 09502f90
# hd_chnl_prot_mode_tx = basic_8gpcs_tx
# hd_chnl_shared_fifo_width_tx = single_tx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_tx = non_teng_mode_tx
# hd_fifo_shared_fifo_width_tx = single_tx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_tx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_tx = disabled_prot_mode_tx
# hd_krfec_sup_mode = user_mode
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_tx = eightg_and_g3_pld_fifo_mode_tx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_ctrl_plane_bonding = individual
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_tx = pma_20b_tx
# hd_pmaif_prot_mode_tx = eightg_basic_mode_tx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_tx_clk_out_sel = eightg_clk_out
# pcs_tx_clk_source = eightg
# pcs_tx_data_source = hip_disable
# pcs_tx_delay1_clk_en = delay1_clk_disable
# pcs_tx_delay1_clk_sel = pcs_tx_clk
# pcs_tx_delay1_ctrl = delay1_path0
# pcs_tx_delay1_data_sel = one_ff_delay
# pcs_tx_delay2_clk_en = delay2_clk_disable
# pcs_tx_delay2_ctrl = delay2_path0
# pcs_tx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_pma_adaptation
# ================================================
# adapt_dfe_control_sel = r_adapt_dfe_control_sel_0
# adapt_dfe_sel = r_adapt_dfe_sel_0
# adapt_mode = manual
# adapt_vga_sel = r_adapt_vga_sel_0
# adapt_vref_sel = r_adapt_vref_sel_0
# adp_1s_ctle_bypass = radp_1s_ctle_bypass_0
# adp_4s_ctle_bypass = radp_4s_ctle_bypass_0
# adp_adapt_control_sel = radp_adapt_control_sel_0
# adp_adapt_rstn = radp_adapt_rstn_1
# adp_adapt_start = radp_adapt_start_0
# adp_bist_auxpath_en = radp_bist_auxpath_disable
# adp_bist_count_rstn = radp_bist_count_rstn_0
# adp_bist_datapath_en = radp_bist_datapath_disable
# adp_bist_mode = radp_bist_mode_0
# adp_bist_odi_dfe_sel = radp_bist_odi_dfe_sel_0
# adp_bist_spec_en = radp_bist_spec_en_0
# adp_control_mux_bypass = radp_control_mux_bypass_0
# adp_ctle_acgain_4s = radp_ctle_acgain_4s_0
# adp_ctle_adapt_bw = radp_ctle_adapt_bw_3
# adp_ctle_adapt_cycle_window = radp_ctle_adapt_cycle_window_6
# adp_ctle_adapt_oneshot = radp_ctle_adapt_oneshot_1
# adp_ctle_en = radp_ctle_disable
# adp_ctle_eqz_1s_sel = radp_ctle_eqz_1s_sel_0
# adp_ctle_force_spec_sign = radp_ctle_force_spec_sign_0
# adp_ctle_hold_en = radp_ctle_not_held
# adp_ctle_load = radp_ctle_load_0
# adp_ctle_load_value = radp_ctle_load_value_0
# adp_ctle_scale = radp_ctle_scale_0
# adp_ctle_scale_en = radp_ctle_scale_en_0
# adp_ctle_spec_sign = radp_ctle_spec_sign_0
# adp_ctle_sweep_direction = radp_ctle_sweep_direction_1
# adp_ctle_threshold = radp_ctle_threshold_0
# adp_ctle_threshold_en = radp_ctle_threshold_en_0
# adp_ctle_vref_polarity = radp_ctle_vref_polarity_0
# adp_ctle_window = radp_ctle_window_0
# adp_dfe_bw = radp_dfe_bw_3
# adp_dfe_clkout_div_sel = radp_dfe_clkout_div_sel_0
# adp_dfe_cycle = radp_dfe_cycle_6
# adp_dfe_fltap1 = radp_dfe_fltap1_0
# adp_dfe_fltap1_sgn = radp_dfe_fltap1_sgn_0
# adp_dfe_fltap2 = radp_dfe_fltap2_0
# adp_dfe_fltap2_sgn = radp_dfe_fltap2_sgn_0
# adp_dfe_fltap3 = radp_dfe_fltap3_0
# adp_dfe_fltap3_sgn = radp_dfe_fltap3_sgn_0
# adp_dfe_fltap4 = radp_dfe_fltap4_0
# adp_dfe_fltap4_sgn = radp_dfe_fltap4_sgn_0
# adp_dfe_fltap_bypass = radp_dfe_fltap_bypass_0
# adp_dfe_fltap_en = radp_dfe_fltap_disable
# adp_dfe_fltap_hold_en = radp_dfe_fltap_not_held
# adp_dfe_fltap_load = radp_dfe_fltap_load_0
# adp_dfe_fltap_position = radp_dfe_fltap_position_0
# adp_dfe_force_spec_sign = radp_dfe_force_spec_sign_0
# adp_dfe_fxtap1 = radp_dfe_fxtap1_0
# adp_dfe_fxtap2 = radp_dfe_fxtap2_0
# adp_dfe_fxtap2_sgn = radp_dfe_fxtap2_sgn_0
# adp_dfe_fxtap3 = radp_dfe_fxtap3_0
# adp_dfe_fxtap3_sgn = radp_dfe_fxtap3_sgn_0
# adp_dfe_fxtap4 = radp_dfe_fxtap4_0
# adp_dfe_fxtap4_sgn = radp_dfe_fxtap4_sgn_0
# adp_dfe_fxtap5 = radp_dfe_fxtap5_0
# adp_dfe_fxtap5_sgn = radp_dfe_fxtap5_sgn_0
# adp_dfe_fxtap6 = radp_dfe_fxtap6_0
# adp_dfe_fxtap6_sgn = radp_dfe_fxtap6_sgn_0
# adp_dfe_fxtap7 = radp_dfe_fxtap7_0
# adp_dfe_fxtap7_sgn = radp_dfe_fxtap7_sgn_0
# adp_dfe_fxtap_bypass = radp_dfe_fxtap_bypass_0
# adp_dfe_fxtap_en = radp_dfe_fxtap_disable
# adp_dfe_fxtap_hold_en = radp_dfe_fxtap_not_held
# adp_dfe_fxtap_load = radp_dfe_fxtap_load_0
# adp_dfe_mode = radp_dfe_mode_0
# adp_dfe_spec_sign = radp_dfe_spec_sign_0
# adp_dfe_vref_polarity = radp_dfe_vref_polarity_0
# adp_force_freqlock = radp_force_freqlock_off
# adp_frame_capture = radp_frame_capture_0
# adp_frame_en = radp_frame_en_0
# adp_frame_odi_sel = radp_frame_odi_sel_0
# adp_frame_out_sel = radp_frame_out_sel_0
# adp_lfeq_fb_sel = radp_lfeq_fb_sel_0
# adp_mode = radp_mode_0
# adp_odi_control_sel = radp_odi_control_sel_0
# adp_onetime_dfe = radp_onetime_dfe_1
# adp_spec_avg_window = radp_spec_avg_window_4
# adp_spec_trans_filter = radp_spec_trans_filter_2
# adp_status_sel = radp_status_sel_0
# adp_vga_bypass = radp_vga_bypass_0
# adp_vga_en = radp_vga_disable
# adp_vga_load = radp_vga_load_0
# adp_vga_polarity = radp_vga_polarity_0
# adp_vga_sel = radp_vga_sel_0
# adp_vga_sweep_direction = radp_vga_sweep_direction_1
# adp_vga_threshold = radp_vga_threshold_4
# adp_vref_bw = radp_vref_bw_1
# adp_vref_bypass = radp_vref_bypass_0
# adp_vref_cycle = radp_vref_cycle_6
# adp_vref_dfe_spec_en = radp_vref_dfe_spec_en_0
# adp_vref_en = radp_vref_disable
# adp_vref_hold_en = radp_vref_not_held
# adp_vref_load = radp_vref_load_0
# adp_vref_polarity = radp_vref_polarity_0
# adp_vref_sel = radp_vref_sel_21
# adp_vref_vga_level = radp_vref_vga_level_13
# datarate = 3125000000 bps
# initial_settings = true
# odi_count_threshold = rodi_count_threshold_0
# odi_dfe_spec_en = rodi_dfe_spec_en_0
# odi_en = rodi_en_0
# odi_mode = rodi_mode_0
# odi_rstn = rodi_rstn_0
# odi_spec_sel = rodi_spec_sel_0
# odi_start = rodi_start_0
# odi_vref_sel = rodi_vref_sel_0
# optimal = false
# prot_mode = basic_rx
# rrx_pcie_eqz = rrx_pcie_eqz_0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_cdr_refclk_select_mux
# ================================================
# local_cdr_clkin_scratch0_src = cdr_clkin_scratch0_src_refclk_iqclk
# local_cdr_clkin_scratch1_src = cdr_clkin_scratch1_src_refclk_iqclk
# local_cdr_clkin_scratch2_src = cdr_clkin_scratch2_src_refclk_iqclk
# local_cdr_clkin_scratch3_src = cdr_clkin_scratch3_src_refclk_iqclk
# local_cdr_clkin_scratch4_src = cdr_clkin_scratch4_src_refclk_iqclk
# inclk0_logical_to_physical_mapping = ref_iqclk0
# inclk1_logical_to_physical_mapping = ref_iqclk1
# inclk2_logical_to_physical_mapping = ref_iqclk2
# inclk3_logical_to_physical_mapping = ref_iqclk3
# inclk4_logical_to_physical_mapping = ref_iqclk4
# powerdown_mode = powerup
# receiver_detect_src = iqclk_src
# refclk_select = ref_iqclk0
# silicon_rev = 20nm5
# local_xmux_refclk_src = refclk_iqclk
# local_xpm_iqref_mux_iqclk_sel = ref_iqclk0
# local_xpm_iqref_mux_scratch0_src = scratch0_ref_iqclk0
# local_xpm_iqref_mux_scratch1_src = scratch1_ref_iqclk1
# local_xpm_iqref_mux_scratch2_src = scratch2_ref_iqclk2
# local_xpm_iqref_mux_scratch3_src = scratch3_ref_iqclk3
# local_xpm_iqref_mux_scratch4_src = scratch4_ref_iqclk4
# 
# 
# ================================================
# Module twentynm_hssi_pma_channel_pll
# ================================================
# analog_mode = user_custom
# atb_select_control = atb_off
# auto_reset_on = auto_reset_off
# bandwidth_range_high = 0 hz
# bandwidth_range_low = 0 hz
# bbpd_data_pattern_filter_select = bbpd_data_pat_off
# bw_sel = medium
# cdr_odi_select = sel_cdr
# cdr_phaselock_mode = no_ignore_lock
# cdr_powerdown_mode = power_up
# cgb_div =           1
# chgpmp_current_pd = cp_current_pd_setting2
# chgpmp_current_pfd = cp_current_pfd_setting3
# chgpmp_replicate = false
# chgpmp_testmode = cp_test_disable
# clklow_mux_select = clklow_mux_cdr_fbclk
# datarate = 3125000000 bps
# diag_loopback_enable = false
# disable_up_dn = true
# f_max_pfd = 0 hz
# f_max_ref = 0 hz
# f_max_vco = 0 hz
# f_min_gt_channel = 0 hz
# f_min_pfd = 0 hz
# f_min_ref = 0 hz
# f_min_vco = 0 hz
# fb_select = direct_fb
# fref_clklow_div =           1
# fref_mux_select = fref_mux_cdr_refclk
# gpon_lck2ref_control = gpon_lck2ref_off
# initial_settings = true
# iqclk_mux_sel = power_down
# is_cascaded_pll = false
# lck2ref_delay_control = lck2ref_delay_2
# lf_resistor_pd = lf_pd_setting0
# lf_resistor_pfd = lf_pfd_setting2
# lf_ripple_cap = lf_no_ripple
# loop_filter_bias_select = lpflt_bias_off
# loopback_mode = loopback_disabled
# lpd_counter = 04
# lpfd_counter = 08
# ltd_ltr_micro_controller_select = ltd_ltr_pcs
# m_counter =          10
# n_counter_scratch =  2
# n_counter_scratch = 02
# optimal = false
# output_clock_frequency = 1562500000 Hz
# pcie_gen = non_pcie
# pd_fastlock_mode = false
# pd_l_counter =           4
# pfd_l_counter =           8
# pm_speed_grade = e2
# pma_width =          20
# position = position_unknown
# power_mode = low_power
# primary_use = cdr
# prot_mode = basic_rx
# reference_clock_frequency = 156250000 hz
# requires_gt_capable_channel = false
# reverse_serial_loopback = no_loopback
# set_cdr_v2i_enable = true
# set_cdr_vco_reset = false
# set_cdr_vco_speed = 07
# set_cdr_vco_speed_fix = 06
# set_cdr_vco_speed_pciegen3 = cdr_vco_max_speedbin_pciegen3
# side = side_unknown
# silicon_rev = 20nm5
# sup_mode = user_mode
# top_or_bottom = tb_unknown
# tx_pll_prot_mode = txpll_unused
# txpll_hclk_driver_enable = false
# uc_cru_rstb = cdr_lf_reset_off
# uc_ro_cal = uc_ro_cal_on
# uc_ro_cal_status = uc_ro_cal_notdone
# vco_freq = 6250000000 Hz
# vco_overrange_voltage = vco_overrange_off
# vco_underrange_voltage = vco_underange_off
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_buf
# ================================================
# act_isource_disable = isrc_en
# bodybias_enable = bodybias_en
# bodybias_select = bodybias_sel1
# bypass_eqz_stages_234 = bypass_off
# cdrclk_to_cgb = cdrclk_2cgb_dis
# cgm_bias_disable = cgmbias_en
# datarate = 3125000000 bps
# diag_lp_en = dlp_off
# eq_bw_sel = eq_bw_1
# eq_dc_gain_trim = no_dc_gain
# xrx_path_initial_settings = true
# input_vcm_sel = high_vcm
# iostandard = hssi_diffio
# lfeq_enable = non_lfeq_mode
# lfeq_zero_control = lfeq_setting_2
# link_rx = sr
# link_rx = sr
# loopback_modes = lpbk_disable
# offset_cal_pd = eqz1_en
# offset_cancellation_coarse = coarse_setting_00
# offset_cancellation_ctrl = volt_0mv
# offset_cancellation_fine = fine_setting_00
# offset_pd = oc_en
# one_stage_enable = non_s1_mode
# xrx_path_optimal = false
# pdb_rx = normal_rx_on
# pm_speed_grade = e2
# pm_tx_rx_cvp_mode = cvp_off
# pm_tx_rx_pcie_gen = non_pcie
# pm_tx_rx_pcie_gen_bitwidth = pcie_gen3_32b
# pm_tx_rx_testmux_select = setting0
# power_mode_rx = low_power
# power_mode_rx = low_power
# power_rail_eht =           0
# power_rail_er =           0
# xrx_path_prot_mode = basic_rx
# qpi_enable = non_qpi_mode
# refclk_en = disable
# rx_atb_select = atb_disable
# rx_refclk_divider = bypass_divider
# rx_sel_bias_source = bias_vcmdrv
# silicon_rev = 20nm5
# xrx_path_sup_mode = user_mode
# term_sel = r_r1
# term_tri_enable = disable_tri
# vccela_supply_voltage = vccela_1p1v
# vcm_current_add = vcm_current_default
# vcm_sel = vcm_setting_10
# vga_bandwidth_select = vga_bw_1
# xrx_path_analog_mode = user_custom
# xrx_path_datarate = 3125000000 bps
# xrx_path_datawidth = 14
# xrx_path_gt_enabled = disable
# xrx_path_initial_settings = true
# xrx_path_jtag_hys = hys_increase_disable
# xrx_path_jtag_lp = lp_off
# xrx_path_optimal = false
# xrx_path_pma_rx_divclk_hz_bin = 0000000009502f90
# xrx_path_prot_mode = basic_rx
# xrx_path_sup_mode = user_mode
# xrx_path_uc_cal_enable = rx_cal_off
# xrx_path_uc_cru_rstb = cdr_lf_reset_off
# xrx_path_uc_pcie_sw = uc_pcie_gen1
# xrx_path_uc_rx_rstb = rx_reset_on
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_deser
# ================================================
# bitslip_bypass = bs_bypass_yes
# clkdiv_source = vco_bypass_normal
# clkdivrx_user_mode = clkdivrx_user_disabled
# datarate = 3125000000 bps
# deser_factor =          20
# deser_powerdown = deser_power_up
# force_adaptation_outputs = normal_outputs
# force_clkdiv_for_testing = normal_clkdiv
# optimal = false
# pcie_gen = non_pcie
# pcie_gen_bitwidth = pcie_gen3_32b
# prot_mode = basic_rx
# rst_n_adapt_odi = no_rst_adapt_odi
# sdclk_enable = false
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_dfe
# ================================================
# atb_select = atb_disable
# datarate = 3125000000 bps
# dft_en = dft_disable
# initial_settings = true
# oc_sa_adp1 = 00
# oc_sa_adp2 = 00
# oc_sa_c270 = 00
# oc_sa_c90 = 00
# oc_sa_d0c0 = 00
# oc_sa_d0c180 = 00
# oc_sa_d1c0 = 00
# oc_sa_d1c180 = 00
# optimal = false
# pdb = 6466655f656e61626c65
# pdb_fixedtap = fixtap_dfe_powerdown
# pdb_floattap = floattap_dfe_powerdown
# pdb_fxtap4t7 = fxtap4t7_powerdown
# power_mode = low_power
# prot_mode = basic_rx
# sel_fltapstep_dec = fltap_step_no_dec
# sel_fltapstep_inc = fltap_step_no_inc
# sel_fxtapstep_dec = fxtap_step_no_dec
# sel_fxtapstep_inc = fxtap_step_no_inc
# sel_oc_en = off_canc_disable
# sel_probe_tstmx = probe_tstmx_none
# silicon_rev = 20nm5
# sup_mode = user_mode
# uc_rx_dfe_cal = uc_rx_dfe_cal_off
# uc_rx_dfe_cal_status = uc_rx_dfe_cal_notdone
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_odi
# ================================================
# clk_dcd_bypass = no_bypass
# datarate = 3125000000 bps
# enable_odi = power_down_eye
# initial_settings = true
# invert_dfe_vref = no_inversion
# monitor_bw_sel = bw_1
# oc_sa_c0 = 00
# oc_sa_c180 = 00
# optimal = false
# phase_steps_64_vs_128 = phase_steps_64
# phase_steps_sel = step40
# power_mode = low_power
# prot_mode = basic_rx
# sel_oc_en = off_canc_disable
# silicon_rev = 20nm5
# step_ctrl_sel = feedback_mode
# sup_mode = user_mode
# v_vert_sel = plus
# v_vert_threshold_scaling = scale_3
# vert_threshold = vert_0
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_sd
# ================================================
# link = sr
# optimal = false
# power_mode = low_power
# prot_mode = basic_rx
# sd_output_off =           1
# sd_output_on =          15
# sd_pdb = sd_off
# sd_threshold =           3
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_buf
# ================================================
# xtx_path_calibration_en = false
# compensation_driver_en = disable
# compensation_en = enable
# cpen_ctrl = cp_l0
# datarate = 3125000000 bps
# dcd_detection_en = enable
# dft_sel = dft_disabled
# duty_cycle_correction_bandwidth = dcc_bw_12
# duty_cycle_correction_mode_ctrl = dcc_disable
# duty_cycle_correction_reference1 = dcc_ref1_3
# duty_cycle_correction_reference2 = dcc_ref2_3
# duty_cycle_correction_reset_n = reset_n
# duty_cycle_input_polarity = dcc_input_pos
# duty_cycle_setting = dcc_t32
# duty_cycle_setting_aux = dcc2_t32
# xtx_path_initial_settings = true
# jtag_drv_sel = drv1
# jtag_lp = lp_off
# link_tx = sr
# link_tx = sr
# low_power_en = disable
# lst = 6174625f64697361626c6564
# mcgb_location_for_pcie = 1
# xtx_path_optimal = false
# pm_speed_grade = e2
# power_mode = low_power
# power_rail_eht =           0
# power_rail_et =           0
# pre_emp_sign_1st_post_tap = fir_post_1t_neg
# pre_emp_sign_2nd_post_tap = fir_post_2t_neg
# pre_emp_sign_pre_tap_1t = fir_pre_1t_neg
# pre_emp_sign_pre_tap_2t = fir_pre_2t_neg
# pre_emp_switching_ctrl_1st_post_tap = 00
# pre_emp_switching_ctrl_2nd_post_tap = 0
# pre_emp_switching_ctrl_pre_tap_1t = 00
# pre_emp_switching_ctrl_pre_tap_2t = 0
# xtx_path_prot_mode = basic_tx
# res_cal_local = non_local
# rx_det = mode_0
# rx_det_output_sel = rx_det_pcie_out
# rx_det_pdb = rx_det_off
# ser_powerdown = normal_ser_on
# silicon_rev = 20nm5
# slew_rate_ctrl = slew_r7
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# term_code = rterm_code7
# term_n_tune = rterm_n0
# term_p_tune = rterm_p0
# term_sel = r_r1
# tx_powerdown = normal_tx_on
# uc_dcd_cal = uc_dcd_cal_off
# uc_dcd_cal_status = uc_dcd_cal_notdone
# uc_gen3 = gen3_off
# uc_gen4 = gen4_off
# uc_skew_cal = uc_skew_cal_off
# uc_skew_cal_status = uc_skew_cal_notdone
# uc_txvod_cal = uc_tx_vod_cal_off
# uc_txvod_cal_cont = uc_tx_vod_cal_cont_off
# uc_txvod_cal_status = uc_tx_vod_cal_notdone
# uc_vcc_setting = vcc_setting0
# user_fir_coeff_ctrl_sel = ram_ctl
# vod_output_swing_ctrl = 00
# vreg_output = vccdreg_nominal
# xtx_path_analog_mode = user_custom
# xtx_path_bonding_mode = x1_non_bonded
# xtx_path_calibration_en = false
# xtx_path_clock_divider_ratio = 1
# xtx_path_datarate = 3125000000 bps
# xtx_path_datawidth = 14
# xtx_path_gt_enabled = disable
# xtx_path_initial_settings = true
# xtx_path_optimal = false
# xtx_path_pma_tx_divclk_hz_bin = 0000000009502f90
# xtx_path_prot_mode = basic_tx
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# xtx_path_tx_pll_clk_hz = 1562500000
# 
# ================ INPUT =================
# prot_mode           = basic_tx
# input_select_x1     = unused
# input_select_xn     = sel_x6_dn
# input_select_gen3   = unused
# ================ OUTPUT ================
# x1_clock_source_sel = same_ch_txpll
# xn_clock_source_sel = sel_x6_bot
# ================ END ===================
# 
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_cgb
# ================================================
# bitslip_enable = disable_bitslip
# bonding_mode = x1_non_bonded
# bonding_reset_enable = disallow_bonding_reset
# cgb_power_down = normal_cgb
# datarate = 3125000000 bps
# dprio_cgb_vreg_boost = no_voltage_boost
# initial_settings = true
# input_select_gen3 = unused
# input_select_x1 = unused
# input_select_xn = sel_x6_dn
# observe_cgb_clocks = observe_nothing
# pcie_gen3_bitwidth = pciegen3_wide
# prot_mode = basic_tx
# scratch0_x1_clock_src = unused
# scratch1_x1_clock_src = unused
# scratch2_x1_clock_src = unused
# scratch3_x1_clock_src = unused
# select_done_master_or_slave = choose_master_pcie_sw_done
# ser_mode = twenty_bit
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_ucontrol_en = disable
# tx_ucontrol_pcie = gen1
# tx_ucontrol_reset = disable
# vccdreg_output = vccdreg_nominal
# local_x1_clock_source_sel = same_ch_txpll
# x1_div_m_sel = divbypass
# local_xn_clock_source_sel = sel_x6_bot
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_ser
# ================================================
# bonding_mode = x1_non_bonded
# clk_divtx_deskew = deskew_delay8
# control_clk_divtx = no_dft_control_clkdivtx
# duty_cycle_correction_mode_ctrl = dcc_disable
# initial_settings = true
# prot_mode = basic_tx
# ser_clk_divtx_user_sel = divtx_user_off
# ser_clk_mon = disable_clk_mon
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_10g_rx_pcs
# ================================================
# advanced_user_mode = disable
# align_del = align_del_dis
# ber_bit_err_total_cnt = bit_err_total_cnt_10g
# ber_clken = ber_clk_dis
# ber_xus_timer_window = 004c4a
# bitslip_mode = bitslip_dis
# blksync_bitslip_type = bitslip_comb
# blksync_bitslip_wait_cnt = 1
# blksync_bitslip_wait_type = bitslip_cnt
# blksync_bypass = blksync_bypass_en
# blksync_clken = blksync_clk_dis
# blksync_enum_invalid_sh_cnt = enum_invalid_sh_cnt_10g
# blksync_knum_sh_cnt_postlock = knum_sh_cnt_postlock_10g
# blksync_knum_sh_cnt_prelock = knum_sh_cnt_prelock_10g
# blksync_pipeln = blksync_pipeln_dis
# clr_errblk_cnt_en = disable
# control_del = control_del_none
# crcchk_bypass = crcchk_bypass_en
# crcchk_clken = crcchk_clk_dis
# crcchk_inv = crcchk_inv_en
# crcchk_pipeln = crcchk_pipeln_en
# crcflag_pipeln = crcflag_pipeln_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# data_bit_reverse = data_bit_reverse_dis
# dec64b66b_clken = dec64b66b_clk_dis
# dec_64b66b_rxsm_bypass = dec_64b66b_rxsm_bypass_en
# descrm_bypass = descrm_bypass_en
# descrm_clken = descrm_clk_dis
# descrm_mode = async
# descrm_pipeln = enable
# dft_clk_out_sel = rx_master_clk
# dis_signal_ok = dis_signal_ok_en
# dispchk_bypass = dispchk_bypass_en
# empty_flag_type = empty_rd_side
# fast_path = fast_path_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_read = fifo_double_read_dis
# fifo_stop_rd = n_rd_empty
# fifo_stop_wr = n_wr_full
# force_align = force_align_dis
# frmsync_bypass = frmsync_bypass_en
# frmsync_clken = frmsync_clk_dis
# frmsync_enum_scrm = enum_scrm_default
# frmsync_enum_sync = enum_sync_default
# frmsync_flag_type = location_only
# frmsync_knum_sync = knum_sync_default
# frmsync_mfrm_length = 0800
# frmsync_pipeln = frmsync_pipeln_en
# full_flag_type = full_wr_side
# gb_rx_idwidth = width_64
# gb_rx_odwidth = width_64
# gbexp_clken = gbexp_clk_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# master_clk_sel = master_rx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# rand_clken = rand_clk_dis
# rd_clk_sel = rd_rx_pld_clk
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# rx_fifo_write_ctrl = blklock_stops
# rx_scrm_width = bit64
# rx_sh_location = msb
# rx_signal_ok_sel = synchronized_ver
# rx_sm_bypass = rx_sm_bypass_en
# rx_sm_hiber = rx_sm_hiber_en
# rx_sm_pipeln = rx_sm_pipeln_en
# rx_testbus_sel = rx_fifo_testbus1
# rx_true_b2b = b2b
# rxfifo_empty = empty_default
# rxfifo_full = full_default
# rxfifo_mode = phase_comp
# rxfifo_pempty = 02
# rxfifo_pfull = 17
# silicon_rev = 20nm5
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_10g_tx_pcs
# ================================================
# advanced_user_mode = disable
# bitslip_en = bitslip_dis
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# comp_cnt = 02
# compin_sel = compin_slave_top
# crcgen_bypass = crcgen_bypass_en
# crcgen_clken = crcgen_clk_dis
# crcgen_err = crcgen_err_dis
# crcgen_inv = crcgen_inv_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# ctrl_plane_bonding = ctrl_slave_abv
# data_bit_reverse = data_bit_reverse_dis
# dft_clk_out_sel = tx_master_clk
# dispgen_bypass = dispgen_bypass_en
# dispgen_clken = dispgen_clk_dis
# dispgen_err = dispgen_err_dis
# dispgen_pipeln = dispgen_pipeln_dis
# distdwn_bypass_pipeln = distdwn_bypass_pipeln_dis
# distdwn_master = distdwn_master_dis
# distup_bypass_pipeln = distup_bypass_pipeln_dis
# distup_master = distup_master_dis
# dv_bond = dv_bond_en
# empty_flag_type = empty_rd_side
# enc64b66b_txsm_clken = enc64b66b_txsm_clk_dis
# enc_64b66b_txsm_bypass = enc_64b66b_txsm_bypass_en
# fastpath = fastpath_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_write = fifo_double_write_dis
# fifo_reg_fast = fifo_reg_fast_dis
# fifo_stop_rd = rd_empty
# fifo_stop_wr = n_wr_full
# frmgen_burst = frmgen_burst_dis
# frmgen_bypass = frmgen_bypass_en
# frmgen_clken = frmgen_clk_dis
# frmgen_mfrm_length = 0800
# frmgen_pipeln = frmgen_pipeln_en
# frmgen_pyld_ins = frmgen_pyld_ins_dis
# frmgen_wordslip = frmgen_wordslip_dis
# full_flag_type = full_wr_side
# gb_pipeln_bypass = disable
# gb_tx_idwidth = width_64
# gb_tx_odwidth = width_64
# gbred_clken = gbred_clk_dis
# indv = indv_dis
# low_latency_en = disable
# master_clk_sel = master_tx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# pseudo_random = all_0
# pseudo_seed_a_bin = 03ffffffffffffff
# pseudo_seed_b_bin = 03ffffffffffffff
# random_disp = disable
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# scrm_bypass = scrm_bypass_en
# scrm_clken = scrm_clk_dis
# scrm_mode = async
# scrm_pipeln = enable
# sh_err = sh_err_dis
# silicon_rev = 20nm5
# sop_mark = sop_mark_dis
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# tx_scrm_err = scrm_err_dis
# tx_scrm_width = bit64
# tx_sh_location = msb
# tx_sm_bypass = tx_sm_bypass_en
# tx_sm_pipeln = tx_sm_pipeln_en
# tx_testbus_sel = tx_fifo_testbus1
# txfifo_empty = empty_default
# txfifo_full = full_default
# txfifo_mode = phase_comp
# txfifo_pempty = 2
# txfifo_pfull = b
# wr_clk_sel = wr_tx_pld_clk
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_8g_rx_pcs
# ================================================
# auto_error_replacement = dis_err_replace
# auto_speed_nego = dis_asn
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_deserializer = dis_bds
# cdr_ctrl_rxvalid_mask = dis_rxvalid_mask
# clkcmp_pattern_n = 00000
# clkcmp_pattern_p = 00000
# clock_gate_bds_dec_asn = dis_bds_dec_asn_clk_gating
# clock_gate_cdr_eidle = en_cdr_eidle_clk_gating
# clock_gate_dw_pc_wrclk = dis_dw_pc_wrclk_gating
# clock_gate_dw_rm_rd = en_dw_rm_rdclk_gating
# clock_gate_dw_rm_wr = en_dw_rm_wrclk_gating
# clock_gate_dw_wa = dis_dw_wa_clk_gating
# clock_gate_pc_rdclk = dis_pc_rdclk_gating
# clock_gate_sw_pc_wrclk = dis_sw_pc_wrclk_gating
# clock_gate_sw_rm_rd = en_sw_rm_rdclk_gating
# clock_gate_sw_rm_wr = en_sw_rm_wrclk_gating
# clock_gate_sw_wa = dis_sw_wa_clk_gating
# clock_observation_in_pld_core = internal_sw_wa_clk
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_slave_above
# ctrl_plane_bonding_distribution = not_master_chnl_distr
# eidle_entry_eios = dis_eidle_eios
# eidle_entry_iei = dis_eidle_iei
# eidle_entry_sd = dis_eidle_sd
# eightb_tenb_decoder = dis_8b10b
# err_flags_sel = err_flags_wa
# fixed_pat_det = dis_fixed_patdet
# fixed_pat_num = 0
# force_signal_detect = en_force_signal_detect
# gen3_clk_en = disable_clk
# gen3_rx_clk_sel = rcvd_clk
# gen3_tx_clk_sel = tx_pma_clk
# hip_mode = dis_hip
# ibm_invalid_code = dis_ibm_invalid_code
# invalid_code_flag_only = dis_invalid_code_only
# pad_or_edb_error_replace = replace_edb
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# pipe_if_enable = dis_pipe_rx
# pma_dw = twenty_bit
# polinv_8b10b_dec = dis_polinv_8b10b_dec
# prot_mode = basic_rm_disable
# rate_match = dis_rm
# rate_match_del_thres = dis_rm_del_thres
# rate_match_empty_thres = dis_rm_empty_thres
# rate_match_full_thres = dis_rm_full_thres
# rate_match_ins_thres = dis_rm_ins_thres
# rate_match_start_thres = dis_rm_start_thres
# reconfig_settings = {}
# rx_clk2 = rcvd_clk_clk2
# rx_clk_free_running = en_rx_clk_free_run
# rx_pcs_urst = en_rx_pcs_urst
# rx_rcvd_clk = rcvd_clk_rcvd_clk
# rx_rd_clk = pld_rx_clk
# rx_refclk = dis_refclk_sel
# rx_wr_clk = rx_clk2_div_1_2_4
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# sync_sm_idle_eios = dis_syncsm_idle
# test_bus_sel = tx_testbus
# tx_rx_parallel_loopback = dis_plpbk
# wa_boundary_lock_ctrl = sync_sm
# wa_clk_slip_spacing = 010
# wa_det_latency_sync_status_beh = dont_care_assert_sync
# wa_disp_err_flag = en_disp_err_flag
# wa_kchar = dis_kchar
# wa_pd = wa_pd_20
# wa_pd_data_bin = 00000000000a0d7c
# wa_pd_polarity = en_pd_both_pol
# wa_pld_controlled = dis_pld_ctrl
# wa_renumber_data = 01
# wa_rgnumber_data = 01
# wa_rknumber_data = 01
# wa_rosnumber_data = 0
# wa_rvnumber_data = 0000
# wa_sync_sm_ctrl = dw_basic_sync_sm
# wait_cnt = 000
# 
# 
# ================================================
# Module twentynm_hssi_8g_tx_pcs
# ================================================
# auto_speed_nego_gen2 = dis_asn_g2
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_serializer = dis_bs
# clock_gate_bs_enc = dis_bs_enc_clk_gating
# clock_gate_dw_fifowr = dis_dw_fifowr_clk_gating
# clock_gate_fiford = dis_fiford_clk_gating
# clock_gate_sw_fifowr = dis_sw_fifowr_clk_gating
# clock_observation_in_pld_core = internal_refclk_b
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_slave_above
# ctrl_plane_bonding_distribution = not_master_chnl_distr
# data_selection_8b10b_encoder_input = normal_data_path
# dynamic_clk_switch = dis_dyn_clk_switch
# eightb_tenb_disp_ctrl = dis_disp_ctrl
# eightb_tenb_encoder = dis_8b10b
# force_echar = dis_force_echar
# force_kchar = dis_force_kchar
# gen3_tx_clk_sel = dis_tx_clk
# gen3_tx_pipe_clk_sel = dis_tx_pipe_clk
# hip_mode = dis_hip
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# phfifo_write_clk_sel = pld_tx_clk
# pma_dw = twenty_bit
# prot_mode = basic
# reconfig_settings = {}
# refclk_b_clk_sel = tx_pma_clock
# revloop_back_rm = dis_rev_loopback_rx_rm
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# tx_bitslip = dis_tx_bitslip
# tx_compliance_controlled_disparity = dis_txcompliance
# tx_fast_pld_reg = dis_tx_fast_pld_reg
# txclk_freerun = en_freerun_tx
# txpcs_urst = en_txpcs_urst
# 
# 
# ================================================
# Module twentynm_hssi_common_pcs_pma_interface
# ================================================
# asn_clk_enable = false
# asn_enable = dis_asn
# block_sel = eight_g_pcs
# bypass_early_eios = true
# bypass_pcie_switch = true
# bypass_pma_ltr = true
# bypass_pma_sw_done = false
# bypass_ppm_lock = false
# bypass_send_syncp_fbkp = true
# bypass_txdetectrx = true
# cdr_control = dis_cdr_ctrl
# cid_enable = dis_cid_mode
# cp_cons_sel = cp_cons_master
# cp_dwn_mstr = true
# cp_up_mstr = true
# ctrl_plane_bonding = individual
# data_mask_count = 0000
# data_mask_count_multi = 0
# dft_observation_clock_selection = dft_clk_obsrv_tx0
# early_eios_counter = 00
# force_freqdet = force_freqdet_dis
# free_run_clk_enable = false
# ignore_sigdet_g23 = false
# pc_en_counter = 00
# pc_rst_counter = 00
# pcie_hip_mode = hip_disable
# ph_fifo_reg_mode = phfifo_reg_mode_dis
# phfifo_flush_wait = 00
# pipe_if_g3pcs = pipe_if_8gpcs
# pma_done_counter = 00000
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# ppm_cnt_rst = ppm_cnt_rst_dis
# ppm_deassert_early = deassert_early_dis
# ppm_det_buckets = ppm_300_100_bucket
# ppm_gen1_2_cnt = cnt_32k
# ppm_post_eidle_delay = cnt_200_cycles
# ppmsel = ppmsel_300
# prot_mode = other_protocols
# reconfig_settings = {}
# rxvalid_mask = rxvalid_mask_dis
# sigdet_wait_counter = 000
# sigdet_wait_counter_multi = 0
# silicon_rev = 20nm5
# sim_mode = disable
# spd_chg_rst_wait_cnt_en = false
# sup_mode = user_mode
# testout_sel = ppm_det_test
# wait_clk_on_off_timer = 0
# wait_pipe_synchronizing = 00
# wait_send_syncp_fbkp = 000
# 
# 
# ================================================
# Module twentynm_hssi_common_pld_pcs_interface
# ================================================
# dft_clk_out_en = dft_clk_out_disable
# dft_clk_out_sel = teng_rx_dft_clk
# hrdrstctrl_en = hrst_dis
# pcs_testbus_block_sel = pma_if
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_rx_pcs
# ================================================
# double_read_mode = double_read_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_tx_pcs
# ================================================
# double_write_mode = double_write_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_gen3_rx_pcs
# ================================================
# block_sync = bypass_block_sync
# block_sync_sm = disable_blk_sync_sm
# cdr_ctrl_force_unalgn = disable
# lpbk_force = lpbk_frce_dis
# mode = disable_pcs
# rate_match_fifo = bypass_rm_fifo
# rate_match_fifo_latency = low_latency
# reconfig_settings = {}
# reverse_lpbk = rev_lpbk_dis
# rx_b4gb_par_lpbk = b4gb_par_lpbk_dis
# rx_force_balign = dis_force_balign
# rx_ins_del_one_skip = ins_del_one_skip_dis
# rx_num_fixed_pat = 0
# rx_test_out_sel = rx_test_out0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_gen3_tx_pcs
# ================================================
# mode = disable_pcs
# reverse_lpbk = rev_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_bitslip = 00
# tx_gbox_byp = bypass_gbox
# 
# 
# ================================================
# Module twentynm_hssi_krfec_rx_pcs
# ================================================
# blksync_cor_en = detect
# bypass_gb = bypass_dis
# clr_ctrl = both_enabled
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# dv_start = with_blklock
# err_mark_type = err_mark_10g
# error_marking_en = err_mark_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# parity_invalid_enum = 08
# parity_valid_num = 4
# pipeln_blksync = enable
# pipeln_descrm = disable
# pipeln_errcorrect = disable
# pipeln_errtrap_ind = enable
# pipeln_errtrap_lfsr = disable
# pipeln_errtrap_loc = disable
# pipeln_errtrap_pat = disable
# pipeln_gearbox = enable
# pipeln_syndrm = enable
# pipeln_trans_dec = disable
# prot_mode = disable_mode
# receive_order = receive_lsb
# reconfig_settings = {}
# rx_testbus_sel = overall
# signal_ok_en = sig_ok_en
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_krfec_tx_pcs
# ================================================
# burst_err = burst_err_dis
# burst_err_len = burst_err_len1
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# enc_frame_query = enc_query_dis
# low_latency_en = disable
# pipeln_encoder = enable
# pipeln_scrambler = enable
# prot_mode = disable_mode
# silicon_rev = 20nm5
# sup_mode = user_mode
# transcode_err = trans_err_dis
# transmit_order = transmit_lsb
# tx_testbus_sel = overall
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen1_2
# ================================================
# elec_idle_delay_val = 0
# error_replace_pad = replace_edb
# hip_mode = dis_hip
# ind_error_reporting = dis_ind_error_reporting
# phystatus_delay_val = 0
# phystatus_rst_toggle = dis_phystatus_rst_toggle
# pipe_byte_de_serializer_en = dont_care_bds
# prot_mode = basic
# reconfig_settings = {}
# rpre_emph_a_val = 00
# rpre_emph_b_val = 00
# rpre_emph_c_val = 00
# rpre_emph_d_val = 00
# rpre_emph_e_val = 00
# rvod_sel_a_val = 00
# rvod_sel_b_val = 00
# rvod_sel_c_val = 00
# rvod_sel_d_val = 00
# rvod_sel_e_val = 00
# rx_pipe_enable = dis_pipe_rx
# rxdetect_bypass = dis_rxdetect_bypass
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_pipe_enable = dis_pipe_tx
# txswing = dis_txswing
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen3
# ================================================
# bypass_rx_detection_enable = false
# bypass_rx_preset = 0
# bypass_rx_preset_enable = false
# bypass_tx_coefficent = 00000
# bypass_tx_coefficent_enable = false
# elecidle_delay_g3 = 0
# ind_error_reporting = dis_ind_error_reporting
# mode = disable_pcs
# phy_status_delay_g12 = 0
# phy_status_delay_g3 = 0
# phystatus_rst_toggle_g12 = dis_phystatus_rst_toggle
# phystatus_rst_toggle_g3 = dis_phystatus_rst_toggle_g3
# rate_match_pad_insertion = dis_rm_fifo_pad_ins
# silicon_rev = 20nm5
# sup_mode = user_mode
# test_out_sel = disable_test_out
# 
# 
# ================================================
# Module twentynm_hssi_rx_pcs_pma_interface
# ================================================
# block_sel = eight_g_pcs
# channel_operation_mode = tx_rx_pair_enabled
# clkslip_sel = pld
# lpbk_en = disable
# master_clk_sel = master_rx_pma_clk
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_rx = pma_20b_rx
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_ver = prbs_off
# prot_mode_rx = eightg_basic_mode_rx
# reconfig_settings = {}
# rx_dyn_polarity_inversion = rx_dyn_polinv_dis
# rx_lpbk_en = lpbk_dis
# rx_prbs_force_signal_ok = force_sig_ok
# rx_prbs_mask = prbsmask128
# rx_prbs_mode = teng_mode
# rx_signalok_signaldet_sel = sel_sig_det
# rx_static_polarity_inversion = rx_stat_polinv_dis
# rx_uhsif_lpbk_en = uhsif_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_rx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_rx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_rx = individual_rx
# hd_10g_fifo_mode_rx = fifo_rx
# hd_10g_low_latency_en_rx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_rx = pma_64b_rx
# hd_10g_prot_mode_rx = disabled_prot_mode_rx
# hd_10g_shared_fifo_width_rx = single_rx
# hd_10g_sup_mode = user_mode
# hd_10g_test_bus_mode = rx
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_rx = individual_rx
# hd_8g_fifo_mode_rx = fifo_rx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_rx = pma_20b_rx
# hd_8g_prot_mode_rx = basic_rm_disable_rx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_clklow_clk_hz = 09502f90
# hd_chnl_ctrl_plane_bonding_rx = individual_rx
# hd_chnl_fref_clk_hz = 09502f90
# hd_chnl_frequency_rules_en = disable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_rx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_operating_voltage = standard
# hd_chnl_pcs_ac_pwr_rules_en = disable
# hd_chnl_pcs_pair_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_pwr_scaling_clk = pma_rx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_rx = fifo_rx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_rx_clk_hz = 09502f90
# hd_chnl_pma_dw_rx = pma_20b_rx
# hd_chnl_pma_rx_clk_hz = 09502f90
# hd_chnl_prot_mode_rx = basic_8gpcs_rm_disable_rx
# hd_chnl_shared_fifo_width_rx = single_rx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_chnl_transparent_pcs_rx = disable
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_rx = non_teng_mode_rx
# hd_fifo_shared_fifo_width_rx = single_rx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_rx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_rx = disabled_prot_mode_rx
# hd_krfec_sup_mode = user_mode
# hd_krfec_test_bus_mode = tx
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_rx = eightg_and_g3_pld_fifo_mode_rx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_rx = pma_20b_rx
# hd_pmaif_prot_mode_rx = eightg_basic_mode_rx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_rx_block_sel = eightg
# pcs_rx_clk_out_sel = eightg_clk_out
# pcs_rx_clk_sel = pld_rx_clk
# pcs_rx_hip_clk_en = hip_rx_disable
# pcs_rx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_tx_pcs_pma_interface
# ================================================
# bypass_pma_txelecidle = true
# channel_operation_mode = tx_rx_pair_enabled
# lpbk_en = disable
# master_clk_sel = master_tx_pma_clk
# pcie_sub_prot_mode_tx = other_prot_mode
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_tx = pma_20b_tx
# pma_if_dft_en = dft_dis
# pmagate_en = pmagate_dis
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_gen_pat = prbs_gen_dis
# prot_mode_tx = eightg_basic_mode_tx
# reconfig_settings = {}
# silicon_rev = 20nm5
# sq_wave_num = sq_wave_default
# sqwgen_clken = sqwgen_clk_dis
# sup_mode = user_mode
# tx_dyn_polarity_inversion = tx_dyn_polinv_dis
# tx_pma_data_sel = eight_g_pcs
# tx_static_polarity_inversion = tx_stat_polinv_dis
# uhsif_cnt_step_filt_before_lock = uhsif_filt_stepsz_b4lock_2
# uhsif_cnt_thresh_filt_after_lock_value = 0
# uhsif_cnt_thresh_filt_before_lock = uhsif_filt_cntthr_b4lock_8
# uhsif_dcn_test_update_period = uhsif_dcn_test_period_4
# uhsif_dcn_testmode_enable = uhsif_dcn_test_mode_disable
# uhsif_dead_zone_count_thresh = uhsif_dzt_cnt_thr_2
# uhsif_dead_zone_detection_enable = uhsif_dzt_disable
# uhsif_dead_zone_obser_window = uhsif_dzt_obr_win_16
# uhsif_dead_zone_skip_size = uhsif_dzt_skipsz_4
# uhsif_delay_cell_index_sel = uhsif_index_cram
# uhsif_delay_cell_margin = uhsif_dcn_margin_2
# uhsif_delay_cell_static_index_value = 00
# uhsif_dft_dead_zone_control = uhsif_dft_dz_det_val_0
# uhsif_dft_up_filt_control = uhsif_dft_up_val_0
# uhsif_enable = uhsif_disable
# uhsif_lock_det_segsz_after_lock = uhsif_lkd_segsz_aflock_512
# uhsif_lock_det_segsz_before_lock = uhsif_lkd_segsz_b4lock_16
# uhsif_lock_det_thresh_cnt_after_lock_value = 0
# uhsif_lock_det_thresh_cnt_before_lock_value = 0
# uhsif_lock_det_thresh_diff_after_lock_value = 0
# uhsif_lock_det_thresh_diff_before_lock_value = 0
# 
# 
# ================================================
# Module twentynm_hssi_tx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_tx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_tx = ctrl_slave_abv_tx
# hd_10g_fifo_mode_tx = fifo_tx
# hd_10g_low_latency_en_tx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_tx = pma_64b_tx
# hd_10g_prot_mode_tx = disabled_prot_mode_tx
# hd_10g_shared_fifo_width_tx = single_tx
# hd_10g_sup_mode = user_mode
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_tx = ctrl_slave_abv_tx
# hd_8g_fifo_mode_tx = fifo_tx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_tx = pma_20b_tx
# hd_8g_prot_mode_tx = basic_tx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_ctrl_plane_bonding_tx = ctrl_slave_abv_tx
# hd_chnl_frequency_rules_en = enable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_tx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_pcs_tx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_tx_pwr_scaling_clk = pma_tx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_tx = fifo_tx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_tx_clk_hz = 09502f90
# hd_chnl_pld_uhsif_tx_clk_hz = 00000000
# hd_chnl_pma_dw_tx = pma_20b_tx
# hd_chnl_pma_tx_clk_hz = 09502f90
# hd_chnl_prot_mode_tx = basic_8gpcs_tx
# hd_chnl_shared_fifo_width_tx = single_tx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_tx = non_teng_mode_tx
# hd_fifo_shared_fifo_width_tx = single_tx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_tx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_tx = disabled_prot_mode_tx
# hd_krfec_sup_mode = user_mode
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_tx = eightg_and_g3_pld_fifo_mode_tx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_ctrl_plane_bonding = individual
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_tx = pma_20b_tx
# hd_pmaif_prot_mode_tx = eightg_basic_mode_tx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_tx_clk_out_sel = eightg_clk_out
# pcs_tx_clk_source = eightg
# pcs_tx_data_source = hip_disable
# pcs_tx_delay1_clk_en = delay1_clk_disable
# pcs_tx_delay1_clk_sel = pcs_tx_clk
# pcs_tx_delay1_ctrl = delay1_path0
# pcs_tx_delay1_data_sel = one_ff_delay
# pcs_tx_delay2_clk_en = delay2_clk_disable
# pcs_tx_delay2_ctrl = delay2_path0
# pcs_tx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# Break key hit 
# Simulation stop requested.
add wave -position 9  sim:/xaui_phy_atxpll_tb/tx_serial_clk
write format wave -window .main_pane.wave.interior.cs.body.pw.wf /share/jinz/Altera/Arria10/XAUI/functional/wave.do
vlog xaui_phy_atxpll_tb.v
# Model Technology ModelSim SE-64 vlog 10.1 Compiler 2011.12 Dec  5 2011
# -- Compiling module xaui_phy_atxpll_tb
# 
# Top level modules:
# 	xaui_phy_atxpll_tb
restart -f; run -a
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# ** Warning: (vopt-2129) Design elaboration has evaluated 5000 generate loop iterations.
# Loading work.xaui_phy_atxpll_tb(fast)
# Loading work.atxpll(fast)
# Loading sv_std.std
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_native_avmm_nf(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_cgb_master(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_lc_refclk_select_mux(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_atx_pll(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_avmm(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_avmm_if(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_resync(fast)
# Loading work.xaui_phy(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.altera_xcvr_functions(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.altera_xcvr_xaui_sv_unit(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.altera_xcvr_xaui(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.a10_xcvr_xaui(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.sxaui(fast)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.altsyncram(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.altsyncram_body(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.ALTERA_DEVICE_FAMILIES(fast)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION(fast)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.altsyncram(fast)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.altsyncram_body(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.a10_xcvr_custom_native(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.altera_xcvr_native_a10(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_native_avmm_nf(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native_rev_20nm5(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pma_rev_20nm5(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_adaptation(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_cdr_refclk_select_mux(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_channel_pll(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_rx_buf(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_rx_deser(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_rx_dfe(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_rx_odi(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_rx_sd(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_tx_buf(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_tx_cgb(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_tx_ser(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pcs_rev_20nm5(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_10g_rx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_10g_tx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_8g_rx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_8g_tx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_common_pcs_pma_interface(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_common_pld_pcs_interface(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_fifo_rx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_fifo_tx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_gen3_rx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_gen3_tx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_krfec_rx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_krfec_tx_pcs(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pipe_gen1_2(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pipe_gen3(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_rx_pcs_pma_interface(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_rx_pld_pcs_interface(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_tx_pcs_pma_interface(fast)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_tx_pld_pcs_interface(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_avmm(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_avmm_if(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native_rev_20nm5(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pma_rev_20nm5(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_tx_buf(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pcs_rev_20nm5(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_10g_tx_pcs(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native_rev_20nm5(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pma_rev_20nm5(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_tx_buf(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pcs_rev_20nm5(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_10g_tx_pcs(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_8g_rx_pcs(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_8g_tx_pcs(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_tx_pld_pcs_interface(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_xcvr_native_rev_20nm5(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pma_rev_20nm5(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_pma_tx_buf(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.twentynm_pcs_rev_20nm5(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_10g_tx_pcs(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_8g_rx_pcs(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_8g_tx_pcs(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/twentynm_hssi_ver.twentynm_hssi_tx_pld_pcs_interface(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_mgmt2dec_xaui(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.altera_xcvr_reset_control(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_reset_counter(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_resync(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_reset_counter(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_reset_counter(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_resync(fast__4)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_reset_counter(fast__3)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_reset_counter(fast__4)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_pma_controller_tgx(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.altera_wait_generate(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_resync(fast__1)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_reset_ctrl_lego(fast)
# Loading ../xaui_phy/sim/mentor/libraries/altera_mf_ver.altera_std_synchronizer(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_csr_common_h(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_csr_common(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.hxaui_csr_h(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.hxaui_csr(fast)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_native_a10_141.alt_xcvr_resync(fast__2)
# Loading ../xaui_phy/sim/mentor/libraries/xaui_phy_altera_xcvr_xaui_141.alt_xcvr_mgmt2dec_phyreconfig(fast)
# Loading work.xaui_monitor(fast)
# ================ INPUT =================
# prot_mode        = basic_tx
# input_select     = lcpll_top
# ================ OUTPUT ================
# x1_clock_source_sel = lcpll_top
# ================ END ===================
# 
# 
# 
# ================================================
# Module twentynm_hssi_pma_cgb_master
# ================================================
# bonding_reset_enable = allow_bonding_reset
# cgb_enable_iqtxrxclk = disable_iqtxrxclk
# cgb_power_down = normal_cgb
# datarate = 6250000000 bps
# dft_iqtxrxclk_control = dft_iqtxrxclk_drv_low
# initial_settings = true
# input_select = lcpll_top
# input_select_gen3 = unused
# master_cgb_clock_control0 = master_cgb_no_dft_control0
# master_cgb_clock_control1 = master_cgb_no_dft_control1
# master_cgb_clock_control2 = master_cgb_no_dft_control2
# master_cgb_clock_control3 = master_cgb_no_dft_control3
# master_cgb_clock_control4 = master_cgb_no_dft_control4
# master_cgb_clock_control5 = master_cgb_no_dft_control5
# mcgb_high_perf_datarate_limit_bin = 0000000000000000
# mcgb_high_perf_voltage = 000
# mcgb_low_power_datarate_limit_bin = 0000000000000000
# mcgb_low_power_voltage = 000
# mcgb_mid_power_datarate_limit_bin = 0000000000000000
# mcgb_mid_power_voltage = 000
# observe_cgb_clocks = observe_nothing
# optimal = true
# pcie_gen3_bitwidth = pciegen3_wide
# powerdown_mode = powerup
# prot_mode = basic_tx
# scratch0_x1_clock_src = unused
# scratch1_x1_clock_src = unused
# scratch2_x1_clock_src = unused
# scratch3_x1_clock_src = unused
# ser_mode = twenty_bit
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_ucontrol_en = disable
# tx_ucontrol_pcie = gen1
# tx_ucontrol_reset = disable
# vccdreg_output = vccdreg_nominal
# local_x1_clock_source_sel = lcpll_top
# x1_div_m_sel = divbypass
# 
# 
# ================================================
# Module twentynm_hssi_pma_lc_refclk_select_mux
# ================================================
# inclk0_logical_to_physical_mapping = ref_iqclk0
# inclk1_logical_to_physical_mapping = power_down
# inclk2_logical_to_physical_mapping = power_down
# inclk3_logical_to_physical_mapping = power_down
# inclk4_logical_to_physical_mapping = power_down
# powerdown_mode = powerup
# refclk_select = ref_iqclk0
# silicon_rev = 20nm5
# local_xmux_lc_scratch0_src = scratch0_src_iqclk
# local_xmux_lc_scratch1_src = scratch1_src_iqclk
# local_xmux_lc_scratch2_src = scratch2_src_iqclk
# local_xmux_lc_scratch3_src = scratch3_src_iqclk
# local_xmux_lc_scratch4_src = scratch4_src_iqclk
# local_xmux_refclk_src = src_iqclk
# local_xpm_iqref_mux_iqclk_sel = ref_iqclk0
# local_xpm_iqref_mux_scratch0_src = scratch0_ref_iqclk0
# local_xpm_iqref_mux_scratch1_src = scratch1_power_down
# local_xpm_iqref_mux_scratch2_src = scratch2_power_down
# local_xpm_iqref_mux_scratch3_src = scratch3_power_down
# local_xpm_iqref_mux_scratch4_src = scratch4_power_down
# 
# ERROR: Module xaui_phy_atxpll_tb.atxpll.xcvr_atx_pll_a10_0.<protected>.<protected>.twentynm_atx_pll_encrypted_inst : Invalid parameter 'dsm_fractional_division' value of -2147483648
# Valid values are: from 0 to 
# 
# ================================================
# Module twentynm_atx_pll
# ================================================
# analog_mode = user_custom
# bandwidth_range_high = 0 hz
# bandwidth_range_low = 0 hz
# bonding = cpri_bonding
# bw_sel = medium
# cal_status = cal_done
# calibration_mode = cal_off
# cascadeclk_test = cascadetest_off
# cgb_div =           1
# clk_high_perf_voltage = 000
# clk_low_power_voltage = 000
# clk_mid_power_voltage = 000
# cp_compensation_enable = false
# cp_current_setting = cp_current_setting34
# cp_lf_3rd_pole_freq = lf_3rd_pole_setting1
# cp_lf_order = lf_3rd_order
# cp_testmode = cp_normal
# d2a_voltage = d2a_disable
# datarate = 6250000000 bps
# device_variant = device1
# dprio_clk_vreg_boost_expected_voltage = 000
# dprio_clk_vreg_boost_scratch = 0
# dprio_clk_vreg_boost_step_size = 00
# dprio_lc_vreg1_boost_expected_voltage = 000
# dprio_lc_vreg1_boost_scratch = 0
# dprio_lc_vreg_boost_expected_voltage = 000
# dprio_lc_vreg_boost_scratch = 0
# dprio_mcgb_vreg_boost_expected_voltage = 000
# dprio_mcgb_vreg_boost_scratch = 0
# dprio_mcgb_vreg_boost_step_size = 00
# dprio_vreg1_boost_step_size = 00
# dprio_vreg_boost_step_size = 00
# dsm_ecn_bypass = false
# dsm_ecn_test_en = false
# dsm_fractional_division = -2147483648
# dsm_fractional_value_ready = pll_k_ready
# dsm_mode = dsm_mode_phase
# dsm_out_sel = pll_dsm_3rd_order
# enable_hclk = hclk_disabled
# enable_lc_calibration = false
# enable_lc_vreg_calibration = false
# expected_lc_boost_voltage = 000
# f_max_pfd = 0 hz
# f_max_pfd_fractional = 0 hz
# f_max_ref = 0 hz
# f_max_tank_0 = 0 hz
# f_max_tank_1 = 0 hz
# f_max_tank_2 = 0 hz
# f_max_vco = 0 hz
# f_max_vco_fractional = 0 hz
# f_max_x1 = 0 hz
# f_min_pfd = 0 hz
# f_min_ref = 0 hz
# f_min_tank_0 = 0 hz
# f_min_tank_1 = 0 hz
# f_min_tank_2 = 0 hz
# f_min_vco = 0 hz
# fb_select = direct_fb
# hclk_divide =           1
# initial_settings = true
# iqclk_mux_sel = iqtxrxclk0
# is_cascaded_pll = false
# l_counter_scratch =  1
# l_counter_enable = true
# l_counter_scratch = 01
# lc_atb = atb_selectdisable
# lc_mode = lccmu_normal
# lf_cbig_size = lf_cbig_setting4
# lf_resistance = lf_setting1
# lf_ripplecap = lf_ripple_cap_0
# m_counter =          62
# max_fractional_percentage = 00
# min_fractional_percentage = 00
# n_counter_scratch = 1
# output_clock_frequency = 3125000000 Hz
# output_regulator_supply = vreg1v_setting1
# overrange_voltage = over_setting3
# pm_speed_grade = e2
# pma_width =          20
# power_mode = low_power
# power_rail_et =           0
# powerdown_mode = powerup
# prot_mode = basic_tx
# ref_clk_div =           1
# reference_clock_frequency = 100000000 Hz
# regulator_bypass = reg_enable
# side = side_unknown
# silicon_rev = 20nm5
# sup_mode = user_mode
# tank_band = lc_band0
# tank_sel = lctank0
# tank_voltage_coarse = vreg_setting_coarse1
# tank_voltage_fine = vreg_setting3
# top_or_bottom = tb_unknown
# underrange_voltage = under_setting3
# vccdreg_clk = vreg_clk0
# vccdreg_fb = vreg_fb0
# vccdreg_fw = vreg_fw0
# vco_bypass_enable = false
# vco_freq = 12500000000 Hz
# 
# 
# ================================================
# Module twentynm_hssi_pma_adaptation
# ================================================
# adapt_dfe_control_sel = r_adapt_dfe_control_sel_0
# adapt_dfe_sel = r_adapt_dfe_sel_0
# adapt_mode = manual
# adapt_vga_sel = r_adapt_vga_sel_0
# adapt_vref_sel = r_adapt_vref_sel_0
# adp_1s_ctle_bypass = radp_1s_ctle_bypass_0
# adp_4s_ctle_bypass = radp_4s_ctle_bypass_0
# adp_adapt_control_sel = radp_adapt_control_sel_0
# adp_adapt_rstn = radp_adapt_rstn_1
# adp_adapt_start = radp_adapt_start_0
# adp_bist_auxpath_en = radp_bist_auxpath_disable
# adp_bist_count_rstn = radp_bist_count_rstn_0
# adp_bist_datapath_en = radp_bist_datapath_disable
# adp_bist_mode = radp_bist_mode_0
# adp_bist_odi_dfe_sel = radp_bist_odi_dfe_sel_0
# adp_bist_spec_en = radp_bist_spec_en_0
# adp_control_mux_bypass = radp_control_mux_bypass_0
# adp_ctle_acgain_4s = radp_ctle_acgain_4s_0
# adp_ctle_adapt_bw = radp_ctle_adapt_bw_3
# adp_ctle_adapt_cycle_window = radp_ctle_adapt_cycle_window_6
# adp_ctle_adapt_oneshot = radp_ctle_adapt_oneshot_1
# adp_ctle_en = radp_ctle_disable
# adp_ctle_eqz_1s_sel = radp_ctle_eqz_1s_sel_0
# adp_ctle_force_spec_sign = radp_ctle_force_spec_sign_0
# adp_ctle_hold_en = radp_ctle_not_held
# adp_ctle_load = radp_ctle_load_0
# adp_ctle_load_value = radp_ctle_load_value_0
# adp_ctle_scale = radp_ctle_scale_0
# adp_ctle_scale_en = radp_ctle_scale_en_0
# adp_ctle_spec_sign = radp_ctle_spec_sign_0
# adp_ctle_sweep_direction = radp_ctle_sweep_direction_1
# adp_ctle_threshold = radp_ctle_threshold_0
# adp_ctle_threshold_en = radp_ctle_threshold_en_0
# adp_ctle_vref_polarity = radp_ctle_vref_polarity_0
# adp_ctle_window = radp_ctle_window_0
# adp_dfe_bw = radp_dfe_bw_3
# adp_dfe_clkout_div_sel = radp_dfe_clkout_div_sel_0
# adp_dfe_cycle = radp_dfe_cycle_6
# adp_dfe_fltap1 = radp_dfe_fltap1_0
# adp_dfe_fltap1_sgn = radp_dfe_fltap1_sgn_0
# adp_dfe_fltap2 = radp_dfe_fltap2_0
# adp_dfe_fltap2_sgn = radp_dfe_fltap2_sgn_0
# adp_dfe_fltap3 = radp_dfe_fltap3_0
# adp_dfe_fltap3_sgn = radp_dfe_fltap3_sgn_0
# adp_dfe_fltap4 = radp_dfe_fltap4_0
# adp_dfe_fltap4_sgn = radp_dfe_fltap4_sgn_0
# adp_dfe_fltap_bypass = radp_dfe_fltap_bypass_0
# adp_dfe_fltap_en = radp_dfe_fltap_disable
# adp_dfe_fltap_hold_en = radp_dfe_fltap_not_held
# adp_dfe_fltap_load = radp_dfe_fltap_load_0
# adp_dfe_fltap_position = radp_dfe_fltap_position_0
# adp_dfe_force_spec_sign = radp_dfe_force_spec_sign_0
# adp_dfe_fxtap1 = radp_dfe_fxtap1_0
# adp_dfe_fxtap2 = radp_dfe_fxtap2_0
# adp_dfe_fxtap2_sgn = radp_dfe_fxtap2_sgn_0
# adp_dfe_fxtap3 = radp_dfe_fxtap3_0
# adp_dfe_fxtap3_sgn = radp_dfe_fxtap3_sgn_0
# adp_dfe_fxtap4 = radp_dfe_fxtap4_0
# adp_dfe_fxtap4_sgn = radp_dfe_fxtap4_sgn_0
# adp_dfe_fxtap5 = radp_dfe_fxtap5_0
# adp_dfe_fxtap5_sgn = radp_dfe_fxtap5_sgn_0
# adp_dfe_fxtap6 = radp_dfe_fxtap6_0
# adp_dfe_fxtap6_sgn = radp_dfe_fxtap6_sgn_0
# adp_dfe_fxtap7 = radp_dfe_fxtap7_0
# adp_dfe_fxtap7_sgn = radp_dfe_fxtap7_sgn_0
# adp_dfe_fxtap_bypass = radp_dfe_fxtap_bypass_0
# adp_dfe_fxtap_en = radp_dfe_fxtap_disable
# adp_dfe_fxtap_hold_en = radp_dfe_fxtap_not_held
# adp_dfe_fxtap_load = radp_dfe_fxtap_load_0
# adp_dfe_mode = radp_dfe_mode_0
# adp_dfe_spec_sign = radp_dfe_spec_sign_0
# adp_dfe_vref_polarity = radp_dfe_vref_polarity_0
# adp_force_freqlock = radp_force_freqlock_off
# adp_frame_capture = radp_frame_capture_0
# adp_frame_en = radp_frame_en_0
# adp_frame_odi_sel = radp_frame_odi_sel_0
# adp_frame_out_sel = radp_frame_out_sel_0
# adp_lfeq_fb_sel = radp_lfeq_fb_sel_0
# adp_mode = radp_mode_0
# adp_odi_control_sel = radp_odi_control_sel_0
# adp_onetime_dfe = radp_onetime_dfe_1
# adp_spec_avg_window = radp_spec_avg_window_4
# adp_spec_trans_filter = radp_spec_trans_filter_2
# adp_status_sel = radp_status_sel_0
# adp_vga_bypass = radp_vga_bypass_0
# adp_vga_en = radp_vga_disable
# adp_vga_load = radp_vga_load_0
# adp_vga_polarity = radp_vga_polarity_0
# adp_vga_sel = radp_vga_sel_0
# adp_vga_sweep_direction = radp_vga_sweep_direction_1
# adp_vga_threshold = radp_vga_threshold_4
# adp_vref_bw = radp_vref_bw_1
# adp_vref_bypass = radp_vref_bypass_0
# adp_vref_cycle = radp_vref_cycle_6
# adp_vref_dfe_spec_en = radp_vref_dfe_spec_en_0
# adp_vref_en = radp_vref_disable
# adp_vref_hold_en = radp_vref_not_held
# adp_vref_load = radp_vref_load_0
# adp_vref_polarity = radp_vref_polarity_0
# adp_vref_sel = radp_vref_sel_21
# adp_vref_vga_level = radp_vref_vga_level_13
# datarate = 3125000000 bps
# initial_settings = true
# odi_count_threshold = rodi_count_threshold_0
# odi_dfe_spec_en = rodi_dfe_spec_en_0
# odi_en = rodi_en_0
# odi_mode = rodi_mode_0
# odi_rstn = rodi_rstn_0
# odi_spec_sel = rodi_spec_sel_0
# odi_start = rodi_start_0
# odi_vref_sel = rodi_vref_sel_0
# optimal = false
# prot_mode = basic_rx
# rrx_pcie_eqz = rrx_pcie_eqz_0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_cdr_refclk_select_mux
# ================================================
# local_cdr_clkin_scratch0_src = cdr_clkin_scratch0_src_refclk_iqclk
# local_cdr_clkin_scratch1_src = cdr_clkin_scratch1_src_refclk_iqclk
# local_cdr_clkin_scratch2_src = cdr_clkin_scratch2_src_refclk_iqclk
# local_cdr_clkin_scratch3_src = cdr_clkin_scratch3_src_refclk_iqclk
# local_cdr_clkin_scratch4_src = cdr_clkin_scratch4_src_refclk_iqclk
# inclk0_logical_to_physical_mapping = ref_iqclk0
# inclk1_logical_to_physical_mapping = ref_iqclk1
# inclk2_logical_to_physical_mapping = ref_iqclk2
# inclk3_logical_to_physical_mapping = ref_iqclk3
# inclk4_logical_to_physical_mapping = ref_iqclk4
# powerdown_mode = powerup
# receiver_detect_src = iqclk_src
# refclk_select = ref_iqclk0
# silicon_rev = 20nm5
# local_xmux_refclk_src = refclk_iqclk
# local_xpm_iqref_mux_iqclk_sel = ref_iqclk0
# local_xpm_iqref_mux_scratch0_src = scratch0_ref_iqclk0
# local_xpm_iqref_mux_scratch1_src = scratch1_ref_iqclk1
# local_xpm_iqref_mux_scratch2_src = scratch2_ref_iqclk2
# local_xpm_iqref_mux_scratch3_src = scratch3_ref_iqclk3
# local_xpm_iqref_mux_scratch4_src = scratch4_ref_iqclk4
# 
# 
# ================================================
# Module twentynm_hssi_pma_channel_pll
# ================================================
# analog_mode = user_custom
# atb_select_control = atb_off
# auto_reset_on = auto_reset_off
# bandwidth_range_high = 0 hz
# bandwidth_range_low = 0 hz
# bbpd_data_pattern_filter_select = bbpd_data_pat_off
# bw_sel = medium
# cdr_odi_select = sel_cdr
# cdr_phaselock_mode = no_ignore_lock
# cdr_powerdown_mode = power_up
# cgb_div =           1
# chgpmp_current_pd = cp_current_pd_setting2
# chgpmp_current_pfd = cp_current_pfd_setting3
# chgpmp_replicate = false
# chgpmp_testmode = cp_test_disable
# clklow_mux_select = clklow_mux_cdr_fbclk
# datarate = 3125000000 bps
# diag_loopback_enable = false
# disable_up_dn = true
# f_max_pfd = 0 hz
# f_max_ref = 0 hz
# f_max_vco = 0 hz
# f_min_gt_channel = 0 hz
# f_min_pfd = 0 hz
# f_min_ref = 0 hz
# f_min_vco = 0 hz
# fb_select = direct_fb
# fref_clklow_div =           1
# fref_mux_select = fref_mux_cdr_refclk
# gpon_lck2ref_control = gpon_lck2ref_off
# initial_settings = true
# iqclk_mux_sel = power_down
# is_cascaded_pll = false
# lck2ref_delay_control = lck2ref_delay_2
# lf_resistor_pd = lf_pd_setting0
# lf_resistor_pfd = lf_pfd_setting2
# lf_ripple_cap = lf_no_ripple
# loop_filter_bias_select = lpflt_bias_off
# loopback_mode = loopback_disabled
# lpd_counter = 04
# lpfd_counter = 08
# ltd_ltr_micro_controller_select = ltd_ltr_pcs
# m_counter =          10
# n_counter_scratch =  2
# n_counter_scratch = 02
# optimal = false
# output_clock_frequency = 1562500000 Hz
# pcie_gen = non_pcie
# pd_fastlock_mode = false
# pd_l_counter =           4
# pfd_l_counter =           8
# pm_speed_grade = e2
# pma_width =          20
# position = position_unknown
# power_mode = low_power
# primary_use = cdr
# prot_mode = basic_rx
# reference_clock_frequency = 156250000 hz
# requires_gt_capable_channel = false
# reverse_serial_loopback = no_loopback
# set_cdr_v2i_enable = true
# set_cdr_vco_reset = false
# set_cdr_vco_speed = 07
# set_cdr_vco_speed_fix = 06
# set_cdr_vco_speed_pciegen3 = cdr_vco_max_speedbin_pciegen3
# side = side_unknown
# silicon_rev = 20nm5
# sup_mode = user_mode
# top_or_bottom = tb_unknown
# tx_pll_prot_mode = txpll_unused
# txpll_hclk_driver_enable = false
# uc_cru_rstb = cdr_lf_reset_off
# uc_ro_cal = uc_ro_cal_on
# uc_ro_cal_status = uc_ro_cal_notdone
# vco_freq = 6250000000 Hz
# vco_overrange_voltage = vco_overrange_off
# vco_underrange_voltage = vco_underange_off
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_buf
# ================================================
# act_isource_disable = isrc_en
# bodybias_enable = bodybias_en
# bodybias_select = bodybias_sel1
# bypass_eqz_stages_234 = bypass_off
# cdrclk_to_cgb = cdrclk_2cgb_dis
# cgm_bias_disable = cgmbias_en
# datarate = 3125000000 bps
# diag_lp_en = dlp_off
# eq_bw_sel = eq_bw_1
# eq_dc_gain_trim = no_dc_gain
# xrx_path_initial_settings = true
# input_vcm_sel = high_vcm
# iostandard = hssi_diffio
# lfeq_enable = non_lfeq_mode
# lfeq_zero_control = lfeq_setting_2
# link_rx = sr
# link_rx = sr
# loopback_modes = lpbk_disable
# offset_cal_pd = eqz1_en
# offset_cancellation_coarse = coarse_setting_00
# offset_cancellation_ctrl = volt_0mv
# offset_cancellation_fine = fine_setting_00
# offset_pd = oc_en
# one_stage_enable = non_s1_mode
# xrx_path_optimal = false
# pdb_rx = normal_rx_on
# pm_speed_grade = e2
# pm_tx_rx_cvp_mode = cvp_off
# pm_tx_rx_pcie_gen = non_pcie
# pm_tx_rx_pcie_gen_bitwidth = pcie_gen3_32b
# pm_tx_rx_testmux_select = setting0
# power_mode_rx = low_power
# power_mode_rx = low_power
# power_rail_eht =           0
# power_rail_er =           0
# xrx_path_prot_mode = basic_rx
# qpi_enable = non_qpi_mode
# refclk_en = disable
# rx_atb_select = atb_disable
# rx_refclk_divider = bypass_divider
# rx_sel_bias_source = bias_vcmdrv
# silicon_rev = 20nm5
# xrx_path_sup_mode = user_mode
# term_sel = r_r1
# term_tri_enable = disable_tri
# vccela_supply_voltage = vccela_1p1v
# vcm_current_add = vcm_current_default
# vcm_sel = vcm_setting_10
# vga_bandwidth_select = vga_bw_1
# xrx_path_analog_mode = user_custom
# xrx_path_datarate = 3125000000 bps
# xrx_path_datawidth = 14
# xrx_path_gt_enabled = disable
# xrx_path_initial_settings = true
# xrx_path_jtag_hys = hys_increase_disable
# xrx_path_jtag_lp = lp_off
# xrx_path_optimal = false
# xrx_path_pma_rx_divclk_hz_bin = 0000000009502f90
# xrx_path_prot_mode = basic_rx
# xrx_path_sup_mode = user_mode
# xrx_path_uc_cal_enable = rx_cal_off
# xrx_path_uc_cru_rstb = cdr_lf_reset_off
# xrx_path_uc_pcie_sw = uc_pcie_gen1
# xrx_path_uc_rx_rstb = rx_reset_on
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_deser
# ================================================
# bitslip_bypass = bs_bypass_yes
# clkdiv_source = vco_bypass_normal
# clkdivrx_user_mode = clkdivrx_user_disabled
# datarate = 3125000000 bps
# deser_factor =          20
# deser_powerdown = deser_power_up
# force_adaptation_outputs = normal_outputs
# force_clkdiv_for_testing = normal_clkdiv
# optimal = false
# pcie_gen = non_pcie
# pcie_gen_bitwidth = pcie_gen3_32b
# prot_mode = basic_rx
# rst_n_adapt_odi = no_rst_adapt_odi
# sdclk_enable = false
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_dfe
# ================================================
# atb_select = atb_disable
# datarate = 3125000000 bps
# dft_en = dft_disable
# initial_settings = true
# oc_sa_adp1 = 00
# oc_sa_adp2 = 00
# oc_sa_c270 = 00
# oc_sa_c90 = 00
# oc_sa_d0c0 = 00
# oc_sa_d0c180 = 00
# oc_sa_d1c0 = 00
# oc_sa_d1c180 = 00
# optimal = false
# pdb = 6466655f656e61626c65
# pdb_fixedtap = fixtap_dfe_powerdown
# pdb_floattap = floattap_dfe_powerdown
# pdb_fxtap4t7 = fxtap4t7_powerdown
# power_mode = low_power
# prot_mode = basic_rx
# sel_fltapstep_dec = fltap_step_no_dec
# sel_fltapstep_inc = fltap_step_no_inc
# sel_fxtapstep_dec = fxtap_step_no_dec
# sel_fxtapstep_inc = fxtap_step_no_inc
# sel_oc_en = off_canc_disable
# sel_probe_tstmx = probe_tstmx_none
# silicon_rev = 20nm5
# sup_mode = user_mode
# uc_rx_dfe_cal = uc_rx_dfe_cal_off
# uc_rx_dfe_cal_status = uc_rx_dfe_cal_notdone
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_odi
# ================================================
# clk_dcd_bypass = no_bypass
# datarate = 3125000000 bps
# enable_odi = power_down_eye
# initial_settings = true
# invert_dfe_vref = no_inversion
# monitor_bw_sel = bw_1
# oc_sa_c0 = 00
# oc_sa_c180 = 00
# optimal = false
# phase_steps_64_vs_128 = phase_steps_64
# phase_steps_sel = step40
# power_mode = low_power
# prot_mode = basic_rx
# sel_oc_en = off_canc_disable
# silicon_rev = 20nm5
# step_ctrl_sel = feedback_mode
# sup_mode = user_mode
# v_vert_sel = plus
# v_vert_threshold_scaling = scale_3
# vert_threshold = vert_0
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_sd
# ================================================
# link = sr
# optimal = false
# power_mode = low_power
# prot_mode = basic_rx
# sd_output_off =           1
# sd_output_on =          15
# sd_pdb = sd_off
# sd_threshold =           3
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_buf
# ================================================
# xtx_path_calibration_en = false
# compensation_driver_en = disable
# compensation_en = enable
# cpen_ctrl = cp_l0
# datarate = 3125000000 bps
# dcd_detection_en = enable
# dft_sel = dft_disabled
# duty_cycle_correction_bandwidth = dcc_bw_12
# duty_cycle_correction_mode_ctrl = dcc_disable
# duty_cycle_correction_reference1 = dcc_ref1_3
# duty_cycle_correction_reference2 = dcc_ref2_3
# duty_cycle_correction_reset_n = reset_n
# duty_cycle_input_polarity = dcc_input_pos
# duty_cycle_setting = dcc_t32
# duty_cycle_setting_aux = dcc2_t32
# xtx_path_initial_settings = true
# jtag_drv_sel = drv1
# jtag_lp = lp_off
# link_tx = sr
# link_tx = sr
# low_power_en = disable
# lst = 6174625f64697361626c6564
# mcgb_location_for_pcie = a
# xtx_path_optimal = false
# pm_speed_grade = e2
# power_mode = low_power
# power_rail_eht =           0
# power_rail_et =           0
# pre_emp_sign_1st_post_tap = fir_post_1t_neg
# pre_emp_sign_2nd_post_tap = fir_post_2t_neg
# pre_emp_sign_pre_tap_1t = fir_pre_1t_neg
# pre_emp_sign_pre_tap_2t = fir_pre_2t_neg
# pre_emp_switching_ctrl_1st_post_tap = 00
# pre_emp_switching_ctrl_2nd_post_tap = 0
# pre_emp_switching_ctrl_pre_tap_1t = 00
# pre_emp_switching_ctrl_pre_tap_2t = 0
# xtx_path_prot_mode = basic_tx
# res_cal_local = non_local
# rx_det = mode_0
# rx_det_output_sel = rx_det_pcie_out
# rx_det_pdb = rx_det_off
# ser_powerdown = normal_ser_on
# silicon_rev = 20nm5
# slew_rate_ctrl = slew_r7
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# term_code = rterm_code7
# term_n_tune = rterm_n0
# term_p_tune = rterm_p0
# term_sel = r_r1
# tx_powerdown = normal_tx_on
# uc_dcd_cal = uc_dcd_cal_off
# uc_dcd_cal_status = uc_dcd_cal_notdone
# uc_gen3 = gen3_off
# uc_gen4 = gen4_off
# uc_skew_cal = uc_skew_cal_off
# uc_skew_cal_status = uc_skew_cal_notdone
# uc_txvod_cal = uc_tx_vod_cal_off
# uc_txvod_cal_cont = uc_tx_vod_cal_cont_off
# uc_txvod_cal_status = uc_tx_vod_cal_notdone
# uc_vcc_setting = vcc_setting0
# user_fir_coeff_ctrl_sel = ram_ctl
# vod_output_swing_ctrl = 00
# vreg_output = vccdreg_nominal
# xtx_path_analog_mode = user_custom
# xtx_path_bonding_mode = x1_non_bonded
# xtx_path_calibration_en = false
# xtx_path_clock_divider_ratio = 1
# xtx_path_datarate = 3125000000 bps
# xtx_path_datawidth = 14
# xtx_path_gt_enabled = disable
# xtx_path_initial_settings = true
# xtx_path_optimal = false
# xtx_path_pma_tx_divclk_hz_bin = 0000000009502f90
# xtx_path_prot_mode = basic_tx
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# xtx_path_tx_pll_clk_hz = 1562500000
# 
# ================ INPUT =================
# prot_mode           = basic_tx
# input_select_x1     = unused
# input_select_xn     = sel_x6_dn
# input_select_gen3   = unused
# ================ OUTPUT ================
# x1_clock_source_sel = same_ch_txpll
# xn_clock_source_sel = sel_x6_bot
# ================ END ===================
# 
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_cgb
# ================================================
# bitslip_enable = disable_bitslip
# bonding_mode = x1_non_bonded
# bonding_reset_enable = disallow_bonding_reset
# cgb_power_down = normal_cgb
# datarate = 3125000000 bps
# dprio_cgb_vreg_boost = no_voltage_boost
# initial_settings = true
# input_select_gen3 = unused
# input_select_x1 = unused
# input_select_xn = sel_x6_dn
# observe_cgb_clocks = observe_nothing
# pcie_gen3_bitwidth = pciegen3_wide
# prot_mode = basic_tx
# scratch0_x1_clock_src = unused
# scratch1_x1_clock_src = unused
# scratch2_x1_clock_src = unused
# scratch3_x1_clock_src = unused
# select_done_master_or_slave = choose_master_pcie_sw_done
# ser_mode = twenty_bit
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_ucontrol_en = disable
# tx_ucontrol_pcie = gen1
# tx_ucontrol_reset = disable
# vccdreg_output = vccdreg_nominal
# local_x1_clock_source_sel = same_ch_txpll
# x1_div_m_sel = divbypass
# local_xn_clock_source_sel = sel_x6_bot
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_ser
# ================================================
# bonding_mode = x1_non_bonded
# clk_divtx_deskew = deskew_delay8
# control_clk_divtx = no_dft_control_clkdivtx
# duty_cycle_correction_mode_ctrl = dcc_disable
# initial_settings = true
# prot_mode = basic_tx
# ser_clk_divtx_user_sel = divtx_user_off
# ser_clk_mon = disable_clk_mon
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_10g_rx_pcs
# ================================================
# advanced_user_mode = disable
# align_del = align_del_dis
# ber_bit_err_total_cnt = bit_err_total_cnt_10g
# ber_clken = ber_clk_dis
# ber_xus_timer_window = 004c4a
# bitslip_mode = bitslip_dis
# blksync_bitslip_type = bitslip_comb
# blksync_bitslip_wait_cnt = 1
# blksync_bitslip_wait_type = bitslip_cnt
# blksync_bypass = blksync_bypass_en
# blksync_clken = blksync_clk_dis
# blksync_enum_invalid_sh_cnt = enum_invalid_sh_cnt_10g
# blksync_knum_sh_cnt_postlock = knum_sh_cnt_postlock_10g
# blksync_knum_sh_cnt_prelock = knum_sh_cnt_prelock_10g
# blksync_pipeln = blksync_pipeln_dis
# clr_errblk_cnt_en = disable
# control_del = control_del_none
# crcchk_bypass = crcchk_bypass_en
# crcchk_clken = crcchk_clk_dis
# crcchk_inv = crcchk_inv_en
# crcchk_pipeln = crcchk_pipeln_en
# crcflag_pipeln = crcflag_pipeln_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# data_bit_reverse = data_bit_reverse_dis
# dec64b66b_clken = dec64b66b_clk_dis
# dec_64b66b_rxsm_bypass = dec_64b66b_rxsm_bypass_en
# descrm_bypass = descrm_bypass_en
# descrm_clken = descrm_clk_dis
# descrm_mode = async
# descrm_pipeln = enable
# dft_clk_out_sel = rx_master_clk
# dis_signal_ok = dis_signal_ok_en
# dispchk_bypass = dispchk_bypass_en
# empty_flag_type = empty_rd_side
# fast_path = fast_path_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_read = fifo_double_read_dis
# fifo_stop_rd = n_rd_empty
# fifo_stop_wr = n_wr_full
# force_align = force_align_dis
# frmsync_bypass = frmsync_bypass_en
# frmsync_clken = frmsync_clk_dis
# frmsync_enum_scrm = enum_scrm_default
# frmsync_enum_sync = enum_sync_default
# frmsync_flag_type = location_only
# frmsync_knum_sync = knum_sync_default
# frmsync_mfrm_length = 0800
# frmsync_pipeln = frmsync_pipeln_en
# full_flag_type = full_wr_side
# gb_rx_idwidth = width_64
# gb_rx_odwidth = width_64
# gbexp_clken = gbexp_clk_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# master_clk_sel = master_rx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# rand_clken = rand_clk_dis
# rd_clk_sel = rd_rx_pld_clk
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# rx_fifo_write_ctrl = blklock_stops
# rx_scrm_width = bit64
# rx_sh_location = msb
# rx_signal_ok_sel = synchronized_ver
# rx_sm_bypass = rx_sm_bypass_en
# rx_sm_hiber = rx_sm_hiber_en
# rx_sm_pipeln = rx_sm_pipeln_en
# rx_testbus_sel = rx_fifo_testbus1
# rx_true_b2b = b2b
# rxfifo_empty = empty_default
# rxfifo_full = full_default
# rxfifo_mode = phase_comp
# rxfifo_pempty = 02
# rxfifo_pfull = 17
# silicon_rev = 20nm5
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_10g_tx_pcs
# ================================================
# advanced_user_mode = disable
# bitslip_en = bitslip_dis
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# comp_cnt = 00
# compin_sel = compin_slave_bot
# crcgen_bypass = crcgen_bypass_en
# crcgen_clken = crcgen_clk_dis
# crcgen_err = crcgen_err_dis
# crcgen_inv = crcgen_inv_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# ctrl_plane_bonding = ctrl_slave_blw
# data_bit_reverse = data_bit_reverse_dis
# dft_clk_out_sel = tx_master_clk
# dispgen_bypass = dispgen_bypass_en
# dispgen_clken = dispgen_clk_dis
# dispgen_err = dispgen_err_dis
# dispgen_pipeln = dispgen_pipeln_dis
# distdwn_bypass_pipeln = distdwn_bypass_pipeln_dis
# distdwn_master = distdwn_master_dis
# distup_bypass_pipeln = distup_bypass_pipeln_dis
# distup_master = distup_master_dis
# dv_bond = dv_bond_en
# empty_flag_type = empty_rd_side
# enc64b66b_txsm_clken = enc64b66b_txsm_clk_dis
# enc_64b66b_txsm_bypass = enc_64b66b_txsm_bypass_en
# fastpath = fastpath_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_write = fifo_double_write_dis
# fifo_reg_fast = fifo_reg_fast_dis
# fifo_stop_rd = rd_empty
# fifo_stop_wr = n_wr_full
# frmgen_burst = frmgen_burst_dis
# frmgen_bypass = frmgen_bypass_en
# frmgen_clken = frmgen_clk_dis
# frmgen_mfrm_length = 0800
# frmgen_pipeln = frmgen_pipeln_en
# frmgen_pyld_ins = frmgen_pyld_ins_dis
# frmgen_wordslip = frmgen_wordslip_dis
# full_flag_type = full_wr_side
# gb_pipeln_bypass = disable
# gb_tx_idwidth = width_64
# gb_tx_odwidth = width_64
# gbred_clken = gbred_clk_dis
# indv = indv_dis
# low_latency_en = disable
# master_clk_sel = master_tx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# pseudo_random = all_0
# pseudo_seed_a_bin = 03ffffffffffffff
# pseudo_seed_b_bin = 03ffffffffffffff
# random_disp = disable
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# scrm_bypass = scrm_bypass_en
# scrm_clken = scrm_clk_dis
# scrm_mode = async
# scrm_pipeln = enable
# sh_err = sh_err_dis
# silicon_rev = 20nm5
# sop_mark = sop_mark_dis
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# tx_scrm_err = scrm_err_dis
# tx_scrm_width = bit64
# tx_sh_location = msb
# tx_sm_bypass = tx_sm_bypass_en
# tx_sm_pipeln = tx_sm_pipeln_en
# tx_testbus_sel = tx_fifo_testbus1
# txfifo_empty = empty_default
# txfifo_full = full_default
# txfifo_mode = phase_comp
# txfifo_pempty = 2
# txfifo_pfull = b
# wr_clk_sel = wr_tx_pld_clk
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_8g_rx_pcs
# ================================================
# auto_error_replacement = dis_err_replace
# auto_speed_nego = dis_asn
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_deserializer = dis_bds
# cdr_ctrl_rxvalid_mask = dis_rxvalid_mask
# clkcmp_pattern_n = 00000
# clkcmp_pattern_p = 00000
# clock_gate_bds_dec_asn = dis_bds_dec_asn_clk_gating
# clock_gate_cdr_eidle = en_cdr_eidle_clk_gating
# clock_gate_dw_pc_wrclk = dis_dw_pc_wrclk_gating
# clock_gate_dw_rm_rd = en_dw_rm_rdclk_gating
# clock_gate_dw_rm_wr = en_dw_rm_wrclk_gating
# clock_gate_dw_wa = dis_dw_wa_clk_gating
# clock_gate_pc_rdclk = dis_pc_rdclk_gating
# clock_gate_sw_pc_wrclk = dis_sw_pc_wrclk_gating
# clock_gate_sw_rm_rd = en_sw_rm_rdclk_gating
# clock_gate_sw_rm_wr = en_sw_rm_wrclk_gating
# clock_gate_sw_wa = dis_sw_wa_clk_gating
# clock_observation_in_pld_core = internal_sw_wa_clk
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_slave_below
# ctrl_plane_bonding_distribution = not_master_chnl_distr
# eidle_entry_eios = dis_eidle_eios
# eidle_entry_iei = dis_eidle_iei
# eidle_entry_sd = dis_eidle_sd
# eightb_tenb_decoder = dis_8b10b
# err_flags_sel = err_flags_wa
# fixed_pat_det = dis_fixed_patdet
# fixed_pat_num = 0
# force_signal_detect = en_force_signal_detect
# gen3_clk_en = disable_clk
# gen3_rx_clk_sel = rcvd_clk
# gen3_tx_clk_sel = tx_pma_clk
# hip_mode = dis_hip
# ibm_invalid_code = dis_ibm_invalid_code
# invalid_code_flag_only = dis_invalid_code_only
# pad_or_edb_error_replace = replace_edb
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# pipe_if_enable = dis_pipe_rx
# pma_dw = twenty_bit
# polinv_8b10b_dec = dis_polinv_8b10b_dec
# prot_mode = basic_rm_disable
# rate_match = dis_rm
# rate_match_del_thres = dis_rm_del_thres
# rate_match_empty_thres = dis_rm_empty_thres
# rate_match_full_thres = dis_rm_full_thres
# rate_match_ins_thres = dis_rm_ins_thres
# rate_match_start_thres = dis_rm_start_thres
# reconfig_settings = {}
# rx_clk2 = rcvd_clk_clk2
# rx_clk_free_running = en_rx_clk_free_run
# rx_pcs_urst = en_rx_pcs_urst
# rx_rcvd_clk = rcvd_clk_rcvd_clk
# rx_rd_clk = pld_rx_clk
# rx_refclk = dis_refclk_sel
# rx_wr_clk = rx_clk2_div_1_2_4
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# sync_sm_idle_eios = dis_syncsm_idle
# test_bus_sel = tx_testbus
# tx_rx_parallel_loopback = dis_plpbk
# wa_boundary_lock_ctrl = sync_sm
# wa_clk_slip_spacing = 010
# wa_det_latency_sync_status_beh = dont_care_assert_sync
# wa_disp_err_flag = en_disp_err_flag
# wa_kchar = dis_kchar
# wa_pd = wa_pd_20
# wa_pd_data_bin = 00000000000a0d7c
# wa_pd_polarity = en_pd_both_pol
# wa_pld_controlled = dis_pld_ctrl
# wa_renumber_data = 01
# wa_rgnumber_data = 01
# wa_rknumber_data = 01
# wa_rosnumber_data = 0
# wa_rvnumber_data = 0000
# wa_sync_sm_ctrl = dw_basic_sync_sm
# wait_cnt = 000
# 
# 
# ================================================
# Module twentynm_hssi_8g_tx_pcs
# ================================================
# auto_speed_nego_gen2 = dis_asn_g2
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_serializer = dis_bs
# clock_gate_bs_enc = dis_bs_enc_clk_gating
# clock_gate_dw_fifowr = dis_dw_fifowr_clk_gating
# clock_gate_fiford = dis_fiford_clk_gating
# clock_gate_sw_fifowr = dis_sw_fifowr_clk_gating
# clock_observation_in_pld_core = internal_refclk_b
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_slave_below
# ctrl_plane_bonding_distribution = not_master_chnl_distr
# data_selection_8b10b_encoder_input = normal_data_path
# dynamic_clk_switch = dis_dyn_clk_switch
# eightb_tenb_disp_ctrl = dis_disp_ctrl
# eightb_tenb_encoder = dis_8b10b
# force_echar = dis_force_echar
# force_kchar = dis_force_kchar
# gen3_tx_clk_sel = dis_tx_clk
# gen3_tx_pipe_clk_sel = dis_tx_pipe_clk
# hip_mode = dis_hip
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# phfifo_write_clk_sel = pld_tx_clk
# pma_dw = twenty_bit
# prot_mode = basic
# reconfig_settings = {}
# refclk_b_clk_sel = tx_pma_clock
# revloop_back_rm = dis_rev_loopback_rx_rm
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# tx_bitslip = dis_tx_bitslip
# tx_compliance_controlled_disparity = dis_txcompliance
# tx_fast_pld_reg = dis_tx_fast_pld_reg
# txclk_freerun = en_freerun_tx
# txpcs_urst = en_txpcs_urst
# 
# 
# ================================================
# Module twentynm_hssi_common_pcs_pma_interface
# ================================================
# asn_clk_enable = false
# asn_enable = dis_asn
# block_sel = eight_g_pcs
# bypass_early_eios = true
# bypass_pcie_switch = true
# bypass_pma_ltr = true
# bypass_pma_sw_done = false
# bypass_ppm_lock = false
# bypass_send_syncp_fbkp = true
# bypass_txdetectrx = true
# cdr_control = dis_cdr_ctrl
# cid_enable = dis_cid_mode
# cp_cons_sel = cp_cons_master
# cp_dwn_mstr = true
# cp_up_mstr = true
# ctrl_plane_bonding = individual
# data_mask_count = 0000
# data_mask_count_multi = 0
# dft_observation_clock_selection = dft_clk_obsrv_tx0
# early_eios_counter = 00
# force_freqdet = force_freqdet_dis
# free_run_clk_enable = false
# ignore_sigdet_g23 = false
# pc_en_counter = 00
# pc_rst_counter = 00
# pcie_hip_mode = hip_disable
# ph_fifo_reg_mode = phfifo_reg_mode_dis
# phfifo_flush_wait = 00
# pipe_if_g3pcs = pipe_if_8gpcs
# pma_done_counter = 00000
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# ppm_cnt_rst = ppm_cnt_rst_dis
# ppm_deassert_early = deassert_early_dis
# ppm_det_buckets = ppm_300_100_bucket
# ppm_gen1_2_cnt = cnt_32k
# ppm_post_eidle_delay = cnt_200_cycles
# ppmsel = ppmsel_300
# prot_mode = other_protocols
# reconfig_settings = {}
# rxvalid_mask = rxvalid_mask_dis
# sigdet_wait_counter = 000
# sigdet_wait_counter_multi = 0
# silicon_rev = 20nm5
# sim_mode = disable
# spd_chg_rst_wait_cnt_en = false
# sup_mode = user_mode
# testout_sel = ppm_det_test
# wait_clk_on_off_timer = 0
# wait_pipe_synchronizing = 00
# wait_send_syncp_fbkp = 000
# 
# 
# ================================================
# Module twentynm_hssi_common_pld_pcs_interface
# ================================================
# dft_clk_out_en = dft_clk_out_disable
# dft_clk_out_sel = teng_rx_dft_clk
# hrdrstctrl_en = hrst_dis
# pcs_testbus_block_sel = pma_if
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_rx_pcs
# ================================================
# double_read_mode = double_read_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_tx_pcs
# ================================================
# double_write_mode = double_write_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_gen3_rx_pcs
# ================================================
# block_sync = bypass_block_sync
# block_sync_sm = disable_blk_sync_sm
# cdr_ctrl_force_unalgn = disable
# lpbk_force = lpbk_frce_dis
# mode = disable_pcs
# rate_match_fifo = bypass_rm_fifo
# rate_match_fifo_latency = low_latency
# reconfig_settings = {}
# reverse_lpbk = rev_lpbk_dis
# rx_b4gb_par_lpbk = b4gb_par_lpbk_dis
# rx_force_balign = dis_force_balign
# rx_ins_del_one_skip = ins_del_one_skip_dis
# rx_num_fixed_pat = 0
# rx_test_out_sel = rx_test_out0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_gen3_tx_pcs
# ================================================
# mode = disable_pcs
# reverse_lpbk = rev_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_bitslip = 00
# tx_gbox_byp = bypass_gbox
# 
# 
# ================================================
# Module twentynm_hssi_krfec_rx_pcs
# ================================================
# blksync_cor_en = detect
# bypass_gb = bypass_dis
# clr_ctrl = both_enabled
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# dv_start = with_blklock
# err_mark_type = err_mark_10g
# error_marking_en = err_mark_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# parity_invalid_enum = 08
# parity_valid_num = 4
# pipeln_blksync = enable
# pipeln_descrm = disable
# pipeln_errcorrect = disable
# pipeln_errtrap_ind = enable
# pipeln_errtrap_lfsr = disable
# pipeln_errtrap_loc = disable
# pipeln_errtrap_pat = disable
# pipeln_gearbox = enable
# pipeln_syndrm = enable
# pipeln_trans_dec = disable
# prot_mode = disable_mode
# receive_order = receive_lsb
# reconfig_settings = {}
# rx_testbus_sel = overall
# signal_ok_en = sig_ok_en
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_krfec_tx_pcs
# ================================================
# burst_err = burst_err_dis
# burst_err_len = burst_err_len1
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# enc_frame_query = enc_query_dis
# low_latency_en = disable
# pipeln_encoder = enable
# pipeln_scrambler = enable
# prot_mode = disable_mode
# silicon_rev = 20nm5
# sup_mode = user_mode
# transcode_err = trans_err_dis
# transmit_order = transmit_lsb
# tx_testbus_sel = overall
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen1_2
# ================================================
# elec_idle_delay_val = 0
# error_replace_pad = replace_edb
# hip_mode = dis_hip
# ind_error_reporting = dis_ind_error_reporting
# phystatus_delay_val = 0
# phystatus_rst_toggle = dis_phystatus_rst_toggle
# pipe_byte_de_serializer_en = dont_care_bds
# prot_mode = basic
# reconfig_settings = {}
# rpre_emph_a_val = 00
# rpre_emph_b_val = 00
# rpre_emph_c_val = 00
# rpre_emph_d_val = 00
# rpre_emph_e_val = 00
# rvod_sel_a_val = 00
# rvod_sel_b_val = 00
# rvod_sel_c_val = 00
# rvod_sel_d_val = 00
# rvod_sel_e_val = 00
# rx_pipe_enable = dis_pipe_rx
# rxdetect_bypass = dis_rxdetect_bypass
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_pipe_enable = dis_pipe_tx
# txswing = dis_txswing
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen3
# ================================================
# bypass_rx_detection_enable = false
# bypass_rx_preset = 0
# bypass_rx_preset_enable = false
# bypass_tx_coefficent = 00000
# bypass_tx_coefficent_enable = false
# elecidle_delay_g3 = 0
# ind_error_reporting = dis_ind_error_reporting
# mode = disable_pcs
# phy_status_delay_g12 = 0
# phy_status_delay_g3 = 0
# phystatus_rst_toggle_g12 = dis_phystatus_rst_toggle
# phystatus_rst_toggle_g3 = dis_phystatus_rst_toggle_g3
# rate_match_pad_insertion = dis_rm_fifo_pad_ins
# silicon_rev = 20nm5
# sup_mode = user_mode
# test_out_sel = disable_test_out
# 
# 
# ================================================
# Module twentynm_hssi_rx_pcs_pma_interface
# ================================================
# block_sel = eight_g_pcs
# channel_operation_mode = tx_rx_pair_enabled
# clkslip_sel = pld
# lpbk_en = disable
# master_clk_sel = master_rx_pma_clk
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_rx = pma_20b_rx
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_ver = prbs_off
# prot_mode_rx = eightg_basic_mode_rx
# reconfig_settings = {}
# rx_dyn_polarity_inversion = rx_dyn_polinv_dis
# rx_lpbk_en = lpbk_dis
# rx_prbs_force_signal_ok = force_sig_ok
# rx_prbs_mask = prbsmask128
# rx_prbs_mode = teng_mode
# rx_signalok_signaldet_sel = sel_sig_det
# rx_static_polarity_inversion = rx_stat_polinv_dis
# rx_uhsif_lpbk_en = uhsif_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_rx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_rx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_rx = individual_rx
# hd_10g_fifo_mode_rx = fifo_rx
# hd_10g_low_latency_en_rx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_rx = pma_64b_rx
# hd_10g_prot_mode_rx = disabled_prot_mode_rx
# hd_10g_shared_fifo_width_rx = single_rx
# hd_10g_sup_mode = user_mode
# hd_10g_test_bus_mode = rx
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_rx = individual_rx
# hd_8g_fifo_mode_rx = fifo_rx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_rx = pma_20b_rx
# hd_8g_prot_mode_rx = basic_rm_disable_rx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_clklow_clk_hz = 09502f90
# hd_chnl_ctrl_plane_bonding_rx = individual_rx
# hd_chnl_fref_clk_hz = 09502f90
# hd_chnl_frequency_rules_en = disable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_rx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_operating_voltage = standard
# hd_chnl_pcs_ac_pwr_rules_en = disable
# hd_chnl_pcs_pair_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_pwr_scaling_clk = pma_rx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_rx = fifo_rx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_rx_clk_hz = 09502f90
# hd_chnl_pma_dw_rx = pma_20b_rx
# hd_chnl_pma_rx_clk_hz = 09502f90
# hd_chnl_prot_mode_rx = basic_8gpcs_rm_disable_rx
# hd_chnl_shared_fifo_width_rx = single_rx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_chnl_transparent_pcs_rx = disable
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_rx = non_teng_mode_rx
# hd_fifo_shared_fifo_width_rx = single_rx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_rx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_rx = disabled_prot_mode_rx
# hd_krfec_sup_mode = user_mode
# hd_krfec_test_bus_mode = tx
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_rx = eightg_and_g3_pld_fifo_mode_rx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_rx = pma_20b_rx
# hd_pmaif_prot_mode_rx = eightg_basic_mode_rx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_rx_block_sel = eightg
# pcs_rx_clk_out_sel = eightg_clk_out
# pcs_rx_clk_sel = pld_rx_clk
# pcs_rx_hip_clk_en = hip_rx_disable
# pcs_rx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_tx_pcs_pma_interface
# ================================================
# bypass_pma_txelecidle = true
# channel_operation_mode = tx_rx_pair_enabled
# lpbk_en = disable
# master_clk_sel = master_tx_pma_clk
# pcie_sub_prot_mode_tx = other_prot_mode
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_tx = pma_20b_tx
# pma_if_dft_en = dft_dis
# pmagate_en = pmagate_dis
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_gen_pat = prbs_gen_dis
# prot_mode_tx = eightg_basic_mode_tx
# reconfig_settings = {}
# silicon_rev = 20nm5
# sq_wave_num = sq_wave_default
# sqwgen_clken = sqwgen_clk_dis
# sup_mode = user_mode
# tx_dyn_polarity_inversion = tx_dyn_polinv_dis
# tx_pma_data_sel = eight_g_pcs
# tx_static_polarity_inversion = tx_stat_polinv_dis
# uhsif_cnt_step_filt_before_lock = uhsif_filt_stepsz_b4lock_2
# uhsif_cnt_thresh_filt_after_lock_value = 0
# uhsif_cnt_thresh_filt_before_lock = uhsif_filt_cntthr_b4lock_8
# uhsif_dcn_test_update_period = uhsif_dcn_test_period_4
# uhsif_dcn_testmode_enable = uhsif_dcn_test_mode_disable
# uhsif_dead_zone_count_thresh = uhsif_dzt_cnt_thr_2
# uhsif_dead_zone_detection_enable = uhsif_dzt_disable
# uhsif_dead_zone_obser_window = uhsif_dzt_obr_win_16
# uhsif_dead_zone_skip_size = uhsif_dzt_skipsz_4
# uhsif_delay_cell_index_sel = uhsif_index_cram
# uhsif_delay_cell_margin = uhsif_dcn_margin_2
# uhsif_delay_cell_static_index_value = 00
# uhsif_dft_dead_zone_control = uhsif_dft_dz_det_val_0
# uhsif_dft_up_filt_control = uhsif_dft_up_val_0
# uhsif_enable = uhsif_disable
# uhsif_lock_det_segsz_after_lock = uhsif_lkd_segsz_aflock_512
# uhsif_lock_det_segsz_before_lock = uhsif_lkd_segsz_b4lock_16
# uhsif_lock_det_thresh_cnt_after_lock_value = 0
# uhsif_lock_det_thresh_cnt_before_lock_value = 0
# uhsif_lock_det_thresh_diff_after_lock_value = 0
# uhsif_lock_det_thresh_diff_before_lock_value = 0
# 
# 
# ================================================
# Module twentynm_hssi_tx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_tx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_tx = ctrl_slave_blw_tx
# hd_10g_fifo_mode_tx = fifo_tx
# hd_10g_low_latency_en_tx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_tx = pma_64b_tx
# hd_10g_prot_mode_tx = disabled_prot_mode_tx
# hd_10g_shared_fifo_width_tx = single_tx
# hd_10g_sup_mode = user_mode
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_tx = ctrl_slave_blw_tx
# hd_8g_fifo_mode_tx = fifo_tx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_tx = pma_20b_tx
# hd_8g_prot_mode_tx = basic_tx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_ctrl_plane_bonding_tx = ctrl_slave_blw_tx
# hd_chnl_frequency_rules_en = enable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_tx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_pcs_tx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_tx_pwr_scaling_clk = pma_tx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_tx = fifo_tx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_tx_clk_hz = 09502f90
# hd_chnl_pld_uhsif_tx_clk_hz = 00000000
# hd_chnl_pma_dw_tx = pma_20b_tx
# hd_chnl_pma_tx_clk_hz = 09502f90
# hd_chnl_prot_mode_tx = basic_8gpcs_tx
# hd_chnl_shared_fifo_width_tx = single_tx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_tx = non_teng_mode_tx
# hd_fifo_shared_fifo_width_tx = single_tx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_tx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_tx = disabled_prot_mode_tx
# hd_krfec_sup_mode = user_mode
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_tx = eightg_and_g3_pld_fifo_mode_tx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_ctrl_plane_bonding = individual
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_tx = pma_20b_tx
# hd_pmaif_prot_mode_tx = eightg_basic_mode_tx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_tx_clk_out_sel = eightg_clk_out
# pcs_tx_clk_source = eightg
# pcs_tx_data_source = hip_disable
# pcs_tx_delay1_clk_en = delay1_clk_disable
# pcs_tx_delay1_clk_sel = pcs_tx_clk
# pcs_tx_delay1_ctrl = delay1_path0
# pcs_tx_delay1_data_sel = one_ff_delay
# pcs_tx_delay2_clk_en = delay2_clk_disable
# pcs_tx_delay2_ctrl = delay2_path0
# pcs_tx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_pma_adaptation
# ================================================
# adapt_dfe_control_sel = r_adapt_dfe_control_sel_0
# adapt_dfe_sel = r_adapt_dfe_sel_0
# adapt_mode = manual
# adapt_vga_sel = r_adapt_vga_sel_0
# adapt_vref_sel = r_adapt_vref_sel_0
# adp_1s_ctle_bypass = radp_1s_ctle_bypass_0
# adp_4s_ctle_bypass = radp_4s_ctle_bypass_0
# adp_adapt_control_sel = radp_adapt_control_sel_0
# adp_adapt_rstn = radp_adapt_rstn_1
# adp_adapt_start = radp_adapt_start_0
# adp_bist_auxpath_en = radp_bist_auxpath_disable
# adp_bist_count_rstn = radp_bist_count_rstn_0
# adp_bist_datapath_en = radp_bist_datapath_disable
# adp_bist_mode = radp_bist_mode_0
# adp_bist_odi_dfe_sel = radp_bist_odi_dfe_sel_0
# adp_bist_spec_en = radp_bist_spec_en_0
# adp_control_mux_bypass = radp_control_mux_bypass_0
# adp_ctle_acgain_4s = radp_ctle_acgain_4s_0
# adp_ctle_adapt_bw = radp_ctle_adapt_bw_3
# adp_ctle_adapt_cycle_window = radp_ctle_adapt_cycle_window_6
# adp_ctle_adapt_oneshot = radp_ctle_adapt_oneshot_1
# adp_ctle_en = radp_ctle_disable
# adp_ctle_eqz_1s_sel = radp_ctle_eqz_1s_sel_0
# adp_ctle_force_spec_sign = radp_ctle_force_spec_sign_0
# adp_ctle_hold_en = radp_ctle_not_held
# adp_ctle_load = radp_ctle_load_0
# adp_ctle_load_value = radp_ctle_load_value_0
# adp_ctle_scale = radp_ctle_scale_0
# adp_ctle_scale_en = radp_ctle_scale_en_0
# adp_ctle_spec_sign = radp_ctle_spec_sign_0
# adp_ctle_sweep_direction = radp_ctle_sweep_direction_1
# adp_ctle_threshold = radp_ctle_threshold_0
# adp_ctle_threshold_en = radp_ctle_threshold_en_0
# adp_ctle_vref_polarity = radp_ctle_vref_polarity_0
# adp_ctle_window = radp_ctle_window_0
# adp_dfe_bw = radp_dfe_bw_3
# adp_dfe_clkout_div_sel = radp_dfe_clkout_div_sel_0
# adp_dfe_cycle = radp_dfe_cycle_6
# adp_dfe_fltap1 = radp_dfe_fltap1_0
# adp_dfe_fltap1_sgn = radp_dfe_fltap1_sgn_0
# adp_dfe_fltap2 = radp_dfe_fltap2_0
# adp_dfe_fltap2_sgn = radp_dfe_fltap2_sgn_0
# adp_dfe_fltap3 = radp_dfe_fltap3_0
# adp_dfe_fltap3_sgn = radp_dfe_fltap3_sgn_0
# adp_dfe_fltap4 = radp_dfe_fltap4_0
# adp_dfe_fltap4_sgn = radp_dfe_fltap4_sgn_0
# adp_dfe_fltap_bypass = radp_dfe_fltap_bypass_0
# adp_dfe_fltap_en = radp_dfe_fltap_disable
# adp_dfe_fltap_hold_en = radp_dfe_fltap_not_held
# adp_dfe_fltap_load = radp_dfe_fltap_load_0
# adp_dfe_fltap_position = radp_dfe_fltap_position_0
# adp_dfe_force_spec_sign = radp_dfe_force_spec_sign_0
# adp_dfe_fxtap1 = radp_dfe_fxtap1_0
# adp_dfe_fxtap2 = radp_dfe_fxtap2_0
# adp_dfe_fxtap2_sgn = radp_dfe_fxtap2_sgn_0
# adp_dfe_fxtap3 = radp_dfe_fxtap3_0
# adp_dfe_fxtap3_sgn = radp_dfe_fxtap3_sgn_0
# adp_dfe_fxtap4 = radp_dfe_fxtap4_0
# adp_dfe_fxtap4_sgn = radp_dfe_fxtap4_sgn_0
# adp_dfe_fxtap5 = radp_dfe_fxtap5_0
# adp_dfe_fxtap5_sgn = radp_dfe_fxtap5_sgn_0
# adp_dfe_fxtap6 = radp_dfe_fxtap6_0
# adp_dfe_fxtap6_sgn = radp_dfe_fxtap6_sgn_0
# adp_dfe_fxtap7 = radp_dfe_fxtap7_0
# adp_dfe_fxtap7_sgn = radp_dfe_fxtap7_sgn_0
# adp_dfe_fxtap_bypass = radp_dfe_fxtap_bypass_0
# adp_dfe_fxtap_en = radp_dfe_fxtap_disable
# adp_dfe_fxtap_hold_en = radp_dfe_fxtap_not_held
# adp_dfe_fxtap_load = radp_dfe_fxtap_load_0
# adp_dfe_mode = radp_dfe_mode_0
# adp_dfe_spec_sign = radp_dfe_spec_sign_0
# adp_dfe_vref_polarity = radp_dfe_vref_polarity_0
# adp_force_freqlock = radp_force_freqlock_off
# adp_frame_capture = radp_frame_capture_0
# adp_frame_en = radp_frame_en_0
# adp_frame_odi_sel = radp_frame_odi_sel_0
# adp_frame_out_sel = radp_frame_out_sel_0
# adp_lfeq_fb_sel = radp_lfeq_fb_sel_0
# adp_mode = radp_mode_0
# adp_odi_control_sel = radp_odi_control_sel_0
# adp_onetime_dfe = radp_onetime_dfe_1
# adp_spec_avg_window = radp_spec_avg_window_4
# adp_spec_trans_filter = radp_spec_trans_filter_2
# adp_status_sel = radp_status_sel_0
# adp_vga_bypass = radp_vga_bypass_0
# adp_vga_en = radp_vga_disable
# adp_vga_load = radp_vga_load_0
# adp_vga_polarity = radp_vga_polarity_0
# adp_vga_sel = radp_vga_sel_0
# adp_vga_sweep_direction = radp_vga_sweep_direction_1
# adp_vga_threshold = radp_vga_threshold_4
# adp_vref_bw = radp_vref_bw_1
# adp_vref_bypass = radp_vref_bypass_0
# adp_vref_cycle = radp_vref_cycle_6
# adp_vref_dfe_spec_en = radp_vref_dfe_spec_en_0
# adp_vref_en = radp_vref_disable
# adp_vref_hold_en = radp_vref_not_held
# adp_vref_load = radp_vref_load_0
# adp_vref_polarity = radp_vref_polarity_0
# adp_vref_sel = radp_vref_sel_21
# adp_vref_vga_level = radp_vref_vga_level_13
# datarate = 3125000000 bps
# initial_settings = true
# odi_count_threshold = rodi_count_threshold_0
# odi_dfe_spec_en = rodi_dfe_spec_en_0
# odi_en = rodi_en_0
# odi_mode = rodi_mode_0
# odi_rstn = rodi_rstn_0
# odi_spec_sel = rodi_spec_sel_0
# odi_start = rodi_start_0
# odi_vref_sel = rodi_vref_sel_0
# optimal = false
# prot_mode = basic_rx
# rrx_pcie_eqz = rrx_pcie_eqz_0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_cdr_refclk_select_mux
# ================================================
# local_cdr_clkin_scratch0_src = cdr_clkin_scratch0_src_refclk_iqclk
# local_cdr_clkin_scratch1_src = cdr_clkin_scratch1_src_refclk_iqclk
# local_cdr_clkin_scratch2_src = cdr_clkin_scratch2_src_refclk_iqclk
# local_cdr_clkin_scratch3_src = cdr_clkin_scratch3_src_refclk_iqclk
# local_cdr_clkin_scratch4_src = cdr_clkin_scratch4_src_refclk_iqclk
# inclk0_logical_to_physical_mapping = ref_iqclk0
# inclk1_logical_to_physical_mapping = ref_iqclk1
# inclk2_logical_to_physical_mapping = ref_iqclk2
# inclk3_logical_to_physical_mapping = ref_iqclk3
# inclk4_logical_to_physical_mapping = ref_iqclk4
# powerdown_mode = powerup
# receiver_detect_src = iqclk_src
# refclk_select = ref_iqclk0
# silicon_rev = 20nm5
# local_xmux_refclk_src = refclk_iqclk
# local_xpm_iqref_mux_iqclk_sel = ref_iqclk0
# local_xpm_iqref_mux_scratch0_src = scratch0_ref_iqclk0
# local_xpm_iqref_mux_scratch1_src = scratch1_ref_iqclk1
# local_xpm_iqref_mux_scratch2_src = scratch2_ref_iqclk2
# local_xpm_iqref_mux_scratch3_src = scratch3_ref_iqclk3
# local_xpm_iqref_mux_scratch4_src = scratch4_ref_iqclk4
# 
# 
# ================================================
# Module twentynm_hssi_pma_channel_pll
# ================================================
# analog_mode = user_custom
# atb_select_control = atb_off
# auto_reset_on = auto_reset_off
# bandwidth_range_high = 0 hz
# bandwidth_range_low = 0 hz
# bbpd_data_pattern_filter_select = bbpd_data_pat_off
# bw_sel = medium
# cdr_odi_select = sel_cdr
# cdr_phaselock_mode = no_ignore_lock
# cdr_powerdown_mode = power_up
# cgb_div =           1
# chgpmp_current_pd = cp_current_pd_setting2
# chgpmp_current_pfd = cp_current_pfd_setting3
# chgpmp_replicate = false
# chgpmp_testmode = cp_test_disable
# clklow_mux_select = clklow_mux_cdr_fbclk
# datarate = 3125000000 bps
# diag_loopback_enable = false
# disable_up_dn = true
# f_max_pfd = 0 hz
# f_max_ref = 0 hz
# f_max_vco = 0 hz
# f_min_gt_channel = 0 hz
# f_min_pfd = 0 hz
# f_min_ref = 0 hz
# f_min_vco = 0 hz
# fb_select = direct_fb
# fref_clklow_div =           1
# fref_mux_select = fref_mux_cdr_refclk
# gpon_lck2ref_control = gpon_lck2ref_off
# initial_settings = true
# iqclk_mux_sel = power_down
# is_cascaded_pll = false
# lck2ref_delay_control = lck2ref_delay_2
# lf_resistor_pd = lf_pd_setting0
# lf_resistor_pfd = lf_pfd_setting2
# lf_ripple_cap = lf_no_ripple
# loop_filter_bias_select = lpflt_bias_off
# loopback_mode = loopback_disabled
# lpd_counter = 04
# lpfd_counter = 08
# ltd_ltr_micro_controller_select = ltd_ltr_pcs
# m_counter =          10
# n_counter_scratch =  2
# n_counter_scratch = 02
# optimal = false
# output_clock_frequency = 1562500000 Hz
# pcie_gen = non_pcie
# pd_fastlock_mode = false
# pd_l_counter =           4
# pfd_l_counter =           8
# pm_speed_grade = e2
# pma_width =          20
# position = position_unknown
# power_mode = low_power
# primary_use = cdr
# prot_mode = basic_rx
# reference_clock_frequency = 156250000 hz
# requires_gt_capable_channel = false
# reverse_serial_loopback = no_loopback
# set_cdr_v2i_enable = true
# set_cdr_vco_reset = false
# set_cdr_vco_speed = 07
# set_cdr_vco_speed_fix = 06
# set_cdr_vco_speed_pciegen3 = cdr_vco_max_speedbin_pciegen3
# side = side_unknown
# silicon_rev = 20nm5
# sup_mode = user_mode
# top_or_bottom = tb_unknown
# tx_pll_prot_mode = txpll_unused
# txpll_hclk_driver_enable = false
# uc_cru_rstb = cdr_lf_reset_off
# uc_ro_cal = uc_ro_cal_on
# uc_ro_cal_status = uc_ro_cal_notdone
# vco_freq = 6250000000 Hz
# vco_overrange_voltage = vco_overrange_off
# vco_underrange_voltage = vco_underange_off
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_buf
# ================================================
# act_isource_disable = isrc_en
# bodybias_enable = bodybias_en
# bodybias_select = bodybias_sel1
# bypass_eqz_stages_234 = bypass_off
# cdrclk_to_cgb = cdrclk_2cgb_dis
# cgm_bias_disable = cgmbias_en
# datarate = 3125000000 bps
# diag_lp_en = dlp_off
# eq_bw_sel = eq_bw_1
# eq_dc_gain_trim = no_dc_gain
# xrx_path_initial_settings = true
# input_vcm_sel = high_vcm
# iostandard = hssi_diffio
# lfeq_enable = non_lfeq_mode
# lfeq_zero_control = lfeq_setting_2
# link_rx = sr
# link_rx = sr
# loopback_modes = lpbk_disable
# offset_cal_pd = eqz1_en
# offset_cancellation_coarse = coarse_setting_00
# offset_cancellation_ctrl = volt_0mv
# offset_cancellation_fine = fine_setting_00
# offset_pd = oc_en
# one_stage_enable = non_s1_mode
# xrx_path_optimal = false
# pdb_rx = normal_rx_on
# pm_speed_grade = e2
# pm_tx_rx_cvp_mode = cvp_off
# pm_tx_rx_pcie_gen = non_pcie
# pm_tx_rx_pcie_gen_bitwidth = pcie_gen3_32b
# pm_tx_rx_testmux_select = setting0
# power_mode_rx = low_power
# power_mode_rx = low_power
# power_rail_eht =           0
# power_rail_er =           0
# xrx_path_prot_mode = basic_rx
# qpi_enable = non_qpi_mode
# refclk_en = disable
# rx_atb_select = atb_disable
# rx_refclk_divider = bypass_divider
# rx_sel_bias_source = bias_vcmdrv
# silicon_rev = 20nm5
# xrx_path_sup_mode = user_mode
# term_sel = r_r1
# term_tri_enable = disable_tri
# vccela_supply_voltage = vccela_1p1v
# vcm_current_add = vcm_current_default
# vcm_sel = vcm_setting_10
# vga_bandwidth_select = vga_bw_1
# xrx_path_analog_mode = user_custom
# xrx_path_datarate = 3125000000 bps
# xrx_path_datawidth = 14
# xrx_path_gt_enabled = disable
# xrx_path_initial_settings = true
# xrx_path_jtag_hys = hys_increase_disable
# xrx_path_jtag_lp = lp_off
# xrx_path_optimal = false
# xrx_path_pma_rx_divclk_hz_bin = 0000000009502f90
# xrx_path_prot_mode = basic_rx
# xrx_path_sup_mode = user_mode
# xrx_path_uc_cal_enable = rx_cal_off
# xrx_path_uc_cru_rstb = cdr_lf_reset_off
# xrx_path_uc_pcie_sw = uc_pcie_gen1
# xrx_path_uc_rx_rstb = rx_reset_on
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_deser
# ================================================
# bitslip_bypass = bs_bypass_yes
# clkdiv_source = vco_bypass_normal
# clkdivrx_user_mode = clkdivrx_user_disabled
# datarate = 3125000000 bps
# deser_factor =          20
# deser_powerdown = deser_power_up
# force_adaptation_outputs = normal_outputs
# force_clkdiv_for_testing = normal_clkdiv
# optimal = false
# pcie_gen = non_pcie
# pcie_gen_bitwidth = pcie_gen3_32b
# prot_mode = basic_rx
# rst_n_adapt_odi = no_rst_adapt_odi
# sdclk_enable = false
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_dfe
# ================================================
# atb_select = atb_disable
# datarate = 3125000000 bps
# dft_en = dft_disable
# initial_settings = true
# oc_sa_adp1 = 00
# oc_sa_adp2 = 00
# oc_sa_c270 = 00
# oc_sa_c90 = 00
# oc_sa_d0c0 = 00
# oc_sa_d0c180 = 00
# oc_sa_d1c0 = 00
# oc_sa_d1c180 = 00
# optimal = false
# pdb = 6466655f656e61626c65
# pdb_fixedtap = fixtap_dfe_powerdown
# pdb_floattap = floattap_dfe_powerdown
# pdb_fxtap4t7 = fxtap4t7_powerdown
# power_mode = low_power
# prot_mode = basic_rx
# sel_fltapstep_dec = fltap_step_no_dec
# sel_fltapstep_inc = fltap_step_no_inc
# sel_fxtapstep_dec = fxtap_step_no_dec
# sel_fxtapstep_inc = fxtap_step_no_inc
# sel_oc_en = off_canc_disable
# sel_probe_tstmx = probe_tstmx_none
# silicon_rev = 20nm5
# sup_mode = user_mode
# uc_rx_dfe_cal = uc_rx_dfe_cal_off
# uc_rx_dfe_cal_status = uc_rx_dfe_cal_notdone
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_odi
# ================================================
# clk_dcd_bypass = no_bypass
# datarate = 3125000000 bps
# enable_odi = power_down_eye
# initial_settings = true
# invert_dfe_vref = no_inversion
# monitor_bw_sel = bw_1
# oc_sa_c0 = 00
# oc_sa_c180 = 00
# optimal = false
# phase_steps_64_vs_128 = phase_steps_64
# phase_steps_sel = step40
# power_mode = low_power
# prot_mode = basic_rx
# sel_oc_en = off_canc_disable
# silicon_rev = 20nm5
# step_ctrl_sel = feedback_mode
# sup_mode = user_mode
# v_vert_sel = plus
# v_vert_threshold_scaling = scale_3
# vert_threshold = vert_0
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_sd
# ================================================
# link = sr
# optimal = false
# power_mode = low_power
# prot_mode = basic_rx
# sd_output_off =           1
# sd_output_on =          15
# sd_pdb = sd_off
# sd_threshold =           3
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_buf
# ================================================
# xtx_path_calibration_en = false
# compensation_driver_en = disable
# compensation_en = enable
# cpen_ctrl = cp_l0
# datarate = 3125000000 bps
# dcd_detection_en = enable
# dft_sel = dft_disabled
# duty_cycle_correction_bandwidth = dcc_bw_12
# duty_cycle_correction_mode_ctrl = dcc_disable
# duty_cycle_correction_reference1 = dcc_ref1_3
# duty_cycle_correction_reference2 = dcc_ref2_3
# duty_cycle_correction_reset_n = reset_n
# duty_cycle_input_polarity = dcc_input_pos
# duty_cycle_setting = dcc_t32
# duty_cycle_setting_aux = dcc2_t32
# xtx_path_initial_settings = true
# jtag_drv_sel = drv1
# jtag_lp = lp_off
# link_tx = sr
# link_tx = sr
# low_power_en = disable
# lst = 6174625f64697361626c6564
# mcgb_location_for_pcie = 9
# xtx_path_optimal = false
# pm_speed_grade = e2
# power_mode = low_power
# power_rail_eht =           0
# power_rail_et =           0
# pre_emp_sign_1st_post_tap = fir_post_1t_neg
# pre_emp_sign_2nd_post_tap = fir_post_2t_neg
# pre_emp_sign_pre_tap_1t = fir_pre_1t_neg
# pre_emp_sign_pre_tap_2t = fir_pre_2t_neg
# pre_emp_switching_ctrl_1st_post_tap = 00
# pre_emp_switching_ctrl_2nd_post_tap = 0
# pre_emp_switching_ctrl_pre_tap_1t = 00
# pre_emp_switching_ctrl_pre_tap_2t = 0
# xtx_path_prot_mode = basic_tx
# res_cal_local = non_local
# rx_det = mode_0
# rx_det_output_sel = rx_det_pcie_out
# rx_det_pdb = rx_det_off
# ser_powerdown = normal_ser_on
# silicon_rev = 20nm5
# slew_rate_ctrl = slew_r7
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# term_code = rterm_code7
# term_n_tune = rterm_n0
# term_p_tune = rterm_p0
# term_sel = r_r1
# tx_powerdown = normal_tx_on
# uc_dcd_cal = uc_dcd_cal_off
# uc_dcd_cal_status = uc_dcd_cal_notdone
# uc_gen3 = gen3_off
# uc_gen4 = gen4_off
# uc_skew_cal = uc_skew_cal_off
# uc_skew_cal_status = uc_skew_cal_notdone
# uc_txvod_cal = uc_tx_vod_cal_off
# uc_txvod_cal_cont = uc_tx_vod_cal_cont_off
# uc_txvod_cal_status = uc_tx_vod_cal_notdone
# uc_vcc_setting = vcc_setting0
# user_fir_coeff_ctrl_sel = ram_ctl
# vod_output_swing_ctrl = 00
# vreg_output = vccdreg_nominal
# xtx_path_analog_mode = user_custom
# xtx_path_bonding_mode = x1_non_bonded
# xtx_path_calibration_en = false
# xtx_path_clock_divider_ratio = 1
# xtx_path_datarate = 3125000000 bps
# xtx_path_datawidth = 14
# xtx_path_gt_enabled = disable
# xtx_path_initial_settings = true
# xtx_path_optimal = false
# xtx_path_pma_tx_divclk_hz_bin = 0000000009502f90
# xtx_path_prot_mode = basic_tx
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# xtx_path_tx_pll_clk_hz = 1562500000
# 
# ================ INPUT =================
# prot_mode           = basic_tx
# input_select_x1     = unused
# input_select_xn     = sel_x6_dn
# input_select_gen3   = unused
# ================ OUTPUT ================
# x1_clock_source_sel = same_ch_txpll
# xn_clock_source_sel = sel_x6_bot
# ================ END ===================
# 
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_cgb
# ================================================
# bitslip_enable = disable_bitslip
# bonding_mode = x1_non_bonded
# bonding_reset_enable = disallow_bonding_reset
# cgb_power_down = normal_cgb
# datarate = 3125000000 bps
# dprio_cgb_vreg_boost = no_voltage_boost
# initial_settings = true
# input_select_gen3 = unused
# input_select_x1 = unused
# input_select_xn = sel_x6_dn
# observe_cgb_clocks = observe_nothing
# pcie_gen3_bitwidth = pciegen3_wide
# prot_mode = basic_tx
# scratch0_x1_clock_src = unused
# scratch1_x1_clock_src = unused
# scratch2_x1_clock_src = unused
# scratch3_x1_clock_src = unused
# select_done_master_or_slave = choose_master_pcie_sw_done
# ser_mode = twenty_bit
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_ucontrol_en = disable
# tx_ucontrol_pcie = gen1
# tx_ucontrol_reset = disable
# vccdreg_output = vccdreg_nominal
# local_x1_clock_source_sel = same_ch_txpll
# x1_div_m_sel = divbypass
# local_xn_clock_source_sel = sel_x6_bot
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_ser
# ================================================
# bonding_mode = x1_non_bonded
# clk_divtx_deskew = deskew_delay8
# control_clk_divtx = no_dft_control_clkdivtx
# duty_cycle_correction_mode_ctrl = dcc_disable
# initial_settings = true
# prot_mode = basic_tx
# ser_clk_divtx_user_sel = divtx_user_off
# ser_clk_mon = disable_clk_mon
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_10g_rx_pcs
# ================================================
# advanced_user_mode = disable
# align_del = align_del_dis
# ber_bit_err_total_cnt = bit_err_total_cnt_10g
# ber_clken = ber_clk_dis
# ber_xus_timer_window = 004c4a
# bitslip_mode = bitslip_dis
# blksync_bitslip_type = bitslip_comb
# blksync_bitslip_wait_cnt = 1
# blksync_bitslip_wait_type = bitslip_cnt
# blksync_bypass = blksync_bypass_en
# blksync_clken = blksync_clk_dis
# blksync_enum_invalid_sh_cnt = enum_invalid_sh_cnt_10g
# blksync_knum_sh_cnt_postlock = knum_sh_cnt_postlock_10g
# blksync_knum_sh_cnt_prelock = knum_sh_cnt_prelock_10g
# blksync_pipeln = blksync_pipeln_dis
# clr_errblk_cnt_en = disable
# control_del = control_del_none
# crcchk_bypass = crcchk_bypass_en
# crcchk_clken = crcchk_clk_dis
# crcchk_inv = crcchk_inv_en
# crcchk_pipeln = crcchk_pipeln_en
# crcflag_pipeln = crcflag_pipeln_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# data_bit_reverse = data_bit_reverse_dis
# dec64b66b_clken = dec64b66b_clk_dis
# dec_64b66b_rxsm_bypass = dec_64b66b_rxsm_bypass_en
# descrm_bypass = descrm_bypass_en
# descrm_clken = descrm_clk_dis
# descrm_mode = async
# descrm_pipeln = enable
# dft_clk_out_sel = rx_master_clk
# dis_signal_ok = dis_signal_ok_en
# dispchk_bypass = dispchk_bypass_en
# empty_flag_type = empty_rd_side
# fast_path = fast_path_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_read = fifo_double_read_dis
# fifo_stop_rd = n_rd_empty
# fifo_stop_wr = n_wr_full
# force_align = force_align_dis
# frmsync_bypass = frmsync_bypass_en
# frmsync_clken = frmsync_clk_dis
# frmsync_enum_scrm = enum_scrm_default
# frmsync_enum_sync = enum_sync_default
# frmsync_flag_type = location_only
# frmsync_knum_sync = knum_sync_default
# frmsync_mfrm_length = 0800
# frmsync_pipeln = frmsync_pipeln_en
# full_flag_type = full_wr_side
# gb_rx_idwidth = width_64
# gb_rx_odwidth = width_64
# gbexp_clken = gbexp_clk_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# master_clk_sel = master_rx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# rand_clken = rand_clk_dis
# rd_clk_sel = rd_rx_pld_clk
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# rx_fifo_write_ctrl = blklock_stops
# rx_scrm_width = bit64
# rx_sh_location = msb
# rx_signal_ok_sel = synchronized_ver
# rx_sm_bypass = rx_sm_bypass_en
# rx_sm_hiber = rx_sm_hiber_en
# rx_sm_pipeln = rx_sm_pipeln_en
# rx_testbus_sel = rx_fifo_testbus1
# rx_true_b2b = b2b
# rxfifo_empty = empty_default
# rxfifo_full = full_default
# rxfifo_mode = phase_comp
# rxfifo_pempty = 02
# rxfifo_pfull = 17
# silicon_rev = 20nm5
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_10g_tx_pcs
# ================================================
# advanced_user_mode = disable
# bitslip_en = bitslip_dis
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# comp_cnt = 02
# compin_sel = compin_slave_bot
# crcgen_bypass = crcgen_bypass_en
# crcgen_clken = crcgen_clk_dis
# crcgen_err = crcgen_err_dis
# crcgen_inv = crcgen_inv_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# ctrl_plane_bonding = ctrl_slave_blw
# data_bit_reverse = data_bit_reverse_dis
# dft_clk_out_sel = tx_master_clk
# dispgen_bypass = dispgen_bypass_en
# dispgen_clken = dispgen_clk_dis
# dispgen_err = dispgen_err_dis
# dispgen_pipeln = dispgen_pipeln_dis
# distdwn_bypass_pipeln = distdwn_bypass_pipeln_dis
# distdwn_master = distdwn_master_dis
# distup_bypass_pipeln = distup_bypass_pipeln_dis
# distup_master = distup_master_dis
# dv_bond = dv_bond_en
# empty_flag_type = empty_rd_side
# enc64b66b_txsm_clken = enc64b66b_txsm_clk_dis
# enc_64b66b_txsm_bypass = enc_64b66b_txsm_bypass_en
# fastpath = fastpath_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_write = fifo_double_write_dis
# fifo_reg_fast = fifo_reg_fast_dis
# fifo_stop_rd = rd_empty
# fifo_stop_wr = n_wr_full
# frmgen_burst = frmgen_burst_dis
# frmgen_bypass = frmgen_bypass_en
# frmgen_clken = frmgen_clk_dis
# frmgen_mfrm_length = 0800
# frmgen_pipeln = frmgen_pipeln_en
# frmgen_pyld_ins = frmgen_pyld_ins_dis
# frmgen_wordslip = frmgen_wordslip_dis
# full_flag_type = full_wr_side
# gb_pipeln_bypass = disable
# gb_tx_idwidth = width_64
# gb_tx_odwidth = width_64
# gbred_clken = gbred_clk_dis
# indv = indv_dis
# low_latency_en = disable
# master_clk_sel = master_tx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# pseudo_random = all_0
# pseudo_seed_a_bin = 03ffffffffffffff
# pseudo_seed_b_bin = 03ffffffffffffff
# random_disp = disable
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# scrm_bypass = scrm_bypass_en
# scrm_clken = scrm_clk_dis
# scrm_mode = async
# scrm_pipeln = enable
# sh_err = sh_err_dis
# silicon_rev = 20nm5
# sop_mark = sop_mark_dis
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# tx_scrm_err = scrm_err_dis
# tx_scrm_width = bit64
# tx_sh_location = msb
# tx_sm_bypass = tx_sm_bypass_en
# tx_sm_pipeln = tx_sm_pipeln_en
# tx_testbus_sel = tx_fifo_testbus1
# txfifo_empty = empty_default
# txfifo_full = full_default
# txfifo_mode = phase_comp
# txfifo_pempty = 2
# txfifo_pfull = b
# wr_clk_sel = wr_tx_pld_clk
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_8g_rx_pcs
# ================================================
# auto_error_replacement = dis_err_replace
# auto_speed_nego = dis_asn
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_deserializer = dis_bds
# cdr_ctrl_rxvalid_mask = dis_rxvalid_mask
# clkcmp_pattern_n = 00000
# clkcmp_pattern_p = 00000
# clock_gate_bds_dec_asn = dis_bds_dec_asn_clk_gating
# clock_gate_cdr_eidle = en_cdr_eidle_clk_gating
# clock_gate_dw_pc_wrclk = dis_dw_pc_wrclk_gating
# clock_gate_dw_rm_rd = en_dw_rm_rdclk_gating
# clock_gate_dw_rm_wr = en_dw_rm_wrclk_gating
# clock_gate_dw_wa = dis_dw_wa_clk_gating
# clock_gate_pc_rdclk = dis_pc_rdclk_gating
# clock_gate_sw_pc_wrclk = dis_sw_pc_wrclk_gating
# clock_gate_sw_rm_rd = en_sw_rm_rdclk_gating
# clock_gate_sw_rm_wr = en_sw_rm_wrclk_gating
# clock_gate_sw_wa = dis_sw_wa_clk_gating
# clock_observation_in_pld_core = internal_sw_wa_clk
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_slave_below
# ctrl_plane_bonding_distribution = not_master_chnl_distr
# eidle_entry_eios = dis_eidle_eios
# eidle_entry_iei = dis_eidle_iei
# eidle_entry_sd = dis_eidle_sd
# eightb_tenb_decoder = dis_8b10b
# err_flags_sel = err_flags_wa
# fixed_pat_det = dis_fixed_patdet
# fixed_pat_num = 0
# force_signal_detect = en_force_signal_detect
# gen3_clk_en = disable_clk
# gen3_rx_clk_sel = rcvd_clk
# gen3_tx_clk_sel = tx_pma_clk
# hip_mode = dis_hip
# ibm_invalid_code = dis_ibm_invalid_code
# invalid_code_flag_only = dis_invalid_code_only
# pad_or_edb_error_replace = replace_edb
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# pipe_if_enable = dis_pipe_rx
# pma_dw = twenty_bit
# polinv_8b10b_dec = dis_polinv_8b10b_dec
# prot_mode = basic_rm_disable
# rate_match = dis_rm
# rate_match_del_thres = dis_rm_del_thres
# rate_match_empty_thres = dis_rm_empty_thres
# rate_match_full_thres = dis_rm_full_thres
# rate_match_ins_thres = dis_rm_ins_thres
# rate_match_start_thres = dis_rm_start_thres
# reconfig_settings = {}
# rx_clk2 = rcvd_clk_clk2
# rx_clk_free_running = en_rx_clk_free_run
# rx_pcs_urst = en_rx_pcs_urst
# rx_rcvd_clk = rcvd_clk_rcvd_clk
# rx_rd_clk = pld_rx_clk
# rx_refclk = dis_refclk_sel
# rx_wr_clk = rx_clk2_div_1_2_4
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# sync_sm_idle_eios = dis_syncsm_idle
# test_bus_sel = tx_testbus
# tx_rx_parallel_loopback = dis_plpbk
# wa_boundary_lock_ctrl = sync_sm
# wa_clk_slip_spacing = 010
# wa_det_latency_sync_status_beh = dont_care_assert_sync
# wa_disp_err_flag = en_disp_err_flag
# wa_kchar = dis_kchar
# wa_pd = wa_pd_20
# wa_pd_data_bin = 00000000000a0d7c
# wa_pd_polarity = en_pd_both_pol
# wa_pld_controlled = dis_pld_ctrl
# wa_renumber_data = 01
# wa_rgnumber_data = 01
# wa_rknumber_data = 01
# wa_rosnumber_data = 0
# wa_rvnumber_data = 0000
# wa_sync_sm_ctrl = dw_basic_sync_sm
# wait_cnt = 000
# 
# 
# ================================================
# Module twentynm_hssi_8g_tx_pcs
# ================================================
# auto_speed_nego_gen2 = dis_asn_g2
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_serializer = dis_bs
# clock_gate_bs_enc = dis_bs_enc_clk_gating
# clock_gate_dw_fifowr = dis_dw_fifowr_clk_gating
# clock_gate_fiford = dis_fiford_clk_gating
# clock_gate_sw_fifowr = dis_sw_fifowr_clk_gating
# clock_observation_in_pld_core = internal_refclk_b
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_slave_below
# ctrl_plane_bonding_distribution = not_master_chnl_distr
# data_selection_8b10b_encoder_input = normal_data_path
# dynamic_clk_switch = dis_dyn_clk_switch
# eightb_tenb_disp_ctrl = dis_disp_ctrl
# eightb_tenb_encoder = dis_8b10b
# force_echar = dis_force_echar
# force_kchar = dis_force_kchar
# gen3_tx_clk_sel = dis_tx_clk
# gen3_tx_pipe_clk_sel = dis_tx_pipe_clk
# hip_mode = dis_hip
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# phfifo_write_clk_sel = pld_tx_clk
# pma_dw = twenty_bit
# prot_mode = basic
# reconfig_settings = {}
# refclk_b_clk_sel = tx_pma_clock
# revloop_back_rm = dis_rev_loopback_rx_rm
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# tx_bitslip = dis_tx_bitslip
# tx_compliance_controlled_disparity = dis_txcompliance
# tx_fast_pld_reg = dis_tx_fast_pld_reg
# txclk_freerun = en_freerun_tx
# txpcs_urst = en_txpcs_urst
# 
# 
# ================================================
# Module twentynm_hssi_common_pcs_pma_interface
# ================================================
# asn_clk_enable = false
# asn_enable = dis_asn
# block_sel = eight_g_pcs
# bypass_early_eios = true
# bypass_pcie_switch = true
# bypass_pma_ltr = true
# bypass_pma_sw_done = false
# bypass_ppm_lock = false
# bypass_send_syncp_fbkp = true
# bypass_txdetectrx = true
# cdr_control = dis_cdr_ctrl
# cid_enable = dis_cid_mode
# cp_cons_sel = cp_cons_master
# cp_dwn_mstr = true
# cp_up_mstr = true
# ctrl_plane_bonding = individual
# data_mask_count = 0000
# data_mask_count_multi = 0
# dft_observation_clock_selection = dft_clk_obsrv_tx0
# early_eios_counter = 00
# force_freqdet = force_freqdet_dis
# free_run_clk_enable = false
# ignore_sigdet_g23 = false
# pc_en_counter = 00
# pc_rst_counter = 00
# pcie_hip_mode = hip_disable
# ph_fifo_reg_mode = phfifo_reg_mode_dis
# phfifo_flush_wait = 00
# pipe_if_g3pcs = pipe_if_8gpcs
# pma_done_counter = 00000
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# ppm_cnt_rst = ppm_cnt_rst_dis
# ppm_deassert_early = deassert_early_dis
# ppm_det_buckets = ppm_300_100_bucket
# ppm_gen1_2_cnt = cnt_32k
# ppm_post_eidle_delay = cnt_200_cycles
# ppmsel = ppmsel_300
# prot_mode = other_protocols
# reconfig_settings = {}
# rxvalid_mask = rxvalid_mask_dis
# sigdet_wait_counter = 000
# sigdet_wait_counter_multi = 0
# silicon_rev = 20nm5
# sim_mode = disable
# spd_chg_rst_wait_cnt_en = false
# sup_mode = user_mode
# testout_sel = ppm_det_test
# wait_clk_on_off_timer = 0
# wait_pipe_synchronizing = 00
# wait_send_syncp_fbkp = 000
# 
# 
# ================================================
# Module twentynm_hssi_common_pld_pcs_interface
# ================================================
# dft_clk_out_en = dft_clk_out_disable
# dft_clk_out_sel = teng_rx_dft_clk
# hrdrstctrl_en = hrst_dis
# pcs_testbus_block_sel = pma_if
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_rx_pcs
# ================================================
# double_read_mode = double_read_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_tx_pcs
# ================================================
# double_write_mode = double_write_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_gen3_rx_pcs
# ================================================
# block_sync = bypass_block_sync
# block_sync_sm = disable_blk_sync_sm
# cdr_ctrl_force_unalgn = disable
# lpbk_force = lpbk_frce_dis
# mode = disable_pcs
# rate_match_fifo = bypass_rm_fifo
# rate_match_fifo_latency = low_latency
# reconfig_settings = {}
# reverse_lpbk = rev_lpbk_dis
# rx_b4gb_par_lpbk = b4gb_par_lpbk_dis
# rx_force_balign = dis_force_balign
# rx_ins_del_one_skip = ins_del_one_skip_dis
# rx_num_fixed_pat = 0
# rx_test_out_sel = rx_test_out0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_gen3_tx_pcs
# ================================================
# mode = disable_pcs
# reverse_lpbk = rev_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_bitslip = 00
# tx_gbox_byp = bypass_gbox
# 
# 
# ================================================
# Module twentynm_hssi_krfec_rx_pcs
# ================================================
# blksync_cor_en = detect
# bypass_gb = bypass_dis
# clr_ctrl = both_enabled
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# dv_start = with_blklock
# err_mark_type = err_mark_10g
# error_marking_en = err_mark_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# parity_invalid_enum = 08
# parity_valid_num = 4
# pipeln_blksync = enable
# pipeln_descrm = disable
# pipeln_errcorrect = disable
# pipeln_errtrap_ind = enable
# pipeln_errtrap_lfsr = disable
# pipeln_errtrap_loc = disable
# pipeln_errtrap_pat = disable
# pipeln_gearbox = enable
# pipeln_syndrm = enable
# pipeln_trans_dec = disable
# prot_mode = disable_mode
# receive_order = receive_lsb
# reconfig_settings = {}
# rx_testbus_sel = overall
# signal_ok_en = sig_ok_en
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_krfec_tx_pcs
# ================================================
# burst_err = burst_err_dis
# burst_err_len = burst_err_len1
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# enc_frame_query = enc_query_dis
# low_latency_en = disable
# pipeln_encoder = enable
# pipeln_scrambler = enable
# prot_mode = disable_mode
# silicon_rev = 20nm5
# sup_mode = user_mode
# transcode_err = trans_err_dis
# transmit_order = transmit_lsb
# tx_testbus_sel = overall
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen1_2
# ================================================
# elec_idle_delay_val = 0
# error_replace_pad = replace_edb
# hip_mode = dis_hip
# ind_error_reporting = dis_ind_error_reporting
# phystatus_delay_val = 0
# phystatus_rst_toggle = dis_phystatus_rst_toggle
# pipe_byte_de_serializer_en = dont_care_bds
# prot_mode = basic
# reconfig_settings = {}
# rpre_emph_a_val = 00
# rpre_emph_b_val = 00
# rpre_emph_c_val = 00
# rpre_emph_d_val = 00
# rpre_emph_e_val = 00
# rvod_sel_a_val = 00
# rvod_sel_b_val = 00
# rvod_sel_c_val = 00
# rvod_sel_d_val = 00
# rvod_sel_e_val = 00
# rx_pipe_enable = dis_pipe_rx
# rxdetect_bypass = dis_rxdetect_bypass
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_pipe_enable = dis_pipe_tx
# txswing = dis_txswing
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen3
# ================================================
# bypass_rx_detection_enable = false
# bypass_rx_preset = 0
# bypass_rx_preset_enable = false
# bypass_tx_coefficent = 00000
# bypass_tx_coefficent_enable = false
# elecidle_delay_g3 = 0
# ind_error_reporting = dis_ind_error_reporting
# mode = disable_pcs
# phy_status_delay_g12 = 0
# phy_status_delay_g3 = 0
# phystatus_rst_toggle_g12 = dis_phystatus_rst_toggle
# phystatus_rst_toggle_g3 = dis_phystatus_rst_toggle_g3
# rate_match_pad_insertion = dis_rm_fifo_pad_ins
# silicon_rev = 20nm5
# sup_mode = user_mode
# test_out_sel = disable_test_out
# 
# 
# ================================================
# Module twentynm_hssi_rx_pcs_pma_interface
# ================================================
# block_sel = eight_g_pcs
# channel_operation_mode = tx_rx_pair_enabled
# clkslip_sel = pld
# lpbk_en = disable
# master_clk_sel = master_rx_pma_clk
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_rx = pma_20b_rx
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_ver = prbs_off
# prot_mode_rx = eightg_basic_mode_rx
# reconfig_settings = {}
# rx_dyn_polarity_inversion = rx_dyn_polinv_dis
# rx_lpbk_en = lpbk_dis
# rx_prbs_force_signal_ok = force_sig_ok
# rx_prbs_mask = prbsmask128
# rx_prbs_mode = teng_mode
# rx_signalok_signaldet_sel = sel_sig_det
# rx_static_polarity_inversion = rx_stat_polinv_dis
# rx_uhsif_lpbk_en = uhsif_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_rx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_rx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_rx = individual_rx
# hd_10g_fifo_mode_rx = fifo_rx
# hd_10g_low_latency_en_rx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_rx = pma_64b_rx
# hd_10g_prot_mode_rx = disabled_prot_mode_rx
# hd_10g_shared_fifo_width_rx = single_rx
# hd_10g_sup_mode = user_mode
# hd_10g_test_bus_mode = rx
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_rx = individual_rx
# hd_8g_fifo_mode_rx = fifo_rx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_rx = pma_20b_rx
# hd_8g_prot_mode_rx = basic_rm_disable_rx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_clklow_clk_hz = 09502f90
# hd_chnl_ctrl_plane_bonding_rx = individual_rx
# hd_chnl_fref_clk_hz = 09502f90
# hd_chnl_frequency_rules_en = disable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_rx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_operating_voltage = standard
# hd_chnl_pcs_ac_pwr_rules_en = disable
# hd_chnl_pcs_pair_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_pwr_scaling_clk = pma_rx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_rx = fifo_rx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_rx_clk_hz = 09502f90
# hd_chnl_pma_dw_rx = pma_20b_rx
# hd_chnl_pma_rx_clk_hz = 09502f90
# hd_chnl_prot_mode_rx = basic_8gpcs_rm_disable_rx
# hd_chnl_shared_fifo_width_rx = single_rx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_chnl_transparent_pcs_rx = disable
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_rx = non_teng_mode_rx
# hd_fifo_shared_fifo_width_rx = single_rx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_rx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_rx = disabled_prot_mode_rx
# hd_krfec_sup_mode = user_mode
# hd_krfec_test_bus_mode = tx
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_rx = eightg_and_g3_pld_fifo_mode_rx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_rx = pma_20b_rx
# hd_pmaif_prot_mode_rx = eightg_basic_mode_rx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_rx_block_sel = eightg
# pcs_rx_clk_out_sel = eightg_clk_out
# pcs_rx_clk_sel = pld_rx_clk
# pcs_rx_hip_clk_en = hip_rx_disable
# pcs_rx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_tx_pcs_pma_interface
# ================================================
# bypass_pma_txelecidle = true
# channel_operation_mode = tx_rx_pair_enabled
# lpbk_en = disable
# master_clk_sel = master_tx_pma_clk
# pcie_sub_prot_mode_tx = other_prot_mode
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_tx = pma_20b_tx
# pma_if_dft_en = dft_dis
# pmagate_en = pmagate_dis
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_gen_pat = prbs_gen_dis
# prot_mode_tx = eightg_basic_mode_tx
# reconfig_settings = {}
# silicon_rev = 20nm5
# sq_wave_num = sq_wave_default
# sqwgen_clken = sqwgen_clk_dis
# sup_mode = user_mode
# tx_dyn_polarity_inversion = tx_dyn_polinv_dis
# tx_pma_data_sel = eight_g_pcs
# tx_static_polarity_inversion = tx_stat_polinv_dis
# uhsif_cnt_step_filt_before_lock = uhsif_filt_stepsz_b4lock_2
# uhsif_cnt_thresh_filt_after_lock_value = 0
# uhsif_cnt_thresh_filt_before_lock = uhsif_filt_cntthr_b4lock_8
# uhsif_dcn_test_update_period = uhsif_dcn_test_period_4
# uhsif_dcn_testmode_enable = uhsif_dcn_test_mode_disable
# uhsif_dead_zone_count_thresh = uhsif_dzt_cnt_thr_2
# uhsif_dead_zone_detection_enable = uhsif_dzt_disable
# uhsif_dead_zone_obser_window = uhsif_dzt_obr_win_16
# uhsif_dead_zone_skip_size = uhsif_dzt_skipsz_4
# uhsif_delay_cell_index_sel = uhsif_index_cram
# uhsif_delay_cell_margin = uhsif_dcn_margin_2
# uhsif_delay_cell_static_index_value = 00
# uhsif_dft_dead_zone_control = uhsif_dft_dz_det_val_0
# uhsif_dft_up_filt_control = uhsif_dft_up_val_0
# uhsif_enable = uhsif_disable
# uhsif_lock_det_segsz_after_lock = uhsif_lkd_segsz_aflock_512
# uhsif_lock_det_segsz_before_lock = uhsif_lkd_segsz_b4lock_16
# uhsif_lock_det_thresh_cnt_after_lock_value = 0
# uhsif_lock_det_thresh_cnt_before_lock_value = 0
# uhsif_lock_det_thresh_diff_after_lock_value = 0
# uhsif_lock_det_thresh_diff_before_lock_value = 0
# 
# 
# ================================================
# Module twentynm_hssi_tx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_tx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_tx = ctrl_slave_blw_tx
# hd_10g_fifo_mode_tx = fifo_tx
# hd_10g_low_latency_en_tx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_tx = pma_64b_tx
# hd_10g_prot_mode_tx = disabled_prot_mode_tx
# hd_10g_shared_fifo_width_tx = single_tx
# hd_10g_sup_mode = user_mode
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_tx = ctrl_slave_blw_tx
# hd_8g_fifo_mode_tx = fifo_tx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_tx = pma_20b_tx
# hd_8g_prot_mode_tx = basic_tx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_ctrl_plane_bonding_tx = ctrl_slave_blw_tx
# hd_chnl_frequency_rules_en = enable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_tx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_pcs_tx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_tx_pwr_scaling_clk = pma_tx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_tx = fifo_tx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_tx_clk_hz = 09502f90
# hd_chnl_pld_uhsif_tx_clk_hz = 00000000
# hd_chnl_pma_dw_tx = pma_20b_tx
# hd_chnl_pma_tx_clk_hz = 09502f90
# hd_chnl_prot_mode_tx = basic_8gpcs_tx
# hd_chnl_shared_fifo_width_tx = single_tx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_tx = non_teng_mode_tx
# hd_fifo_shared_fifo_width_tx = single_tx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_tx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_tx = disabled_prot_mode_tx
# hd_krfec_sup_mode = user_mode
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_tx = eightg_and_g3_pld_fifo_mode_tx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_ctrl_plane_bonding = individual
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_tx = pma_20b_tx
# hd_pmaif_prot_mode_tx = eightg_basic_mode_tx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_tx_clk_out_sel = eightg_clk_out
# pcs_tx_clk_source = eightg
# pcs_tx_data_source = hip_disable
# pcs_tx_delay1_clk_en = delay1_clk_disable
# pcs_tx_delay1_clk_sel = pcs_tx_clk
# pcs_tx_delay1_ctrl = delay1_path0
# pcs_tx_delay1_data_sel = one_ff_delay
# pcs_tx_delay2_clk_en = delay2_clk_disable
# pcs_tx_delay2_ctrl = delay2_path0
# pcs_tx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_pma_adaptation
# ================================================
# adapt_dfe_control_sel = r_adapt_dfe_control_sel_0
# adapt_dfe_sel = r_adapt_dfe_sel_0
# adapt_mode = manual
# adapt_vga_sel = r_adapt_vga_sel_0
# adapt_vref_sel = r_adapt_vref_sel_0
# adp_1s_ctle_bypass = radp_1s_ctle_bypass_0
# adp_4s_ctle_bypass = radp_4s_ctle_bypass_0
# adp_adapt_control_sel = radp_adapt_control_sel_0
# adp_adapt_rstn = radp_adapt_rstn_1
# adp_adapt_start = radp_adapt_start_0
# adp_bist_auxpath_en = radp_bist_auxpath_disable
# adp_bist_count_rstn = radp_bist_count_rstn_0
# adp_bist_datapath_en = radp_bist_datapath_disable
# adp_bist_mode = radp_bist_mode_0
# adp_bist_odi_dfe_sel = radp_bist_odi_dfe_sel_0
# adp_bist_spec_en = radp_bist_spec_en_0
# adp_control_mux_bypass = radp_control_mux_bypass_0
# adp_ctle_acgain_4s = radp_ctle_acgain_4s_0
# adp_ctle_adapt_bw = radp_ctle_adapt_bw_3
# adp_ctle_adapt_cycle_window = radp_ctle_adapt_cycle_window_6
# adp_ctle_adapt_oneshot = radp_ctle_adapt_oneshot_1
# adp_ctle_en = radp_ctle_disable
# adp_ctle_eqz_1s_sel = radp_ctle_eqz_1s_sel_0
# adp_ctle_force_spec_sign = radp_ctle_force_spec_sign_0
# adp_ctle_hold_en = radp_ctle_not_held
# adp_ctle_load = radp_ctle_load_0
# adp_ctle_load_value = radp_ctle_load_value_0
# adp_ctle_scale = radp_ctle_scale_0
# adp_ctle_scale_en = radp_ctle_scale_en_0
# adp_ctle_spec_sign = radp_ctle_spec_sign_0
# adp_ctle_sweep_direction = radp_ctle_sweep_direction_1
# adp_ctle_threshold = radp_ctle_threshold_0
# adp_ctle_threshold_en = radp_ctle_threshold_en_0
# adp_ctle_vref_polarity = radp_ctle_vref_polarity_0
# adp_ctle_window = radp_ctle_window_0
# adp_dfe_bw = radp_dfe_bw_3
# adp_dfe_clkout_div_sel = radp_dfe_clkout_div_sel_0
# adp_dfe_cycle = radp_dfe_cycle_6
# adp_dfe_fltap1 = radp_dfe_fltap1_0
# adp_dfe_fltap1_sgn = radp_dfe_fltap1_sgn_0
# adp_dfe_fltap2 = radp_dfe_fltap2_0
# adp_dfe_fltap2_sgn = radp_dfe_fltap2_sgn_0
# adp_dfe_fltap3 = radp_dfe_fltap3_0
# adp_dfe_fltap3_sgn = radp_dfe_fltap3_sgn_0
# adp_dfe_fltap4 = radp_dfe_fltap4_0
# adp_dfe_fltap4_sgn = radp_dfe_fltap4_sgn_0
# adp_dfe_fltap_bypass = radp_dfe_fltap_bypass_0
# adp_dfe_fltap_en = radp_dfe_fltap_disable
# adp_dfe_fltap_hold_en = radp_dfe_fltap_not_held
# adp_dfe_fltap_load = radp_dfe_fltap_load_0
# adp_dfe_fltap_position = radp_dfe_fltap_position_0
# adp_dfe_force_spec_sign = radp_dfe_force_spec_sign_0
# adp_dfe_fxtap1 = radp_dfe_fxtap1_0
# adp_dfe_fxtap2 = radp_dfe_fxtap2_0
# adp_dfe_fxtap2_sgn = radp_dfe_fxtap2_sgn_0
# adp_dfe_fxtap3 = radp_dfe_fxtap3_0
# adp_dfe_fxtap3_sgn = radp_dfe_fxtap3_sgn_0
# adp_dfe_fxtap4 = radp_dfe_fxtap4_0
# adp_dfe_fxtap4_sgn = radp_dfe_fxtap4_sgn_0
# adp_dfe_fxtap5 = radp_dfe_fxtap5_0
# adp_dfe_fxtap5_sgn = radp_dfe_fxtap5_sgn_0
# adp_dfe_fxtap6 = radp_dfe_fxtap6_0
# adp_dfe_fxtap6_sgn = radp_dfe_fxtap6_sgn_0
# adp_dfe_fxtap7 = radp_dfe_fxtap7_0
# adp_dfe_fxtap7_sgn = radp_dfe_fxtap7_sgn_0
# adp_dfe_fxtap_bypass = radp_dfe_fxtap_bypass_0
# adp_dfe_fxtap_en = radp_dfe_fxtap_disable
# adp_dfe_fxtap_hold_en = radp_dfe_fxtap_not_held
# adp_dfe_fxtap_load = radp_dfe_fxtap_load_0
# adp_dfe_mode = radp_dfe_mode_0
# adp_dfe_spec_sign = radp_dfe_spec_sign_0
# adp_dfe_vref_polarity = radp_dfe_vref_polarity_0
# adp_force_freqlock = radp_force_freqlock_off
# adp_frame_capture = radp_frame_capture_0
# adp_frame_en = radp_frame_en_0
# adp_frame_odi_sel = radp_frame_odi_sel_0
# adp_frame_out_sel = radp_frame_out_sel_0
# adp_lfeq_fb_sel = radp_lfeq_fb_sel_0
# adp_mode = radp_mode_0
# adp_odi_control_sel = radp_odi_control_sel_0
# adp_onetime_dfe = radp_onetime_dfe_1
# adp_spec_avg_window = radp_spec_avg_window_4
# adp_spec_trans_filter = radp_spec_trans_filter_2
# adp_status_sel = radp_status_sel_0
# adp_vga_bypass = radp_vga_bypass_0
# adp_vga_en = radp_vga_disable
# adp_vga_load = radp_vga_load_0
# adp_vga_polarity = radp_vga_polarity_0
# adp_vga_sel = radp_vga_sel_0
# adp_vga_sweep_direction = radp_vga_sweep_direction_1
# adp_vga_threshold = radp_vga_threshold_4
# adp_vref_bw = radp_vref_bw_1
# adp_vref_bypass = radp_vref_bypass_0
# adp_vref_cycle = radp_vref_cycle_6
# adp_vref_dfe_spec_en = radp_vref_dfe_spec_en_0
# adp_vref_en = radp_vref_disable
# adp_vref_hold_en = radp_vref_not_held
# adp_vref_load = radp_vref_load_0
# adp_vref_polarity = radp_vref_polarity_0
# adp_vref_sel = radp_vref_sel_21
# adp_vref_vga_level = radp_vref_vga_level_13
# datarate = 3125000000 bps
# initial_settings = true
# odi_count_threshold = rodi_count_threshold_0
# odi_dfe_spec_en = rodi_dfe_spec_en_0
# odi_en = rodi_en_0
# odi_mode = rodi_mode_0
# odi_rstn = rodi_rstn_0
# odi_spec_sel = rodi_spec_sel_0
# odi_start = rodi_start_0
# odi_vref_sel = rodi_vref_sel_0
# optimal = false
# prot_mode = basic_rx
# rrx_pcie_eqz = rrx_pcie_eqz_0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_cdr_refclk_select_mux
# ================================================
# local_cdr_clkin_scratch0_src = cdr_clkin_scratch0_src_refclk_iqclk
# local_cdr_clkin_scratch1_src = cdr_clkin_scratch1_src_refclk_iqclk
# local_cdr_clkin_scratch2_src = cdr_clkin_scratch2_src_refclk_iqclk
# local_cdr_clkin_scratch3_src = cdr_clkin_scratch3_src_refclk_iqclk
# local_cdr_clkin_scratch4_src = cdr_clkin_scratch4_src_refclk_iqclk
# inclk0_logical_to_physical_mapping = ref_iqclk0
# inclk1_logical_to_physical_mapping = ref_iqclk1
# inclk2_logical_to_physical_mapping = ref_iqclk2
# inclk3_logical_to_physical_mapping = ref_iqclk3
# inclk4_logical_to_physical_mapping = ref_iqclk4
# powerdown_mode = powerup
# receiver_detect_src = iqclk_src
# refclk_select = ref_iqclk0
# silicon_rev = 20nm5
# local_xmux_refclk_src = refclk_iqclk
# local_xpm_iqref_mux_iqclk_sel = ref_iqclk0
# local_xpm_iqref_mux_scratch0_src = scratch0_ref_iqclk0
# local_xpm_iqref_mux_scratch1_src = scratch1_ref_iqclk1
# local_xpm_iqref_mux_scratch2_src = scratch2_ref_iqclk2
# local_xpm_iqref_mux_scratch3_src = scratch3_ref_iqclk3
# local_xpm_iqref_mux_scratch4_src = scratch4_ref_iqclk4
# 
# 
# ================================================
# Module twentynm_hssi_pma_channel_pll
# ================================================
# analog_mode = user_custom
# atb_select_control = atb_off
# auto_reset_on = auto_reset_off
# bandwidth_range_high = 0 hz
# bandwidth_range_low = 0 hz
# bbpd_data_pattern_filter_select = bbpd_data_pat_off
# bw_sel = medium
# cdr_odi_select = sel_cdr
# cdr_phaselock_mode = no_ignore_lock
# cdr_powerdown_mode = power_up
# cgb_div =           1
# chgpmp_current_pd = cp_current_pd_setting2
# chgpmp_current_pfd = cp_current_pfd_setting3
# chgpmp_replicate = false
# chgpmp_testmode = cp_test_disable
# clklow_mux_select = clklow_mux_cdr_fbclk
# datarate = 3125000000 bps
# diag_loopback_enable = false
# disable_up_dn = true
# f_max_pfd = 0 hz
# f_max_ref = 0 hz
# f_max_vco = 0 hz
# f_min_gt_channel = 0 hz
# f_min_pfd = 0 hz
# f_min_ref = 0 hz
# f_min_vco = 0 hz
# fb_select = direct_fb
# fref_clklow_div =           1
# fref_mux_select = fref_mux_cdr_refclk
# gpon_lck2ref_control = gpon_lck2ref_off
# initial_settings = true
# iqclk_mux_sel = power_down
# is_cascaded_pll = false
# lck2ref_delay_control = lck2ref_delay_2
# lf_resistor_pd = lf_pd_setting0
# lf_resistor_pfd = lf_pfd_setting2
# lf_ripple_cap = lf_no_ripple
# loop_filter_bias_select = lpflt_bias_off
# loopback_mode = loopback_disabled
# lpd_counter = 04
# lpfd_counter = 08
# ltd_ltr_micro_controller_select = ltd_ltr_pcs
# m_counter =          10
# n_counter_scratch =  2
# n_counter_scratch = 02
# optimal = false
# output_clock_frequency = 1562500000 Hz
# pcie_gen = non_pcie
# pd_fastlock_mode = false
# pd_l_counter =           4
# pfd_l_counter =           8
# pm_speed_grade = e2
# pma_width =          20
# position = position_unknown
# power_mode = low_power
# primary_use = cdr
# prot_mode = basic_rx
# reference_clock_frequency = 156250000 hz
# requires_gt_capable_channel = false
# reverse_serial_loopback = no_loopback
# set_cdr_v2i_enable = true
# set_cdr_vco_reset = false
# set_cdr_vco_speed = 07
# set_cdr_vco_speed_fix = 06
# set_cdr_vco_speed_pciegen3 = cdr_vco_max_speedbin_pciegen3
# side = side_unknown
# silicon_rev = 20nm5
# sup_mode = user_mode
# top_or_bottom = tb_unknown
# tx_pll_prot_mode = txpll_unused
# txpll_hclk_driver_enable = false
# uc_cru_rstb = cdr_lf_reset_off
# uc_ro_cal = uc_ro_cal_on
# uc_ro_cal_status = uc_ro_cal_notdone
# vco_freq = 6250000000 Hz
# vco_overrange_voltage = vco_overrange_off
# vco_underrange_voltage = vco_underange_off
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_buf
# ================================================
# act_isource_disable = isrc_en
# bodybias_enable = bodybias_en
# bodybias_select = bodybias_sel1
# bypass_eqz_stages_234 = bypass_off
# cdrclk_to_cgb = cdrclk_2cgb_dis
# cgm_bias_disable = cgmbias_en
# datarate = 3125000000 bps
# diag_lp_en = dlp_off
# eq_bw_sel = eq_bw_1
# eq_dc_gain_trim = no_dc_gain
# xrx_path_initial_settings = true
# input_vcm_sel = high_vcm
# iostandard = hssi_diffio
# lfeq_enable = non_lfeq_mode
# lfeq_zero_control = lfeq_setting_2
# link_rx = sr
# link_rx = sr
# loopback_modes = lpbk_disable
# offset_cal_pd = eqz1_en
# offset_cancellation_coarse = coarse_setting_00
# offset_cancellation_ctrl = volt_0mv
# offset_cancellation_fine = fine_setting_00
# offset_pd = oc_en
# one_stage_enable = non_s1_mode
# xrx_path_optimal = false
# pdb_rx = normal_rx_on
# pm_speed_grade = e2
# pm_tx_rx_cvp_mode = cvp_off
# pm_tx_rx_pcie_gen = non_pcie
# pm_tx_rx_pcie_gen_bitwidth = pcie_gen3_32b
# pm_tx_rx_testmux_select = setting0
# power_mode_rx = low_power
# power_mode_rx = low_power
# power_rail_eht =           0
# power_rail_er =           0
# xrx_path_prot_mode = basic_rx
# qpi_enable = non_qpi_mode
# refclk_en = disable
# rx_atb_select = atb_disable
# rx_refclk_divider = bypass_divider
# rx_sel_bias_source = bias_vcmdrv
# silicon_rev = 20nm5
# xrx_path_sup_mode = user_mode
# term_sel = r_r1
# term_tri_enable = disable_tri
# vccela_supply_voltage = vccela_1p1v
# vcm_current_add = vcm_current_default
# vcm_sel = vcm_setting_10
# vga_bandwidth_select = vga_bw_1
# xrx_path_analog_mode = user_custom
# xrx_path_datarate = 3125000000 bps
# xrx_path_datawidth = 14
# xrx_path_gt_enabled = disable
# xrx_path_initial_settings = true
# xrx_path_jtag_hys = hys_increase_disable
# xrx_path_jtag_lp = lp_off
# xrx_path_optimal = false
# xrx_path_pma_rx_divclk_hz_bin = 0000000009502f90
# xrx_path_prot_mode = basic_rx
# xrx_path_sup_mode = user_mode
# xrx_path_uc_cal_enable = rx_cal_off
# xrx_path_uc_cru_rstb = cdr_lf_reset_off
# xrx_path_uc_pcie_sw = uc_pcie_gen1
# xrx_path_uc_rx_rstb = rx_reset_on
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_deser
# ================================================
# bitslip_bypass = bs_bypass_yes
# clkdiv_source = vco_bypass_normal
# clkdivrx_user_mode = clkdivrx_user_disabled
# datarate = 3125000000 bps
# deser_factor =          20
# deser_powerdown = deser_power_up
# force_adaptation_outputs = normal_outputs
# force_clkdiv_for_testing = normal_clkdiv
# optimal = false
# pcie_gen = non_pcie
# pcie_gen_bitwidth = pcie_gen3_32b
# prot_mode = basic_rx
# rst_n_adapt_odi = no_rst_adapt_odi
# sdclk_enable = false
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_dfe
# ================================================
# atb_select = atb_disable
# datarate = 3125000000 bps
# dft_en = dft_disable
# initial_settings = true
# oc_sa_adp1 = 00
# oc_sa_adp2 = 00
# oc_sa_c270 = 00
# oc_sa_c90 = 00
# oc_sa_d0c0 = 00
# oc_sa_d0c180 = 00
# oc_sa_d1c0 = 00
# oc_sa_d1c180 = 00
# optimal = false
# pdb = 6466655f656e61626c65
# pdb_fixedtap = fixtap_dfe_powerdown
# pdb_floattap = floattap_dfe_powerdown
# pdb_fxtap4t7 = fxtap4t7_powerdown
# power_mode = low_power
# prot_mode = basic_rx
# sel_fltapstep_dec = fltap_step_no_dec
# sel_fltapstep_inc = fltap_step_no_inc
# sel_fxtapstep_dec = fxtap_step_no_dec
# sel_fxtapstep_inc = fxtap_step_no_inc
# sel_oc_en = off_canc_disable
# sel_probe_tstmx = probe_tstmx_none
# silicon_rev = 20nm5
# sup_mode = user_mode
# uc_rx_dfe_cal = uc_rx_dfe_cal_off
# uc_rx_dfe_cal_status = uc_rx_dfe_cal_notdone
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_odi
# ================================================
# clk_dcd_bypass = no_bypass
# datarate = 3125000000 bps
# enable_odi = power_down_eye
# initial_settings = true
# invert_dfe_vref = no_inversion
# monitor_bw_sel = bw_1
# oc_sa_c0 = 00
# oc_sa_c180 = 00
# optimal = false
# phase_steps_64_vs_128 = phase_steps_64
# phase_steps_sel = step40
# power_mode = low_power
# prot_mode = basic_rx
# sel_oc_en = off_canc_disable
# silicon_rev = 20nm5
# step_ctrl_sel = feedback_mode
# sup_mode = user_mode
# v_vert_sel = plus
# v_vert_threshold_scaling = scale_3
# vert_threshold = vert_0
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_sd
# ================================================
# link = sr
# optimal = false
# power_mode = low_power
# prot_mode = basic_rx
# sd_output_off =           1
# sd_output_on =          15
# sd_pdb = sd_off
# sd_threshold =           3
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_buf
# ================================================
# xtx_path_calibration_en = false
# compensation_driver_en = disable
# compensation_en = enable
# cpen_ctrl = cp_l0
# datarate = 3125000000 bps
# dcd_detection_en = enable
# dft_sel = dft_disabled
# duty_cycle_correction_bandwidth = dcc_bw_12
# duty_cycle_correction_mode_ctrl = dcc_disable
# duty_cycle_correction_reference1 = dcc_ref1_3
# duty_cycle_correction_reference2 = dcc_ref2_3
# duty_cycle_correction_reset_n = reset_n
# duty_cycle_input_polarity = dcc_input_pos
# duty_cycle_setting = dcc_t32
# duty_cycle_setting_aux = dcc2_t32
# xtx_path_initial_settings = true
# jtag_drv_sel = drv1
# jtag_lp = lp_off
# link_tx = sr
# link_tx = sr
# low_power_en = disable
# lst = 6174625f64697361626c6564
# mcgb_location_for_pcie = 0
# xtx_path_optimal = false
# pm_speed_grade = e2
# power_mode = low_power
# power_rail_eht =           0
# power_rail_et =           0
# pre_emp_sign_1st_post_tap = fir_post_1t_neg
# pre_emp_sign_2nd_post_tap = fir_post_2t_neg
# pre_emp_sign_pre_tap_1t = fir_pre_1t_neg
# pre_emp_sign_pre_tap_2t = fir_pre_2t_neg
# pre_emp_switching_ctrl_1st_post_tap = 00
# pre_emp_switching_ctrl_2nd_post_tap = 0
# pre_emp_switching_ctrl_pre_tap_1t = 00
# pre_emp_switching_ctrl_pre_tap_2t = 0
# xtx_path_prot_mode = basic_tx
# res_cal_local = non_local
# rx_det = mode_0
# rx_det_output_sel = rx_det_pcie_out
# rx_det_pdb = rx_det_off
# ser_powerdown = normal_ser_on
# silicon_rev = 20nm5
# slew_rate_ctrl = slew_r7
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# term_code = rterm_code7
# term_n_tune = rterm_n0
# term_p_tune = rterm_p0
# term_sel = r_r1
# tx_powerdown = normal_tx_on
# uc_dcd_cal = uc_dcd_cal_off
# uc_dcd_cal_status = uc_dcd_cal_notdone
# uc_gen3 = gen3_off
# uc_gen4 = gen4_off
# uc_skew_cal = uc_skew_cal_off
# uc_skew_cal_status = uc_skew_cal_notdone
# uc_txvod_cal = uc_tx_vod_cal_off
# uc_txvod_cal_cont = uc_tx_vod_cal_cont_off
# uc_txvod_cal_status = uc_tx_vod_cal_notdone
# uc_vcc_setting = vcc_setting0
# user_fir_coeff_ctrl_sel = ram_ctl
# vod_output_swing_ctrl = 00
# vreg_output = vccdreg_nominal
# xtx_path_analog_mode = user_custom
# xtx_path_bonding_mode = x1_non_bonded
# xtx_path_calibration_en = false
# xtx_path_clock_divider_ratio = 1
# xtx_path_datarate = 3125000000 bps
# xtx_path_datawidth = 14
# xtx_path_gt_enabled = disable
# xtx_path_initial_settings = true
# xtx_path_optimal = false
# xtx_path_pma_tx_divclk_hz_bin = 0000000009502f90
# xtx_path_prot_mode = basic_tx
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# xtx_path_tx_pll_clk_hz = 1562500000
# 
# ================ INPUT =================
# prot_mode           = basic_tx
# input_select_x1     = unused
# input_select_xn     = sel_x6_dn
# input_select_gen3   = unused
# ================ OUTPUT ================
# x1_clock_source_sel = same_ch_txpll
# xn_clock_source_sel = sel_x6_bot
# ================ END ===================
# 
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_cgb
# ================================================
# bitslip_enable = disable_bitslip
# bonding_mode = x1_non_bonded
# bonding_reset_enable = disallow_bonding_reset
# cgb_power_down = normal_cgb
# datarate = 3125000000 bps
# dprio_cgb_vreg_boost = no_voltage_boost
# initial_settings = true
# input_select_gen3 = unused
# input_select_x1 = unused
# input_select_xn = sel_x6_dn
# observe_cgb_clocks = observe_nothing
# pcie_gen3_bitwidth = pciegen3_wide
# prot_mode = basic_tx
# scratch0_x1_clock_src = unused
# scratch1_x1_clock_src = unused
# scratch2_x1_clock_src = unused
# scratch3_x1_clock_src = unused
# select_done_master_or_slave = choose_master_pcie_sw_done
# ser_mode = twenty_bit
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_ucontrol_en = disable
# tx_ucontrol_pcie = gen1
# tx_ucontrol_reset = disable
# vccdreg_output = vccdreg_nominal
# local_x1_clock_source_sel = same_ch_txpll
# x1_div_m_sel = divbypass
# local_xn_clock_source_sel = sel_x6_bot
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_ser
# ================================================
# bonding_mode = x1_non_bonded
# clk_divtx_deskew = deskew_delay8
# control_clk_divtx = no_dft_control_clkdivtx
# duty_cycle_correction_mode_ctrl = dcc_disable
# initial_settings = true
# prot_mode = basic_tx
# ser_clk_divtx_user_sel = divtx_user_off
# ser_clk_mon = disable_clk_mon
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_10g_rx_pcs
# ================================================
# advanced_user_mode = disable
# align_del = align_del_dis
# ber_bit_err_total_cnt = bit_err_total_cnt_10g
# ber_clken = ber_clk_dis
# ber_xus_timer_window = 004c4a
# bitslip_mode = bitslip_dis
# blksync_bitslip_type = bitslip_comb
# blksync_bitslip_wait_cnt = 1
# blksync_bitslip_wait_type = bitslip_cnt
# blksync_bypass = blksync_bypass_en
# blksync_clken = blksync_clk_dis
# blksync_enum_invalid_sh_cnt = enum_invalid_sh_cnt_10g
# blksync_knum_sh_cnt_postlock = knum_sh_cnt_postlock_10g
# blksync_knum_sh_cnt_prelock = knum_sh_cnt_prelock_10g
# blksync_pipeln = blksync_pipeln_dis
# clr_errblk_cnt_en = disable
# control_del = control_del_none
# crcchk_bypass = crcchk_bypass_en
# crcchk_clken = crcchk_clk_dis
# crcchk_inv = crcchk_inv_en
# crcchk_pipeln = crcchk_pipeln_en
# crcflag_pipeln = crcflag_pipeln_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# data_bit_reverse = data_bit_reverse_dis
# dec64b66b_clken = dec64b66b_clk_dis
# dec_64b66b_rxsm_bypass = dec_64b66b_rxsm_bypass_en
# descrm_bypass = descrm_bypass_en
# descrm_clken = descrm_clk_dis
# descrm_mode = async
# descrm_pipeln = enable
# dft_clk_out_sel = rx_master_clk
# dis_signal_ok = dis_signal_ok_en
# dispchk_bypass = dispchk_bypass_en
# empty_flag_type = empty_rd_side
# fast_path = fast_path_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_read = fifo_double_read_dis
# fifo_stop_rd = n_rd_empty
# fifo_stop_wr = n_wr_full
# force_align = force_align_dis
# frmsync_bypass = frmsync_bypass_en
# frmsync_clken = frmsync_clk_dis
# frmsync_enum_scrm = enum_scrm_default
# frmsync_enum_sync = enum_sync_default
# frmsync_flag_type = location_only
# frmsync_knum_sync = knum_sync_default
# frmsync_mfrm_length = 0800
# frmsync_pipeln = frmsync_pipeln_en
# full_flag_type = full_wr_side
# gb_rx_idwidth = width_64
# gb_rx_odwidth = width_64
# gbexp_clken = gbexp_clk_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# master_clk_sel = master_rx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# rand_clken = rand_clk_dis
# rd_clk_sel = rd_rx_pld_clk
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# rx_fifo_write_ctrl = blklock_stops
# rx_scrm_width = bit64
# rx_sh_location = msb
# rx_signal_ok_sel = synchronized_ver
# rx_sm_bypass = rx_sm_bypass_en
# rx_sm_hiber = rx_sm_hiber_en
# rx_sm_pipeln = rx_sm_pipeln_en
# rx_testbus_sel = rx_fifo_testbus1
# rx_true_b2b = b2b
# rxfifo_empty = empty_default
# rxfifo_full = full_default
# rxfifo_mode = phase_comp
# rxfifo_pempty = 02
# rxfifo_pfull = 17
# silicon_rev = 20nm5
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_10g_tx_pcs
# ================================================
# advanced_user_mode = disable
# bitslip_en = bitslip_dis
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# comp_cnt = 04
# compin_sel = compin_master
# crcgen_bypass = crcgen_bypass_en
# crcgen_clken = crcgen_clk_dis
# crcgen_err = crcgen_err_dis
# crcgen_inv = crcgen_inv_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# ctrl_plane_bonding = ctrl_master
# data_bit_reverse = data_bit_reverse_dis
# dft_clk_out_sel = tx_master_clk
# dispgen_bypass = dispgen_bypass_en
# dispgen_clken = dispgen_clk_dis
# dispgen_err = dispgen_err_dis
# dispgen_pipeln = dispgen_pipeln_dis
# distdwn_bypass_pipeln = distdwn_bypass_pipeln_dis
# distdwn_master = distdwn_master_en
# distup_bypass_pipeln = distup_bypass_pipeln_dis
# distup_master = distup_master_en
# dv_bond = dv_bond_en
# empty_flag_type = empty_rd_side
# enc64b66b_txsm_clken = enc64b66b_txsm_clk_dis
# enc_64b66b_txsm_bypass = enc_64b66b_txsm_bypass_en
# fastpath = fastpath_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_write = fifo_double_write_dis
# fifo_reg_fast = fifo_reg_fast_dis
# fifo_stop_rd = rd_empty
# fifo_stop_wr = n_wr_full
# frmgen_burst = frmgen_burst_dis
# frmgen_bypass = frmgen_bypass_en
# frmgen_clken = frmgen_clk_dis
# frmgen_mfrm_length = 0800
# frmgen_pipeln = frmgen_pipeln_en
# frmgen_pyld_ins = frmgen_pyld_ins_dis
# frmgen_wordslip = frmgen_wordslip_dis
# full_flag_type = full_wr_side
# gb_pipeln_bypass = disable
# gb_tx_idwidth = width_64
# gb_tx_odwidth = width_64
# gbred_clken = gbred_clk_dis
# indv = indv_dis
# low_latency_en = disable
# master_clk_sel = master_tx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# pseudo_random = all_0
# pseudo_seed_a_bin = 03ffffffffffffff
# pseudo_seed_b_bin = 03ffffffffffffff
# random_disp = disable
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# scrm_bypass = scrm_bypass_en
# scrm_clken = scrm_clk_dis
# scrm_mode = async
# scrm_pipeln = enable
# sh_err = sh_err_dis
# silicon_rev = 20nm5
# sop_mark = sop_mark_dis
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# tx_scrm_err = scrm_err_dis
# tx_scrm_width = bit64
# tx_sh_location = msb
# tx_sm_bypass = tx_sm_bypass_en
# tx_sm_pipeln = tx_sm_pipeln_en
# tx_testbus_sel = tx_fifo_testbus1
# txfifo_empty = empty_default
# txfifo_full = full_default
# txfifo_mode = phase_comp
# txfifo_pempty = 2
# txfifo_pfull = b
# wr_clk_sel = wr_tx_pld_clk
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_8g_rx_pcs
# ================================================
# auto_error_replacement = dis_err_replace
# auto_speed_nego = dis_asn
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_deserializer = dis_bds
# cdr_ctrl_rxvalid_mask = dis_rxvalid_mask
# clkcmp_pattern_n = 00000
# clkcmp_pattern_p = 00000
# clock_gate_bds_dec_asn = dis_bds_dec_asn_clk_gating
# clock_gate_cdr_eidle = en_cdr_eidle_clk_gating
# clock_gate_dw_pc_wrclk = dis_dw_pc_wrclk_gating
# clock_gate_dw_rm_rd = en_dw_rm_rdclk_gating
# clock_gate_dw_rm_wr = en_dw_rm_wrclk_gating
# clock_gate_dw_wa = dis_dw_wa_clk_gating
# clock_gate_pc_rdclk = dis_pc_rdclk_gating
# clock_gate_sw_pc_wrclk = dis_sw_pc_wrclk_gating
# clock_gate_sw_rm_rd = en_sw_rm_rdclk_gating
# clock_gate_sw_rm_wr = en_sw_rm_wrclk_gating
# clock_gate_sw_wa = dis_sw_wa_clk_gating
# clock_observation_in_pld_core = internal_sw_wa_clk
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_master
# ctrl_plane_bonding_distribution = master_chnl_distr
# eidle_entry_eios = dis_eidle_eios
# eidle_entry_iei = dis_eidle_iei
# eidle_entry_sd = dis_eidle_sd
# eightb_tenb_decoder = dis_8b10b
# err_flags_sel = err_flags_wa
# fixed_pat_det = dis_fixed_patdet
# fixed_pat_num = 0
# force_signal_detect = en_force_signal_detect
# gen3_clk_en = disable_clk
# gen3_rx_clk_sel = rcvd_clk
# gen3_tx_clk_sel = tx_pma_clk
# hip_mode = dis_hip
# ibm_invalid_code = dis_ibm_invalid_code
# invalid_code_flag_only = dis_invalid_code_only
# pad_or_edb_error_replace = replace_edb
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# pipe_if_enable = dis_pipe_rx
# pma_dw = twenty_bit
# polinv_8b10b_dec = dis_polinv_8b10b_dec
# prot_mode = basic_rm_disable
# rate_match = dis_rm
# rate_match_del_thres = dis_rm_del_thres
# rate_match_empty_thres = dis_rm_empty_thres
# rate_match_full_thres = dis_rm_full_thres
# rate_match_ins_thres = dis_rm_ins_thres
# rate_match_start_thres = dis_rm_start_thres
# reconfig_settings = {}
# rx_clk2 = rcvd_clk_clk2
# rx_clk_free_running = en_rx_clk_free_run
# rx_pcs_urst = en_rx_pcs_urst
# rx_rcvd_clk = rcvd_clk_rcvd_clk
# rx_rd_clk = pld_rx_clk
# rx_refclk = dis_refclk_sel
# rx_wr_clk = rx_clk2_div_1_2_4
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# sync_sm_idle_eios = dis_syncsm_idle
# test_bus_sel = tx_testbus
# tx_rx_parallel_loopback = dis_plpbk
# wa_boundary_lock_ctrl = sync_sm
# wa_clk_slip_spacing = 010
# wa_det_latency_sync_status_beh = dont_care_assert_sync
# wa_disp_err_flag = en_disp_err_flag
# wa_kchar = dis_kchar
# wa_pd = wa_pd_20
# wa_pd_data_bin = 00000000000a0d7c
# wa_pd_polarity = en_pd_both_pol
# wa_pld_controlled = dis_pld_ctrl
# wa_renumber_data = 01
# wa_rgnumber_data = 01
# wa_rknumber_data = 01
# wa_rosnumber_data = 0
# wa_rvnumber_data = 0000
# wa_sync_sm_ctrl = dw_basic_sync_sm
# wait_cnt = 000
# 
# 
# ================================================
# Module twentynm_hssi_8g_tx_pcs
# ================================================
# auto_speed_nego_gen2 = dis_asn_g2
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_serializer = dis_bs
# clock_gate_bs_enc = dis_bs_enc_clk_gating
# clock_gate_dw_fifowr = dis_dw_fifowr_clk_gating
# clock_gate_fiford = dis_fiford_clk_gating
# clock_gate_sw_fifowr = dis_sw_fifowr_clk_gating
# clock_observation_in_pld_core = internal_refclk_b
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_master
# ctrl_plane_bonding_distribution = master_chnl_distr
# data_selection_8b10b_encoder_input = normal_data_path
# dynamic_clk_switch = dis_dyn_clk_switch
# eightb_tenb_disp_ctrl = dis_disp_ctrl
# eightb_tenb_encoder = dis_8b10b
# force_echar = dis_force_echar
# force_kchar = dis_force_kchar
# gen3_tx_clk_sel = dis_tx_clk
# gen3_tx_pipe_clk_sel = dis_tx_pipe_clk
# hip_mode = dis_hip
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# phfifo_write_clk_sel = pld_tx_clk
# pma_dw = twenty_bit
# prot_mode = basic
# reconfig_settings = {}
# refclk_b_clk_sel = tx_pma_clock
# revloop_back_rm = dis_rev_loopback_rx_rm
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# tx_bitslip = dis_tx_bitslip
# tx_compliance_controlled_disparity = dis_txcompliance
# tx_fast_pld_reg = dis_tx_fast_pld_reg
# txclk_freerun = en_freerun_tx
# txpcs_urst = en_txpcs_urst
# 
# 
# ================================================
# Module twentynm_hssi_common_pcs_pma_interface
# ================================================
# asn_clk_enable = false
# asn_enable = dis_asn
# block_sel = eight_g_pcs
# bypass_early_eios = true
# bypass_pcie_switch = true
# bypass_pma_ltr = true
# bypass_pma_sw_done = false
# bypass_ppm_lock = false
# bypass_send_syncp_fbkp = true
# bypass_txdetectrx = true
# cdr_control = dis_cdr_ctrl
# cid_enable = dis_cid_mode
# cp_cons_sel = cp_cons_master
# cp_dwn_mstr = true
# cp_up_mstr = true
# ctrl_plane_bonding = individual
# data_mask_count = 0000
# data_mask_count_multi = 0
# dft_observation_clock_selection = dft_clk_obsrv_tx0
# early_eios_counter = 00
# force_freqdet = force_freqdet_dis
# free_run_clk_enable = false
# ignore_sigdet_g23 = false
# pc_en_counter = 00
# pc_rst_counter = 00
# pcie_hip_mode = hip_disable
# ph_fifo_reg_mode = phfifo_reg_mode_dis
# phfifo_flush_wait = 00
# pipe_if_g3pcs = pipe_if_8gpcs
# pma_done_counter = 00000
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# ppm_cnt_rst = ppm_cnt_rst_dis
# ppm_deassert_early = deassert_early_dis
# ppm_det_buckets = ppm_300_100_bucket
# ppm_gen1_2_cnt = cnt_32k
# ppm_post_eidle_delay = cnt_200_cycles
# ppmsel = ppmsel_300
# prot_mode = other_protocols
# reconfig_settings = {}
# rxvalid_mask = rxvalid_mask_dis
# sigdet_wait_counter = 000
# sigdet_wait_counter_multi = 0
# silicon_rev = 20nm5
# sim_mode = disable
# spd_chg_rst_wait_cnt_en = false
# sup_mode = user_mode
# testout_sel = ppm_det_test
# wait_clk_on_off_timer = 0
# wait_pipe_synchronizing = 00
# wait_send_syncp_fbkp = 000
# 
# 
# ================================================
# Module twentynm_hssi_common_pld_pcs_interface
# ================================================
# dft_clk_out_en = dft_clk_out_disable
# dft_clk_out_sel = teng_rx_dft_clk
# hrdrstctrl_en = hrst_dis
# pcs_testbus_block_sel = pma_if
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_rx_pcs
# ================================================
# double_read_mode = double_read_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_tx_pcs
# ================================================
# double_write_mode = double_write_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_gen3_rx_pcs
# ================================================
# block_sync = bypass_block_sync
# block_sync_sm = disable_blk_sync_sm
# cdr_ctrl_force_unalgn = disable
# lpbk_force = lpbk_frce_dis
# mode = disable_pcs
# rate_match_fifo = bypass_rm_fifo
# rate_match_fifo_latency = low_latency
# reconfig_settings = {}
# reverse_lpbk = rev_lpbk_dis
# rx_b4gb_par_lpbk = b4gb_par_lpbk_dis
# rx_force_balign = dis_force_balign
# rx_ins_del_one_skip = ins_del_one_skip_dis
# rx_num_fixed_pat = 0
# rx_test_out_sel = rx_test_out0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_gen3_tx_pcs
# ================================================
# mode = disable_pcs
# reverse_lpbk = rev_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_bitslip = 00
# tx_gbox_byp = bypass_gbox
# 
# 
# ================================================
# Module twentynm_hssi_krfec_rx_pcs
# ================================================
# blksync_cor_en = detect
# bypass_gb = bypass_dis
# clr_ctrl = both_enabled
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# dv_start = with_blklock
# err_mark_type = err_mark_10g
# error_marking_en = err_mark_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# parity_invalid_enum = 08
# parity_valid_num = 4
# pipeln_blksync = enable
# pipeln_descrm = disable
# pipeln_errcorrect = disable
# pipeln_errtrap_ind = enable
# pipeln_errtrap_lfsr = disable
# pipeln_errtrap_loc = disable
# pipeln_errtrap_pat = disable
# pipeln_gearbox = enable
# pipeln_syndrm = enable
# pipeln_trans_dec = disable
# prot_mode = disable_mode
# receive_order = receive_lsb
# reconfig_settings = {}
# rx_testbus_sel = overall
# signal_ok_en = sig_ok_en
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_krfec_tx_pcs
# ================================================
# burst_err = burst_err_dis
# burst_err_len = burst_err_len1
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# enc_frame_query = enc_query_dis
# low_latency_en = disable
# pipeln_encoder = enable
# pipeln_scrambler = enable
# prot_mode = disable_mode
# silicon_rev = 20nm5
# sup_mode = user_mode
# transcode_err = trans_err_dis
# transmit_order = transmit_lsb
# tx_testbus_sel = overall
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen1_2
# ================================================
# elec_idle_delay_val = 0
# error_replace_pad = replace_edb
# hip_mode = dis_hip
# ind_error_reporting = dis_ind_error_reporting
# phystatus_delay_val = 0
# phystatus_rst_toggle = dis_phystatus_rst_toggle
# pipe_byte_de_serializer_en = dont_care_bds
# prot_mode = basic
# reconfig_settings = {}
# rpre_emph_a_val = 00
# rpre_emph_b_val = 00
# rpre_emph_c_val = 00
# rpre_emph_d_val = 00
# rpre_emph_e_val = 00
# rvod_sel_a_val = 00
# rvod_sel_b_val = 00
# rvod_sel_c_val = 00
# rvod_sel_d_val = 00
# rvod_sel_e_val = 00
# rx_pipe_enable = dis_pipe_rx
# rxdetect_bypass = dis_rxdetect_bypass
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_pipe_enable = dis_pipe_tx
# txswing = dis_txswing
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen3
# ================================================
# bypass_rx_detection_enable = false
# bypass_rx_preset = 0
# bypass_rx_preset_enable = false
# bypass_tx_coefficent = 00000
# bypass_tx_coefficent_enable = false
# elecidle_delay_g3 = 0
# ind_error_reporting = dis_ind_error_reporting
# mode = disable_pcs
# phy_status_delay_g12 = 0
# phy_status_delay_g3 = 0
# phystatus_rst_toggle_g12 = dis_phystatus_rst_toggle
# phystatus_rst_toggle_g3 = dis_phystatus_rst_toggle_g3
# rate_match_pad_insertion = dis_rm_fifo_pad_ins
# silicon_rev = 20nm5
# sup_mode = user_mode
# test_out_sel = disable_test_out
# 
# 
# ================================================
# Module twentynm_hssi_rx_pcs_pma_interface
# ================================================
# block_sel = eight_g_pcs
# channel_operation_mode = tx_rx_pair_enabled
# clkslip_sel = pld
# lpbk_en = disable
# master_clk_sel = master_rx_pma_clk
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_rx = pma_20b_rx
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_ver = prbs_off
# prot_mode_rx = eightg_basic_mode_rx
# reconfig_settings = {}
# rx_dyn_polarity_inversion = rx_dyn_polinv_dis
# rx_lpbk_en = lpbk_dis
# rx_prbs_force_signal_ok = force_sig_ok
# rx_prbs_mask = prbsmask128
# rx_prbs_mode = teng_mode
# rx_signalok_signaldet_sel = sel_sig_det
# rx_static_polarity_inversion = rx_stat_polinv_dis
# rx_uhsif_lpbk_en = uhsif_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_rx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_rx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_rx = individual_rx
# hd_10g_fifo_mode_rx = fifo_rx
# hd_10g_low_latency_en_rx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_rx = pma_64b_rx
# hd_10g_prot_mode_rx = disabled_prot_mode_rx
# hd_10g_shared_fifo_width_rx = single_rx
# hd_10g_sup_mode = user_mode
# hd_10g_test_bus_mode = rx
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_rx = individual_rx
# hd_8g_fifo_mode_rx = fifo_rx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_rx = pma_20b_rx
# hd_8g_prot_mode_rx = basic_rm_disable_rx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_clklow_clk_hz = 09502f90
# hd_chnl_ctrl_plane_bonding_rx = individual_rx
# hd_chnl_fref_clk_hz = 09502f90
# hd_chnl_frequency_rules_en = disable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_rx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_operating_voltage = standard
# hd_chnl_pcs_ac_pwr_rules_en = disable
# hd_chnl_pcs_pair_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_pwr_scaling_clk = pma_rx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_rx = fifo_rx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_rx_clk_hz = 09502f90
# hd_chnl_pma_dw_rx = pma_20b_rx
# hd_chnl_pma_rx_clk_hz = 09502f90
# hd_chnl_prot_mode_rx = basic_8gpcs_rm_disable_rx
# hd_chnl_shared_fifo_width_rx = single_rx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_chnl_transparent_pcs_rx = disable
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_rx = non_teng_mode_rx
# hd_fifo_shared_fifo_width_rx = single_rx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_rx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_rx = disabled_prot_mode_rx
# hd_krfec_sup_mode = user_mode
# hd_krfec_test_bus_mode = tx
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_rx = eightg_and_g3_pld_fifo_mode_rx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_rx = pma_20b_rx
# hd_pmaif_prot_mode_rx = eightg_basic_mode_rx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_rx_block_sel = eightg
# pcs_rx_clk_out_sel = eightg_clk_out
# pcs_rx_clk_sel = pld_rx_clk
# pcs_rx_hip_clk_en = hip_rx_disable
# pcs_rx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_tx_pcs_pma_interface
# ================================================
# bypass_pma_txelecidle = true
# channel_operation_mode = tx_rx_pair_enabled
# lpbk_en = disable
# master_clk_sel = master_tx_pma_clk
# pcie_sub_prot_mode_tx = other_prot_mode
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_tx = pma_20b_tx
# pma_if_dft_en = dft_dis
# pmagate_en = pmagate_dis
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_gen_pat = prbs_gen_dis
# prot_mode_tx = eightg_basic_mode_tx
# reconfig_settings = {}
# silicon_rev = 20nm5
# sq_wave_num = sq_wave_default
# sqwgen_clken = sqwgen_clk_dis
# sup_mode = user_mode
# tx_dyn_polarity_inversion = tx_dyn_polinv_dis
# tx_pma_data_sel = eight_g_pcs
# tx_static_polarity_inversion = tx_stat_polinv_dis
# uhsif_cnt_step_filt_before_lock = uhsif_filt_stepsz_b4lock_2
# uhsif_cnt_thresh_filt_after_lock_value = 0
# uhsif_cnt_thresh_filt_before_lock = uhsif_filt_cntthr_b4lock_8
# uhsif_dcn_test_update_period = uhsif_dcn_test_period_4
# uhsif_dcn_testmode_enable = uhsif_dcn_test_mode_disable
# uhsif_dead_zone_count_thresh = uhsif_dzt_cnt_thr_2
# uhsif_dead_zone_detection_enable = uhsif_dzt_disable
# uhsif_dead_zone_obser_window = uhsif_dzt_obr_win_16
# uhsif_dead_zone_skip_size = uhsif_dzt_skipsz_4
# uhsif_delay_cell_index_sel = uhsif_index_cram
# uhsif_delay_cell_margin = uhsif_dcn_margin_2
# uhsif_delay_cell_static_index_value = 00
# uhsif_dft_dead_zone_control = uhsif_dft_dz_det_val_0
# uhsif_dft_up_filt_control = uhsif_dft_up_val_0
# uhsif_enable = uhsif_disable
# uhsif_lock_det_segsz_after_lock = uhsif_lkd_segsz_aflock_512
# uhsif_lock_det_segsz_before_lock = uhsif_lkd_segsz_b4lock_16
# uhsif_lock_det_thresh_cnt_after_lock_value = 0
# uhsif_lock_det_thresh_cnt_before_lock_value = 0
# uhsif_lock_det_thresh_diff_after_lock_value = 0
# uhsif_lock_det_thresh_diff_before_lock_value = 0
# 
# 
# ================================================
# Module twentynm_hssi_tx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_tx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_tx = ctrl_master_tx
# hd_10g_fifo_mode_tx = fifo_tx
# hd_10g_low_latency_en_tx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_tx = pma_64b_tx
# hd_10g_prot_mode_tx = disabled_prot_mode_tx
# hd_10g_shared_fifo_width_tx = single_tx
# hd_10g_sup_mode = user_mode
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_tx = ctrl_master_tx
# hd_8g_fifo_mode_tx = fifo_tx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_tx = pma_20b_tx
# hd_8g_prot_mode_tx = basic_tx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_ctrl_plane_bonding_tx = ctrl_master_tx
# hd_chnl_frequency_rules_en = enable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_tx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_pcs_tx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_tx_pwr_scaling_clk = pma_tx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_tx = fifo_tx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_tx_clk_hz = 09502f90
# hd_chnl_pld_uhsif_tx_clk_hz = 00000000
# hd_chnl_pma_dw_tx = pma_20b_tx
# hd_chnl_pma_tx_clk_hz = 09502f90
# hd_chnl_prot_mode_tx = basic_8gpcs_tx
# hd_chnl_shared_fifo_width_tx = single_tx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_tx = non_teng_mode_tx
# hd_fifo_shared_fifo_width_tx = single_tx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_tx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_tx = disabled_prot_mode_tx
# hd_krfec_sup_mode = user_mode
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_tx = eightg_and_g3_pld_fifo_mode_tx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_ctrl_plane_bonding = individual
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_tx = pma_20b_tx
# hd_pmaif_prot_mode_tx = eightg_basic_mode_tx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_tx_clk_out_sel = eightg_clk_out
# pcs_tx_clk_source = eightg
# pcs_tx_data_source = hip_disable
# pcs_tx_delay1_clk_en = delay1_clk_disable
# pcs_tx_delay1_clk_sel = pcs_tx_clk
# pcs_tx_delay1_ctrl = delay1_path0
# pcs_tx_delay1_data_sel = one_ff_delay
# pcs_tx_delay2_clk_en = delay2_clk_disable
# pcs_tx_delay2_ctrl = delay2_path0
# pcs_tx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_pma_adaptation
# ================================================
# adapt_dfe_control_sel = r_adapt_dfe_control_sel_0
# adapt_dfe_sel = r_adapt_dfe_sel_0
# adapt_mode = manual
# adapt_vga_sel = r_adapt_vga_sel_0
# adapt_vref_sel = r_adapt_vref_sel_0
# adp_1s_ctle_bypass = radp_1s_ctle_bypass_0
# adp_4s_ctle_bypass = radp_4s_ctle_bypass_0
# adp_adapt_control_sel = radp_adapt_control_sel_0
# adp_adapt_rstn = radp_adapt_rstn_1
# adp_adapt_start = radp_adapt_start_0
# adp_bist_auxpath_en = radp_bist_auxpath_disable
# adp_bist_count_rstn = radp_bist_count_rstn_0
# adp_bist_datapath_en = radp_bist_datapath_disable
# adp_bist_mode = radp_bist_mode_0
# adp_bist_odi_dfe_sel = radp_bist_odi_dfe_sel_0
# adp_bist_spec_en = radp_bist_spec_en_0
# adp_control_mux_bypass = radp_control_mux_bypass_0
# adp_ctle_acgain_4s = radp_ctle_acgain_4s_0
# adp_ctle_adapt_bw = radp_ctle_adapt_bw_3
# adp_ctle_adapt_cycle_window = radp_ctle_adapt_cycle_window_6
# adp_ctle_adapt_oneshot = radp_ctle_adapt_oneshot_1
# adp_ctle_en = radp_ctle_disable
# adp_ctle_eqz_1s_sel = radp_ctle_eqz_1s_sel_0
# adp_ctle_force_spec_sign = radp_ctle_force_spec_sign_0
# adp_ctle_hold_en = radp_ctle_not_held
# adp_ctle_load = radp_ctle_load_0
# adp_ctle_load_value = radp_ctle_load_value_0
# adp_ctle_scale = radp_ctle_scale_0
# adp_ctle_scale_en = radp_ctle_scale_en_0
# adp_ctle_spec_sign = radp_ctle_spec_sign_0
# adp_ctle_sweep_direction = radp_ctle_sweep_direction_1
# adp_ctle_threshold = radp_ctle_threshold_0
# adp_ctle_threshold_en = radp_ctle_threshold_en_0
# adp_ctle_vref_polarity = radp_ctle_vref_polarity_0
# adp_ctle_window = radp_ctle_window_0
# adp_dfe_bw = radp_dfe_bw_3
# adp_dfe_clkout_div_sel = radp_dfe_clkout_div_sel_0
# adp_dfe_cycle = radp_dfe_cycle_6
# adp_dfe_fltap1 = radp_dfe_fltap1_0
# adp_dfe_fltap1_sgn = radp_dfe_fltap1_sgn_0
# adp_dfe_fltap2 = radp_dfe_fltap2_0
# adp_dfe_fltap2_sgn = radp_dfe_fltap2_sgn_0
# adp_dfe_fltap3 = radp_dfe_fltap3_0
# adp_dfe_fltap3_sgn = radp_dfe_fltap3_sgn_0
# adp_dfe_fltap4 = radp_dfe_fltap4_0
# adp_dfe_fltap4_sgn = radp_dfe_fltap4_sgn_0
# adp_dfe_fltap_bypass = radp_dfe_fltap_bypass_0
# adp_dfe_fltap_en = radp_dfe_fltap_disable
# adp_dfe_fltap_hold_en = radp_dfe_fltap_not_held
# adp_dfe_fltap_load = radp_dfe_fltap_load_0
# adp_dfe_fltap_position = radp_dfe_fltap_position_0
# adp_dfe_force_spec_sign = radp_dfe_force_spec_sign_0
# adp_dfe_fxtap1 = radp_dfe_fxtap1_0
# adp_dfe_fxtap2 = radp_dfe_fxtap2_0
# adp_dfe_fxtap2_sgn = radp_dfe_fxtap2_sgn_0
# adp_dfe_fxtap3 = radp_dfe_fxtap3_0
# adp_dfe_fxtap3_sgn = radp_dfe_fxtap3_sgn_0
# adp_dfe_fxtap4 = radp_dfe_fxtap4_0
# adp_dfe_fxtap4_sgn = radp_dfe_fxtap4_sgn_0
# adp_dfe_fxtap5 = radp_dfe_fxtap5_0
# adp_dfe_fxtap5_sgn = radp_dfe_fxtap5_sgn_0
# adp_dfe_fxtap6 = radp_dfe_fxtap6_0
# adp_dfe_fxtap6_sgn = radp_dfe_fxtap6_sgn_0
# adp_dfe_fxtap7 = radp_dfe_fxtap7_0
# adp_dfe_fxtap7_sgn = radp_dfe_fxtap7_sgn_0
# adp_dfe_fxtap_bypass = radp_dfe_fxtap_bypass_0
# adp_dfe_fxtap_en = radp_dfe_fxtap_disable
# adp_dfe_fxtap_hold_en = radp_dfe_fxtap_not_held
# adp_dfe_fxtap_load = radp_dfe_fxtap_load_0
# adp_dfe_mode = radp_dfe_mode_0
# adp_dfe_spec_sign = radp_dfe_spec_sign_0
# adp_dfe_vref_polarity = radp_dfe_vref_polarity_0
# adp_force_freqlock = radp_force_freqlock_off
# adp_frame_capture = radp_frame_capture_0
# adp_frame_en = radp_frame_en_0
# adp_frame_odi_sel = radp_frame_odi_sel_0
# adp_frame_out_sel = radp_frame_out_sel_0
# adp_lfeq_fb_sel = radp_lfeq_fb_sel_0
# adp_mode = radp_mode_0
# adp_odi_control_sel = radp_odi_control_sel_0
# adp_onetime_dfe = radp_onetime_dfe_1
# adp_spec_avg_window = radp_spec_avg_window_4
# adp_spec_trans_filter = radp_spec_trans_filter_2
# adp_status_sel = radp_status_sel_0
# adp_vga_bypass = radp_vga_bypass_0
# adp_vga_en = radp_vga_disable
# adp_vga_load = radp_vga_load_0
# adp_vga_polarity = radp_vga_polarity_0
# adp_vga_sel = radp_vga_sel_0
# adp_vga_sweep_direction = radp_vga_sweep_direction_1
# adp_vga_threshold = radp_vga_threshold_4
# adp_vref_bw = radp_vref_bw_1
# adp_vref_bypass = radp_vref_bypass_0
# adp_vref_cycle = radp_vref_cycle_6
# adp_vref_dfe_spec_en = radp_vref_dfe_spec_en_0
# adp_vref_en = radp_vref_disable
# adp_vref_hold_en = radp_vref_not_held
# adp_vref_load = radp_vref_load_0
# adp_vref_polarity = radp_vref_polarity_0
# adp_vref_sel = radp_vref_sel_21
# adp_vref_vga_level = radp_vref_vga_level_13
# datarate = 3125000000 bps
# initial_settings = true
# odi_count_threshold = rodi_count_threshold_0
# odi_dfe_spec_en = rodi_dfe_spec_en_0
# odi_en = rodi_en_0
# odi_mode = rodi_mode_0
# odi_rstn = rodi_rstn_0
# odi_spec_sel = rodi_spec_sel_0
# odi_start = rodi_start_0
# odi_vref_sel = rodi_vref_sel_0
# optimal = false
# prot_mode = basic_rx
# rrx_pcie_eqz = rrx_pcie_eqz_0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_cdr_refclk_select_mux
# ================================================
# local_cdr_clkin_scratch0_src = cdr_clkin_scratch0_src_refclk_iqclk
# local_cdr_clkin_scratch1_src = cdr_clkin_scratch1_src_refclk_iqclk
# local_cdr_clkin_scratch2_src = cdr_clkin_scratch2_src_refclk_iqclk
# local_cdr_clkin_scratch3_src = cdr_clkin_scratch3_src_refclk_iqclk
# local_cdr_clkin_scratch4_src = cdr_clkin_scratch4_src_refclk_iqclk
# inclk0_logical_to_physical_mapping = ref_iqclk0
# inclk1_logical_to_physical_mapping = ref_iqclk1
# inclk2_logical_to_physical_mapping = ref_iqclk2
# inclk3_logical_to_physical_mapping = ref_iqclk3
# inclk4_logical_to_physical_mapping = ref_iqclk4
# powerdown_mode = powerup
# receiver_detect_src = iqclk_src
# refclk_select = ref_iqclk0
# silicon_rev = 20nm5
# local_xmux_refclk_src = refclk_iqclk
# local_xpm_iqref_mux_iqclk_sel = ref_iqclk0
# local_xpm_iqref_mux_scratch0_src = scratch0_ref_iqclk0
# local_xpm_iqref_mux_scratch1_src = scratch1_ref_iqclk1
# local_xpm_iqref_mux_scratch2_src = scratch2_ref_iqclk2
# local_xpm_iqref_mux_scratch3_src = scratch3_ref_iqclk3
# local_xpm_iqref_mux_scratch4_src = scratch4_ref_iqclk4
# 
# 
# ================================================
# Module twentynm_hssi_pma_channel_pll
# ================================================
# analog_mode = user_custom
# atb_select_control = atb_off
# auto_reset_on = auto_reset_off
# bandwidth_range_high = 0 hz
# bandwidth_range_low = 0 hz
# bbpd_data_pattern_filter_select = bbpd_data_pat_off
# bw_sel = medium
# cdr_odi_select = sel_cdr
# cdr_phaselock_mode = no_ignore_lock
# cdr_powerdown_mode = power_up
# cgb_div =           1
# chgpmp_current_pd = cp_current_pd_setting2
# chgpmp_current_pfd = cp_current_pfd_setting3
# chgpmp_replicate = false
# chgpmp_testmode = cp_test_disable
# clklow_mux_select = clklow_mux_cdr_fbclk
# datarate = 3125000000 bps
# diag_loopback_enable = false
# disable_up_dn = true
# f_max_pfd = 0 hz
# f_max_ref = 0 hz
# f_max_vco = 0 hz
# f_min_gt_channel = 0 hz
# f_min_pfd = 0 hz
# f_min_ref = 0 hz
# f_min_vco = 0 hz
# fb_select = direct_fb
# fref_clklow_div =           1
# fref_mux_select = fref_mux_cdr_refclk
# gpon_lck2ref_control = gpon_lck2ref_off
# initial_settings = true
# iqclk_mux_sel = power_down
# is_cascaded_pll = false
# lck2ref_delay_control = lck2ref_delay_2
# lf_resistor_pd = lf_pd_setting0
# lf_resistor_pfd = lf_pfd_setting2
# lf_ripple_cap = lf_no_ripple
# loop_filter_bias_select = lpflt_bias_off
# loopback_mode = loopback_disabled
# lpd_counter = 04
# lpfd_counter = 08
# ltd_ltr_micro_controller_select = ltd_ltr_pcs
# m_counter =          10
# n_counter_scratch =  2
# n_counter_scratch = 02
# optimal = false
# output_clock_frequency = 1562500000 Hz
# pcie_gen = non_pcie
# pd_fastlock_mode = false
# pd_l_counter =           4
# pfd_l_counter =           8
# pm_speed_grade = e2
# pma_width =          20
# position = position_unknown
# power_mode = low_power
# primary_use = cdr
# prot_mode = basic_rx
# reference_clock_frequency = 156250000 hz
# requires_gt_capable_channel = false
# reverse_serial_loopback = no_loopback
# set_cdr_v2i_enable = true
# set_cdr_vco_reset = false
# set_cdr_vco_speed = 07
# set_cdr_vco_speed_fix = 06
# set_cdr_vco_speed_pciegen3 = cdr_vco_max_speedbin_pciegen3
# side = side_unknown
# silicon_rev = 20nm5
# sup_mode = user_mode
# top_or_bottom = tb_unknown
# tx_pll_prot_mode = txpll_unused
# txpll_hclk_driver_enable = false
# uc_cru_rstb = cdr_lf_reset_off
# uc_ro_cal = uc_ro_cal_on
# uc_ro_cal_status = uc_ro_cal_notdone
# vco_freq = 6250000000 Hz
# vco_overrange_voltage = vco_overrange_off
# vco_underrange_voltage = vco_underange_off
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_buf
# ================================================
# act_isource_disable = isrc_en
# bodybias_enable = bodybias_en
# bodybias_select = bodybias_sel1
# bypass_eqz_stages_234 = bypass_off
# cdrclk_to_cgb = cdrclk_2cgb_dis
# cgm_bias_disable = cgmbias_en
# datarate = 3125000000 bps
# diag_lp_en = dlp_off
# eq_bw_sel = eq_bw_1
# eq_dc_gain_trim = no_dc_gain
# xrx_path_initial_settings = true
# input_vcm_sel = high_vcm
# iostandard = hssi_diffio
# lfeq_enable = non_lfeq_mode
# lfeq_zero_control = lfeq_setting_2
# link_rx = sr
# link_rx = sr
# loopback_modes = lpbk_disable
# offset_cal_pd = eqz1_en
# offset_cancellation_coarse = coarse_setting_00
# offset_cancellation_ctrl = volt_0mv
# offset_cancellation_fine = fine_setting_00
# offset_pd = oc_en
# one_stage_enable = non_s1_mode
# xrx_path_optimal = false
# pdb_rx = normal_rx_on
# pm_speed_grade = e2
# pm_tx_rx_cvp_mode = cvp_off
# pm_tx_rx_pcie_gen = non_pcie
# pm_tx_rx_pcie_gen_bitwidth = pcie_gen3_32b
# pm_tx_rx_testmux_select = setting0
# power_mode_rx = low_power
# power_mode_rx = low_power
# power_rail_eht =           0
# power_rail_er =           0
# xrx_path_prot_mode = basic_rx
# qpi_enable = non_qpi_mode
# refclk_en = disable
# rx_atb_select = atb_disable
# rx_refclk_divider = bypass_divider
# rx_sel_bias_source = bias_vcmdrv
# silicon_rev = 20nm5
# xrx_path_sup_mode = user_mode
# term_sel = r_r1
# term_tri_enable = disable_tri
# vccela_supply_voltage = vccela_1p1v
# vcm_current_add = vcm_current_default
# vcm_sel = vcm_setting_10
# vga_bandwidth_select = vga_bw_1
# xrx_path_analog_mode = user_custom
# xrx_path_datarate = 3125000000 bps
# xrx_path_datawidth = 14
# xrx_path_gt_enabled = disable
# xrx_path_initial_settings = true
# xrx_path_jtag_hys = hys_increase_disable
# xrx_path_jtag_lp = lp_off
# xrx_path_optimal = false
# xrx_path_pma_rx_divclk_hz_bin = 0000000009502f90
# xrx_path_prot_mode = basic_rx
# xrx_path_sup_mode = user_mode
# xrx_path_uc_cal_enable = rx_cal_off
# xrx_path_uc_cru_rstb = cdr_lf_reset_off
# xrx_path_uc_pcie_sw = uc_pcie_gen1
# xrx_path_uc_rx_rstb = rx_reset_on
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_deser
# ================================================
# bitslip_bypass = bs_bypass_yes
# clkdiv_source = vco_bypass_normal
# clkdivrx_user_mode = clkdivrx_user_disabled
# datarate = 3125000000 bps
# deser_factor =          20
# deser_powerdown = deser_power_up
# force_adaptation_outputs = normal_outputs
# force_clkdiv_for_testing = normal_clkdiv
# optimal = false
# pcie_gen = non_pcie
# pcie_gen_bitwidth = pcie_gen3_32b
# prot_mode = basic_rx
# rst_n_adapt_odi = no_rst_adapt_odi
# sdclk_enable = false
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_dfe
# ================================================
# atb_select = atb_disable
# datarate = 3125000000 bps
# dft_en = dft_disable
# initial_settings = true
# oc_sa_adp1 = 00
# oc_sa_adp2 = 00
# oc_sa_c270 = 00
# oc_sa_c90 = 00
# oc_sa_d0c0 = 00
# oc_sa_d0c180 = 00
# oc_sa_d1c0 = 00
# oc_sa_d1c180 = 00
# optimal = false
# pdb = 6466655f656e61626c65
# pdb_fixedtap = fixtap_dfe_powerdown
# pdb_floattap = floattap_dfe_powerdown
# pdb_fxtap4t7 = fxtap4t7_powerdown
# power_mode = low_power
# prot_mode = basic_rx
# sel_fltapstep_dec = fltap_step_no_dec
# sel_fltapstep_inc = fltap_step_no_inc
# sel_fxtapstep_dec = fxtap_step_no_dec
# sel_fxtapstep_inc = fxtap_step_no_inc
# sel_oc_en = off_canc_disable
# sel_probe_tstmx = probe_tstmx_none
# silicon_rev = 20nm5
# sup_mode = user_mode
# uc_rx_dfe_cal = uc_rx_dfe_cal_off
# uc_rx_dfe_cal_status = uc_rx_dfe_cal_notdone
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_odi
# ================================================
# clk_dcd_bypass = no_bypass
# datarate = 3125000000 bps
# enable_odi = power_down_eye
# initial_settings = true
# invert_dfe_vref = no_inversion
# monitor_bw_sel = bw_1
# oc_sa_c0 = 00
# oc_sa_c180 = 00
# optimal = false
# phase_steps_64_vs_128 = phase_steps_64
# phase_steps_sel = step40
# power_mode = low_power
# prot_mode = basic_rx
# sel_oc_en = off_canc_disable
# silicon_rev = 20nm5
# step_ctrl_sel = feedback_mode
# sup_mode = user_mode
# v_vert_sel = plus
# v_vert_threshold_scaling = scale_3
# vert_threshold = vert_0
# 
# 
# ================================================
# Module twentynm_hssi_pma_rx_sd
# ================================================
# link = sr
# optimal = false
# power_mode = low_power
# prot_mode = basic_rx
# sd_output_off =           1
# sd_output_on =          15
# sd_pdb = sd_off
# sd_threshold =           3
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_buf
# ================================================
# xtx_path_calibration_en = false
# compensation_driver_en = disable
# compensation_en = enable
# cpen_ctrl = cp_l0
# datarate = 3125000000 bps
# dcd_detection_en = enable
# dft_sel = dft_disabled
# duty_cycle_correction_bandwidth = dcc_bw_12
# duty_cycle_correction_mode_ctrl = dcc_disable
# duty_cycle_correction_reference1 = dcc_ref1_3
# duty_cycle_correction_reference2 = dcc_ref2_3
# duty_cycle_correction_reset_n = reset_n
# duty_cycle_input_polarity = dcc_input_pos
# duty_cycle_setting = dcc_t32
# duty_cycle_setting_aux = dcc2_t32
# xtx_path_initial_settings = true
# jtag_drv_sel = drv1
# jtag_lp = lp_off
# link_tx = sr
# link_tx = sr
# low_power_en = disable
# lst = 6174625f64697361626c6564
# mcgb_location_for_pcie = 1
# xtx_path_optimal = false
# pm_speed_grade = e2
# power_mode = low_power
# power_rail_eht =           0
# power_rail_et =           0
# pre_emp_sign_1st_post_tap = fir_post_1t_neg
# pre_emp_sign_2nd_post_tap = fir_post_2t_neg
# pre_emp_sign_pre_tap_1t = fir_pre_1t_neg
# pre_emp_sign_pre_tap_2t = fir_pre_2t_neg
# pre_emp_switching_ctrl_1st_post_tap = 00
# pre_emp_switching_ctrl_2nd_post_tap = 0
# pre_emp_switching_ctrl_pre_tap_1t = 00
# pre_emp_switching_ctrl_pre_tap_2t = 0
# xtx_path_prot_mode = basic_tx
# res_cal_local = non_local
# rx_det = mode_0
# rx_det_output_sel = rx_det_pcie_out
# rx_det_pdb = rx_det_off
# ser_powerdown = normal_ser_on
# silicon_rev = 20nm5
# slew_rate_ctrl = slew_r7
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# term_code = rterm_code7
# term_n_tune = rterm_n0
# term_p_tune = rterm_p0
# term_sel = r_r1
# tx_powerdown = normal_tx_on
# uc_dcd_cal = uc_dcd_cal_off
# uc_dcd_cal_status = uc_dcd_cal_notdone
# uc_gen3 = gen3_off
# uc_gen4 = gen4_off
# uc_skew_cal = uc_skew_cal_off
# uc_skew_cal_status = uc_skew_cal_notdone
# uc_txvod_cal = uc_tx_vod_cal_off
# uc_txvod_cal_cont = uc_tx_vod_cal_cont_off
# uc_txvod_cal_status = uc_tx_vod_cal_notdone
# uc_vcc_setting = vcc_setting0
# user_fir_coeff_ctrl_sel = ram_ctl
# vod_output_swing_ctrl = 00
# vreg_output = vccdreg_nominal
# xtx_path_analog_mode = user_custom
# xtx_path_bonding_mode = x1_non_bonded
# xtx_path_calibration_en = false
# xtx_path_clock_divider_ratio = 1
# xtx_path_datarate = 3125000000 bps
# xtx_path_datawidth = 14
# xtx_path_gt_enabled = disable
# xtx_path_initial_settings = true
# xtx_path_optimal = false
# xtx_path_pma_tx_divclk_hz_bin = 0000000009502f90
# xtx_path_prot_mode = basic_tx
# xtx_path_sup_mode = user_mode
# xtx_path_swing_level = lv
# xtx_path_tx_pll_clk_hz = 1562500000
# 
# ================ INPUT =================
# prot_mode           = basic_tx
# input_select_x1     = unused
# input_select_xn     = sel_x6_dn
# input_select_gen3   = unused
# ================ OUTPUT ================
# x1_clock_source_sel = same_ch_txpll
# xn_clock_source_sel = sel_x6_bot
# ================ END ===================
# 
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_cgb
# ================================================
# bitslip_enable = disable_bitslip
# bonding_mode = x1_non_bonded
# bonding_reset_enable = disallow_bonding_reset
# cgb_power_down = normal_cgb
# datarate = 3125000000 bps
# dprio_cgb_vreg_boost = no_voltage_boost
# initial_settings = true
# input_select_gen3 = unused
# input_select_x1 = unused
# input_select_xn = sel_x6_dn
# observe_cgb_clocks = observe_nothing
# pcie_gen3_bitwidth = pciegen3_wide
# prot_mode = basic_tx
# scratch0_x1_clock_src = unused
# scratch1_x1_clock_src = unused
# scratch2_x1_clock_src = unused
# scratch3_x1_clock_src = unused
# select_done_master_or_slave = choose_master_pcie_sw_done
# ser_mode = twenty_bit
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_ucontrol_en = disable
# tx_ucontrol_pcie = gen1
# tx_ucontrol_reset = disable
# vccdreg_output = vccdreg_nominal
# local_x1_clock_source_sel = same_ch_txpll
# x1_div_m_sel = divbypass
# local_xn_clock_source_sel = sel_x6_bot
# 
# 
# ================================================
# Module twentynm_hssi_pma_tx_ser
# ================================================
# bonding_mode = x1_non_bonded
# clk_divtx_deskew = deskew_delay8
# control_clk_divtx = no_dft_control_clkdivtx
# duty_cycle_correction_mode_ctrl = dcc_disable
# initial_settings = true
# prot_mode = basic_tx
# ser_clk_divtx_user_sel = divtx_user_off
# ser_clk_mon = disable_clk_mon
# ser_powerdown = normal_poweron_ser
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_10g_rx_pcs
# ================================================
# advanced_user_mode = disable
# align_del = align_del_dis
# ber_bit_err_total_cnt = bit_err_total_cnt_10g
# ber_clken = ber_clk_dis
# ber_xus_timer_window = 004c4a
# bitslip_mode = bitslip_dis
# blksync_bitslip_type = bitslip_comb
# blksync_bitslip_wait_cnt = 1
# blksync_bitslip_wait_type = bitslip_cnt
# blksync_bypass = blksync_bypass_en
# blksync_clken = blksync_clk_dis
# blksync_enum_invalid_sh_cnt = enum_invalid_sh_cnt_10g
# blksync_knum_sh_cnt_postlock = knum_sh_cnt_postlock_10g
# blksync_knum_sh_cnt_prelock = knum_sh_cnt_prelock_10g
# blksync_pipeln = blksync_pipeln_dis
# clr_errblk_cnt_en = disable
# control_del = control_del_none
# crcchk_bypass = crcchk_bypass_en
# crcchk_clken = crcchk_clk_dis
# crcchk_inv = crcchk_inv_en
# crcchk_pipeln = crcchk_pipeln_en
# crcflag_pipeln = crcflag_pipeln_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# data_bit_reverse = data_bit_reverse_dis
# dec64b66b_clken = dec64b66b_clk_dis
# dec_64b66b_rxsm_bypass = dec_64b66b_rxsm_bypass_en
# descrm_bypass = descrm_bypass_en
# descrm_clken = descrm_clk_dis
# descrm_mode = async
# descrm_pipeln = enable
# dft_clk_out_sel = rx_master_clk
# dis_signal_ok = dis_signal_ok_en
# dispchk_bypass = dispchk_bypass_en
# empty_flag_type = empty_rd_side
# fast_path = fast_path_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_read = fifo_double_read_dis
# fifo_stop_rd = n_rd_empty
# fifo_stop_wr = n_wr_full
# force_align = force_align_dis
# frmsync_bypass = frmsync_bypass_en
# frmsync_clken = frmsync_clk_dis
# frmsync_enum_scrm = enum_scrm_default
# frmsync_enum_sync = enum_sync_default
# frmsync_flag_type = location_only
# frmsync_knum_sync = knum_sync_default
# frmsync_mfrm_length = 0800
# frmsync_pipeln = frmsync_pipeln_en
# full_flag_type = full_wr_side
# gb_rx_idwidth = width_64
# gb_rx_odwidth = width_64
# gbexp_clken = gbexp_clk_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# master_clk_sel = master_rx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# rand_clken = rand_clk_dis
# rd_clk_sel = rd_rx_pld_clk
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# rx_fifo_write_ctrl = blklock_stops
# rx_scrm_width = bit64
# rx_sh_location = msb
# rx_signal_ok_sel = synchronized_ver
# rx_sm_bypass = rx_sm_bypass_en
# rx_sm_hiber = rx_sm_hiber_en
# rx_sm_pipeln = rx_sm_pipeln_en
# rx_testbus_sel = rx_fifo_testbus1
# rx_true_b2b = b2b
# rxfifo_empty = empty_default
# rxfifo_full = full_default
# rxfifo_mode = phase_comp
# rxfifo_pempty = 02
# rxfifo_pfull = 17
# silicon_rev = 20nm5
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_10g_tx_pcs
# ================================================
# advanced_user_mode = disable
# bitslip_en = bitslip_dis
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# comp_cnt = 02
# compin_sel = compin_slave_top
# crcgen_bypass = crcgen_bypass_en
# crcgen_clken = crcgen_clk_dis
# crcgen_err = crcgen_err_dis
# crcgen_inv = crcgen_inv_en
# ctrl_bit_reverse = ctrl_bit_reverse_dis
# ctrl_plane_bonding = ctrl_slave_abv
# data_bit_reverse = data_bit_reverse_dis
# dft_clk_out_sel = tx_master_clk
# dispgen_bypass = dispgen_bypass_en
# dispgen_clken = dispgen_clk_dis
# dispgen_err = dispgen_err_dis
# dispgen_pipeln = dispgen_pipeln_dis
# distdwn_bypass_pipeln = distdwn_bypass_pipeln_dis
# distdwn_master = distdwn_master_dis
# distup_bypass_pipeln = distup_bypass_pipeln_dis
# distup_master = distup_master_dis
# dv_bond = dv_bond_en
# empty_flag_type = empty_rd_side
# enc64b66b_txsm_clken = enc64b66b_txsm_clk_dis
# enc_64b66b_txsm_bypass = enc_64b66b_txsm_bypass_en
# fastpath = fastpath_en
# fec_clken = fec_clk_dis
# fec_enable = fec_dis
# fifo_double_write = fifo_double_write_dis
# fifo_reg_fast = fifo_reg_fast_dis
# fifo_stop_rd = rd_empty
# fifo_stop_wr = n_wr_full
# frmgen_burst = frmgen_burst_dis
# frmgen_bypass = frmgen_bypass_en
# frmgen_clken = frmgen_clk_dis
# frmgen_mfrm_length = 0800
# frmgen_pipeln = frmgen_pipeln_en
# frmgen_pyld_ins = frmgen_pyld_ins_dis
# frmgen_wordslip = frmgen_wordslip_dis
# full_flag_type = full_wr_side
# gb_pipeln_bypass = disable
# gb_tx_idwidth = width_64
# gb_tx_odwidth = width_64
# gbred_clken = gbred_clk_dis
# indv = indv_dis
# low_latency_en = disable
# master_clk_sel = master_tx_pma_clk
# pempty_flag_type = pempty_rd_side
# pfull_flag_type = pfull_wr_side
# phcomp_rd_del = phcomp_rd_del2
# pld_if_type = fifo
# prot_mode = disable_mode
# pseudo_random = all_0
# pseudo_seed_a_bin = 03ffffffffffffff
# pseudo_seed_b_bin = 03ffffffffffffff
# random_disp = disable
# rdfifo_clken = rdfifo_clk_dis
# reconfig_settings = {}
# scrm_bypass = scrm_bypass_en
# scrm_clken = scrm_clk_dis
# scrm_mode = async
# scrm_pipeln = enable
# sh_err = sh_err_dis
# silicon_rev = 20nm5
# sop_mark = sop_mark_dis
# stretch_num_stages = zero_stage
# sup_mode = user_mode
# test_mode = test_off
# tx_scrm_err = scrm_err_dis
# tx_scrm_width = bit64
# tx_sh_location = msb
# tx_sm_bypass = tx_sm_bypass_en
# tx_sm_pipeln = tx_sm_pipeln_en
# tx_testbus_sel = tx_fifo_testbus1
# txfifo_empty = empty_default
# txfifo_full = full_default
# txfifo_mode = phase_comp
# txfifo_pempty = 2
# txfifo_pfull = b
# wr_clk_sel = wr_tx_pld_clk
# wrfifo_clken = wrfifo_clk_dis
# 
# 
# ================================================
# Module twentynm_hssi_8g_rx_pcs
# ================================================
# auto_error_replacement = dis_err_replace
# auto_speed_nego = dis_asn
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_deserializer = dis_bds
# cdr_ctrl_rxvalid_mask = dis_rxvalid_mask
# clkcmp_pattern_n = 00000
# clkcmp_pattern_p = 00000
# clock_gate_bds_dec_asn = dis_bds_dec_asn_clk_gating
# clock_gate_cdr_eidle = en_cdr_eidle_clk_gating
# clock_gate_dw_pc_wrclk = dis_dw_pc_wrclk_gating
# clock_gate_dw_rm_rd = en_dw_rm_rdclk_gating
# clock_gate_dw_rm_wr = en_dw_rm_wrclk_gating
# clock_gate_dw_wa = dis_dw_wa_clk_gating
# clock_gate_pc_rdclk = dis_pc_rdclk_gating
# clock_gate_sw_pc_wrclk = dis_sw_pc_wrclk_gating
# clock_gate_sw_rm_rd = en_sw_rm_rdclk_gating
# clock_gate_sw_rm_wr = en_sw_rm_wrclk_gating
# clock_gate_sw_wa = dis_sw_wa_clk_gating
# clock_observation_in_pld_core = internal_sw_wa_clk
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_slave_above
# ctrl_plane_bonding_distribution = not_master_chnl_distr
# eidle_entry_eios = dis_eidle_eios
# eidle_entry_iei = dis_eidle_iei
# eidle_entry_sd = dis_eidle_sd
# eightb_tenb_decoder = dis_8b10b
# err_flags_sel = err_flags_wa
# fixed_pat_det = dis_fixed_patdet
# fixed_pat_num = 0
# force_signal_detect = en_force_signal_detect
# gen3_clk_en = disable_clk
# gen3_rx_clk_sel = rcvd_clk
# gen3_tx_clk_sel = tx_pma_clk
# hip_mode = dis_hip
# ibm_invalid_code = dis_ibm_invalid_code
# invalid_code_flag_only = dis_invalid_code_only
# pad_or_edb_error_replace = replace_edb
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# pipe_if_enable = dis_pipe_rx
# pma_dw = twenty_bit
# polinv_8b10b_dec = dis_polinv_8b10b_dec
# prot_mode = basic_rm_disable
# rate_match = dis_rm
# rate_match_del_thres = dis_rm_del_thres
# rate_match_empty_thres = dis_rm_empty_thres
# rate_match_full_thres = dis_rm_full_thres
# rate_match_ins_thres = dis_rm_ins_thres
# rate_match_start_thres = dis_rm_start_thres
# reconfig_settings = {}
# rx_clk2 = rcvd_clk_clk2
# rx_clk_free_running = en_rx_clk_free_run
# rx_pcs_urst = en_rx_pcs_urst
# rx_rcvd_clk = rcvd_clk_rcvd_clk
# rx_rd_clk = pld_rx_clk
# rx_refclk = dis_refclk_sel
# rx_wr_clk = rx_clk2_div_1_2_4
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# sync_sm_idle_eios = dis_syncsm_idle
# test_bus_sel = tx_testbus
# tx_rx_parallel_loopback = dis_plpbk
# wa_boundary_lock_ctrl = sync_sm
# wa_clk_slip_spacing = 010
# wa_det_latency_sync_status_beh = dont_care_assert_sync
# wa_disp_err_flag = en_disp_err_flag
# wa_kchar = dis_kchar
# wa_pd = wa_pd_20
# wa_pd_data_bin = 00000000000a0d7c
# wa_pd_polarity = en_pd_both_pol
# wa_pld_controlled = dis_pld_ctrl
# wa_renumber_data = 01
# wa_rgnumber_data = 01
# wa_rknumber_data = 01
# wa_rosnumber_data = 0
# wa_rvnumber_data = 0000
# wa_sync_sm_ctrl = dw_basic_sync_sm
# wait_cnt = 000
# 
# 
# ================================================
# Module twentynm_hssi_8g_tx_pcs
# ================================================
# auto_speed_nego_gen2 = dis_asn_g2
# bit_reversal = dis_bit_reversal
# bonding_dft_en = dft_dis
# bonding_dft_val = dft_0
# bypass_pipeline_reg = dis_bypass_pipeline
# byte_serializer = dis_bs
# clock_gate_bs_enc = dis_bs_enc_clk_gating
# clock_gate_dw_fifowr = dis_dw_fifowr_clk_gating
# clock_gate_fiford = dis_fiford_clk_gating
# clock_gate_sw_fifowr = dis_sw_fifowr_clk_gating
# clock_observation_in_pld_core = internal_refclk_b
# ctrl_plane_bonding_compensation = dis_compensation
# ctrl_plane_bonding_consumption = bundled_slave_above
# ctrl_plane_bonding_distribution = not_master_chnl_distr
# data_selection_8b10b_encoder_input = normal_data_path
# dynamic_clk_switch = dis_dyn_clk_switch
# eightb_tenb_disp_ctrl = dis_disp_ctrl
# eightb_tenb_encoder = dis_8b10b
# force_echar = dis_force_echar
# force_kchar = dis_force_kchar
# gen3_tx_clk_sel = dis_tx_clk
# gen3_tx_pipe_clk_sel = dis_tx_pipe_clk
# hip_mode = dis_hip
# pcs_bypass = dis_pcs_bypass
# phase_comp_rdptr = enable_rdptr
# phase_compensation_fifo = low_latency
# phfifo_write_clk_sel = pld_tx_clk
# pma_dw = twenty_bit
# prot_mode = basic
# reconfig_settings = {}
# refclk_b_clk_sel = tx_pma_clock
# revloop_back_rm = dis_rev_loopback_rx_rm
# silicon_rev = 20nm5
# sup_mode = user_mode
# symbol_swap = dis_symbol_swap
# tx_bitslip = dis_tx_bitslip
# tx_compliance_controlled_disparity = dis_txcompliance
# tx_fast_pld_reg = dis_tx_fast_pld_reg
# txclk_freerun = en_freerun_tx
# txpcs_urst = en_txpcs_urst
# 
# 
# ================================================
# Module twentynm_hssi_common_pcs_pma_interface
# ================================================
# asn_clk_enable = false
# asn_enable = dis_asn
# block_sel = eight_g_pcs
# bypass_early_eios = true
# bypass_pcie_switch = true
# bypass_pma_ltr = true
# bypass_pma_sw_done = false
# bypass_ppm_lock = false
# bypass_send_syncp_fbkp = true
# bypass_txdetectrx = true
# cdr_control = dis_cdr_ctrl
# cid_enable = dis_cid_mode
# cp_cons_sel = cp_cons_master
# cp_dwn_mstr = true
# cp_up_mstr = true
# ctrl_plane_bonding = individual
# data_mask_count = 0000
# data_mask_count_multi = 0
# dft_observation_clock_selection = dft_clk_obsrv_tx0
# early_eios_counter = 00
# force_freqdet = force_freqdet_dis
# free_run_clk_enable = false
# ignore_sigdet_g23 = false
# pc_en_counter = 00
# pc_rst_counter = 00
# pcie_hip_mode = hip_disable
# ph_fifo_reg_mode = phfifo_reg_mode_dis
# phfifo_flush_wait = 00
# pipe_if_g3pcs = pipe_if_8gpcs
# pma_done_counter = 00000
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# ppm_cnt_rst = ppm_cnt_rst_dis
# ppm_deassert_early = deassert_early_dis
# ppm_det_buckets = ppm_300_100_bucket
# ppm_gen1_2_cnt = cnt_32k
# ppm_post_eidle_delay = cnt_200_cycles
# ppmsel = ppmsel_300
# prot_mode = other_protocols
# reconfig_settings = {}
# rxvalid_mask = rxvalid_mask_dis
# sigdet_wait_counter = 000
# sigdet_wait_counter_multi = 0
# silicon_rev = 20nm5
# sim_mode = disable
# spd_chg_rst_wait_cnt_en = false
# sup_mode = user_mode
# testout_sel = ppm_det_test
# wait_clk_on_off_timer = 0
# wait_pipe_synchronizing = 00
# wait_send_syncp_fbkp = 000
# 
# 
# ================================================
# Module twentynm_hssi_common_pld_pcs_interface
# ================================================
# dft_clk_out_en = dft_clk_out_disable
# dft_clk_out_sel = teng_rx_dft_clk
# hrdrstctrl_en = hrst_dis
# pcs_testbus_block_sel = pma_if
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_rx_pcs
# ================================================
# double_read_mode = double_read_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_fifo_tx_pcs
# ================================================
# double_write_mode = double_write_dis
# prot_mode = non_teng_mode
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_gen3_rx_pcs
# ================================================
# block_sync = bypass_block_sync
# block_sync_sm = disable_blk_sync_sm
# cdr_ctrl_force_unalgn = disable
# lpbk_force = lpbk_frce_dis
# mode = disable_pcs
# rate_match_fifo = bypass_rm_fifo
# rate_match_fifo_latency = low_latency
# reconfig_settings = {}
# reverse_lpbk = rev_lpbk_dis
# rx_b4gb_par_lpbk = b4gb_par_lpbk_dis
# rx_force_balign = dis_force_balign
# rx_ins_del_one_skip = ins_del_one_skip_dis
# rx_num_fixed_pat = 0
# rx_test_out_sel = rx_test_out0
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_gen3_tx_pcs
# ================================================
# mode = disable_pcs
# reverse_lpbk = rev_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_bitslip = 00
# tx_gbox_byp = bypass_gbox
# 
# 
# ================================================
# Module twentynm_hssi_krfec_rx_pcs
# ================================================
# blksync_cor_en = detect
# bypass_gb = bypass_dis
# clr_ctrl = both_enabled
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# dv_start = with_blklock
# err_mark_type = err_mark_10g
# error_marking_en = err_mark_dis
# low_latency_en = disable
# lpbk_mode = lpbk_dis
# parity_invalid_enum = 08
# parity_valid_num = 4
# pipeln_blksync = enable
# pipeln_descrm = disable
# pipeln_errcorrect = disable
# pipeln_errtrap_ind = enable
# pipeln_errtrap_lfsr = disable
# pipeln_errtrap_loc = disable
# pipeln_errtrap_pat = disable
# pipeln_gearbox = enable
# pipeln_syndrm = enable
# pipeln_trans_dec = disable
# prot_mode = disable_mode
# receive_order = receive_lsb
# reconfig_settings = {}
# rx_testbus_sel = overall
# signal_ok_en = sig_ok_en
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_krfec_tx_pcs
# ================================================
# burst_err = burst_err_dis
# burst_err_len = burst_err_len1
# ctrl_bit_reverse = ctrl_bit_reverse_en
# data_bit_reverse = data_bit_reverse_dis
# enc_frame_query = enc_query_dis
# low_latency_en = disable
# pipeln_encoder = enable
# pipeln_scrambler = enable
# prot_mode = disable_mode
# silicon_rev = 20nm5
# sup_mode = user_mode
# transcode_err = trans_err_dis
# transmit_order = transmit_lsb
# tx_testbus_sel = overall
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen1_2
# ================================================
# elec_idle_delay_val = 0
# error_replace_pad = replace_edb
# hip_mode = dis_hip
# ind_error_reporting = dis_ind_error_reporting
# phystatus_delay_val = 0
# phystatus_rst_toggle = dis_phystatus_rst_toggle
# pipe_byte_de_serializer_en = dont_care_bds
# prot_mode = basic
# reconfig_settings = {}
# rpre_emph_a_val = 00
# rpre_emph_b_val = 00
# rpre_emph_c_val = 00
# rpre_emph_d_val = 00
# rpre_emph_e_val = 00
# rvod_sel_a_val = 00
# rvod_sel_b_val = 00
# rvod_sel_c_val = 00
# rvod_sel_d_val = 00
# rvod_sel_e_val = 00
# rx_pipe_enable = dis_pipe_rx
# rxdetect_bypass = dis_rxdetect_bypass
# silicon_rev = 20nm5
# sup_mode = user_mode
# tx_pipe_enable = dis_pipe_tx
# txswing = dis_txswing
# 
# 
# ================================================
# Module twentynm_hssi_pipe_gen3
# ================================================
# bypass_rx_detection_enable = false
# bypass_rx_preset = 0
# bypass_rx_preset_enable = false
# bypass_tx_coefficent = 00000
# bypass_tx_coefficent_enable = false
# elecidle_delay_g3 = 0
# ind_error_reporting = dis_ind_error_reporting
# mode = disable_pcs
# phy_status_delay_g12 = 0
# phy_status_delay_g3 = 0
# phystatus_rst_toggle_g12 = dis_phystatus_rst_toggle
# phystatus_rst_toggle_g3 = dis_phystatus_rst_toggle_g3
# rate_match_pad_insertion = dis_rm_fifo_pad_ins
# silicon_rev = 20nm5
# sup_mode = user_mode
# test_out_sel = disable_test_out
# 
# 
# ================================================
# Module twentynm_hssi_rx_pcs_pma_interface
# ================================================
# block_sel = eight_g_pcs
# channel_operation_mode = tx_rx_pair_enabled
# clkslip_sel = pld
# lpbk_en = disable
# master_clk_sel = master_rx_pma_clk
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_rx = pma_20b_rx
# pma_if_dft_en = dft_dis
# pma_if_dft_val = dft_0
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_ver = prbs_off
# prot_mode_rx = eightg_basic_mode_rx
# reconfig_settings = {}
# rx_dyn_polarity_inversion = rx_dyn_polinv_dis
# rx_lpbk_en = lpbk_dis
# rx_prbs_force_signal_ok = force_sig_ok
# rx_prbs_mask = prbsmask128
# rx_prbs_mode = teng_mode
# rx_signalok_signaldet_sel = sel_sig_det
# rx_static_polarity_inversion = rx_stat_polinv_dis
# rx_uhsif_lpbk_en = uhsif_lpbk_dis
# silicon_rev = 20nm5
# sup_mode = user_mode
# 
# 
# ================================================
# Module twentynm_hssi_rx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_rx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_rx = individual_rx
# hd_10g_fifo_mode_rx = fifo_rx
# hd_10g_low_latency_en_rx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_rx = pma_64b_rx
# hd_10g_prot_mode_rx = disabled_prot_mode_rx
# hd_10g_shared_fifo_width_rx = single_rx
# hd_10g_sup_mode = user_mode
# hd_10g_test_bus_mode = rx
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_rx = individual_rx
# hd_8g_fifo_mode_rx = fifo_rx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_rx = pma_20b_rx
# hd_8g_prot_mode_rx = basic_rm_disable_rx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_clklow_clk_hz = 09502f90
# hd_chnl_ctrl_plane_bonding_rx = individual_rx
# hd_chnl_fref_clk_hz = 09502f90
# hd_chnl_frequency_rules_en = disable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_rx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_operating_voltage = standard
# hd_chnl_pcs_ac_pwr_rules_en = disable
# hd_chnl_pcs_pair_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_rx_pwr_scaling_clk = pma_rx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_rx = fifo_rx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_rx_clk_hz = 09502f90
# hd_chnl_pma_dw_rx = pma_20b_rx
# hd_chnl_pma_rx_clk_hz = 09502f90
# hd_chnl_prot_mode_rx = basic_8gpcs_rm_disable_rx
# hd_chnl_shared_fifo_width_rx = single_rx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_chnl_transparent_pcs_rx = disable
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_rx = non_teng_mode_rx
# hd_fifo_shared_fifo_width_rx = single_rx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_rx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_rx = disabled_prot_mode_rx
# hd_krfec_sup_mode = user_mode
# hd_krfec_test_bus_mode = tx
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_rx = eightg_and_g3_pld_fifo_mode_rx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_rx = pma_20b_rx
# hd_pmaif_prot_mode_rx = eightg_basic_mode_rx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_rx_block_sel = eightg
# pcs_rx_clk_out_sel = eightg_clk_out
# pcs_rx_clk_sel = pld_rx_clk
# pcs_rx_hip_clk_en = hip_rx_disable
# pcs_rx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# 
# ================================================
# Module twentynm_hssi_tx_pcs_pma_interface
# ================================================
# bypass_pma_txelecidle = true
# channel_operation_mode = tx_rx_pair_enabled
# lpbk_en = disable
# master_clk_sel = master_tx_pma_clk
# pcie_sub_prot_mode_tx = other_prot_mode
# pldif_datawidth_mode = pldif_data_10bit
# pma_dw_tx = pma_20b_tx
# pma_if_dft_en = dft_dis
# pmagate_en = pmagate_dis
# prbs9_dwidth = prbs9_64b
# prbs_clken = prbs_clk_dis
# prbs_gen_pat = prbs_gen_dis
# prot_mode_tx = eightg_basic_mode_tx
# reconfig_settings = {}
# silicon_rev = 20nm5
# sq_wave_num = sq_wave_default
# sqwgen_clken = sqwgen_clk_dis
# sup_mode = user_mode
# tx_dyn_polarity_inversion = tx_dyn_polinv_dis
# tx_pma_data_sel = eight_g_pcs
# tx_static_polarity_inversion = tx_stat_polinv_dis
# uhsif_cnt_step_filt_before_lock = uhsif_filt_stepsz_b4lock_2
# uhsif_cnt_thresh_filt_after_lock_value = 0
# uhsif_cnt_thresh_filt_before_lock = uhsif_filt_cntthr_b4lock_8
# uhsif_dcn_test_update_period = uhsif_dcn_test_period_4
# uhsif_dcn_testmode_enable = uhsif_dcn_test_mode_disable
# uhsif_dead_zone_count_thresh = uhsif_dzt_cnt_thr_2
# uhsif_dead_zone_detection_enable = uhsif_dzt_disable
# uhsif_dead_zone_obser_window = uhsif_dzt_obr_win_16
# uhsif_dead_zone_skip_size = uhsif_dzt_skipsz_4
# uhsif_delay_cell_index_sel = uhsif_index_cram
# uhsif_delay_cell_margin = uhsif_dcn_margin_2
# uhsif_delay_cell_static_index_value = 00
# uhsif_dft_dead_zone_control = uhsif_dft_dz_det_val_0
# uhsif_dft_up_filt_control = uhsif_dft_up_val_0
# uhsif_enable = uhsif_disable
# uhsif_lock_det_segsz_after_lock = uhsif_lkd_segsz_aflock_512
# uhsif_lock_det_segsz_before_lock = uhsif_lkd_segsz_b4lock_16
# uhsif_lock_det_thresh_cnt_after_lock_value = 0
# uhsif_lock_det_thresh_cnt_before_lock_value = 0
# uhsif_lock_det_thresh_diff_after_lock_value = 0
# uhsif_lock_det_thresh_diff_before_lock_value = 0
# 
# 
# ================================================
# Module twentynm_hssi_tx_pld_pcs_interface
# ================================================
# hd_10g_advanced_user_mode_tx = disable
# hd_10g_channel_operation_mode = tx_rx_pair_enabled
# hd_10g_ctrl_plane_bonding_tx = ctrl_slave_abv_tx
# hd_10g_fifo_mode_tx = fifo_tx
# hd_10g_low_latency_en_tx = disable
# hd_10g_lpbk_en = disable
# hd_10g_pma_dw_tx = pma_64b_tx
# hd_10g_prot_mode_tx = disabled_prot_mode_tx
# hd_10g_shared_fifo_width_tx = single_tx
# hd_10g_sup_mode = user_mode
# hd_8g_channel_operation_mode = tx_rx_pair_enabled
# hd_8g_ctrl_plane_bonding_tx = ctrl_slave_abv_tx
# hd_8g_fifo_mode_tx = fifo_tx
# hd_8g_hip_mode = disable
# hd_8g_lpbk_en = disable
# hd_8g_pma_dw_tx = pma_20b_tx
# hd_8g_prot_mode_tx = basic_tx
# hd_8g_sup_mode = user_mode
# hd_chnl_channel_operation_mode = tx_rx_pair_enabled
# hd_chnl_ctrl_plane_bonding_tx = ctrl_slave_abv_tx
# hd_chnl_frequency_rules_en = enable
# hd_chnl_func_mode = enable
# hd_chnl_hclk_clk_hz = 00000000
# hd_chnl_hip_en = disable
# hd_chnl_hrdrstctl_en = disable
# hd_chnl_low_latency_en_tx = disable
# hd_chnl_lpbk_en = disable
# hd_chnl_pcs_tx_ac_pwr_uw_per_mhz = 00000
# hd_chnl_pcs_tx_pwr_scaling_clk = pma_tx_clk
# hd_chnl_pld_8g_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_fifo_mode_tx = fifo_tx
# hd_chnl_pld_pcs_refclk_dig_nonatpg_mode_clk_hz = 00000000
# hd_chnl_pld_tx_clk_hz = 09502f90
# hd_chnl_pld_uhsif_tx_clk_hz = 00000000
# hd_chnl_pma_dw_tx = pma_20b_tx
# hd_chnl_pma_tx_clk_hz = 09502f90
# hd_chnl_prot_mode_tx = basic_8gpcs_tx
# hd_chnl_shared_fifo_width_tx = single_tx
# hd_chnl_speed_grade = e2
# hd_chnl_sup_mode = user_mode
# hd_fifo_channel_operation_mode = tx_rx_pair_enabled
# hd_fifo_prot_mode_tx = non_teng_mode_tx
# hd_fifo_shared_fifo_width_tx = single_tx
# hd_fifo_sup_mode = user_mode
# hd_g3_prot_mode = disabled_prot_mode
# hd_g3_sup_mode = user_mode
# hd_krfec_channel_operation_mode = tx_rx_pair_enabled
# hd_krfec_low_latency_en_tx = disable
# hd_krfec_lpbk_en = disable
# hd_krfec_prot_mode_tx = disabled_prot_mode_tx
# hd_krfec_sup_mode = user_mode
# hd_pldif_hrdrstctl_en = disable
# hd_pldif_prot_mode_tx = eightg_and_g3_pld_fifo_mode_tx
# hd_pldif_sup_mode = user_mode
# hd_pmaif_channel_operation_mode = tx_rx_pair_enabled
# hd_pmaif_ctrl_plane_bonding = individual
# hd_pmaif_lpbk_en = disable
# hd_pmaif_pma_dw_tx = pma_20b_tx
# hd_pmaif_prot_mode_tx = eightg_basic_mode_tx
# hd_pmaif_sim_mode = disable
# hd_pmaif_sup_mode = user_mode
# pcs_tx_clk_out_sel = eightg_clk_out
# pcs_tx_clk_source = eightg
# pcs_tx_data_source = hip_disable
# pcs_tx_delay1_clk_en = delay1_clk_disable
# pcs_tx_delay1_clk_sel = pcs_tx_clk
# pcs_tx_delay1_ctrl = delay1_path0
# pcs_tx_delay1_data_sel = one_ff_delay
# pcs_tx_delay2_clk_en = delay2_clk_disable
# pcs_tx_delay2_ctrl = delay2_path0
# pcs_tx_output_sel = teng_output
# reconfig_settings = {}
# silicon_rev = 20nm5
# 
# Break key hit 
# Simulation stop requested.
run -a
# Break key hit 
# Simulation stop requested.
run -a
# Break key hit 
# Simulation stop requested.
run -a
# Break key hit 
# Simulation stop requested.
run -a
# Break key hit 
# Simulation stop requested.
write format wave -window .main_pane.wave.interior.cs.body.pw.wf /share/jinz/Altera/Arria10/XAUI/functional/wave.do
quit
